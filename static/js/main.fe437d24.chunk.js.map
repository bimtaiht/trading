{"version":3,"sources":["util/apiUtil.js","util/generalUtil.js","model/user/item/base/User.js","model/user/item/command/base/Dict.js","model/user/item/command/base/DictUtil.js","model/user/item/base/UserUtil.js","model/user/dict/User_Dict.js","model/user/admin/base/Admin.js","model/user/admin/adminuser/item/Item.js","model/user/admin/adminuser/item/ItemUtil.js","model/user/admin/adminuser/dict/Dict.js","model/user/admin/adminuser/dict/DictUtil.js","model/user/admin/base/AdminUtil.js","model/user/item/command/render/item/Item.js","model/user/item/command/render/item/ItemUtil.js","model/user/item/command/render/dict/Dict.js","model/user/dict/User_DictUtil.js","model/user/item/command/render/dict/DictUtil.js","model/main/entity/user/command/dict/_target/Target.js","model/main/entity/user/command/dict/_target/TargetType.js","model/main/entity/user/command/dict/_target/TargetUtil.js","model/main/entity/user/command/dict/base/Dict.js","model/main/entity/user/command/dict/base/DictUtil.js","model/main/entity/user/role/item/Item_Url.js","model/main/entity/user/role/item/Item.js","model/main/entity/user/command/base/CommandLevel.js","model/main/entity/user/command/base/Command.js","model/main/entity/user/command/base/CommandUtil.js","model/main/entity/user/command/base/CommandType.js","model/main/entity/user/role/item/ItemUtil.js","model/main/entity/user/role/dict/Dict.js","model/main/entity/user/role/dict/DictUtil.js","model/main/entity/coin/group/Group.js","model/main/entity/coin/base/base/Base_Url.js","model/main/entity/coin/base/base/Base.js","model/main/entity/coin/base/info/base/Base_Url.js","model/main/entity/coin/base/info/base/Base.js","model/main/entity/coin/base/info/base/BaseUtil.js","model/main/entity/trade/group/Group.js","model/main/entity/trade/future/base/Base_Url.js","model/main/entity/trade/future/base/Base.js","model/main/entity/trade/future/base/BaseUtil.js","model/main/entity/trade/future/base/Util.js","model/main/entity/trade/future/dict/Dict.js","model/main/entity/trade/future/dict/DictUtil.js","model/main/entity/trade/group/GroupUtil.js","model/main/entity/coin/base/base/BaseUtil.js","model/main/entity/coin/base/dict/Dict.js","model/main/entity/coin/base/dict/DictUtil.js","model/main/entity/coin/group/GroupUtil.js","model/main/single/model/PMDataUtil.js","model/main/entity/view/ViewMode.js","model/main/single/model/PMData.js","model/main/entity/layout/layout/Layout.js","model/image/Image.js","model/image/ImageUtil.js","model/image/ImageView.js","model/main/entity/layout/header/Header.js","model/main/entity/layout/body/Body.js","util/commandUtil.js","model/main/entity/view/ViewType.js","model/main/entity/layout/body/BodyUtil.js","model/main/entity/layout/footer/Footer.js","model/main/entity/layout/layout/LayoutUtil.js","model/main/entity/layout/header/HeaderUtil.js","model/main/entity/layout/footer/FooterUtil.js","model/text/TextRenderState.js","model/text/TextState.js","model/text/TextVM.js","model/text/TextVMUtil.js","model/input/NewInputView.js","model/input/InputView.js","model/text/TextRenderItem.js","util/htmlUtil.js","model/svg/AlignLeftView.js","model/svg/AlignMiddleView.js","model/svg/AlignRightView.js","model/editor/tool/QuillToolType.js","model/float/FloatItemVM.js","model/float/FloatItemVMUtil.js","model/float/FloatItemView.js","model/select/SelectView.js","model/select/SelectVM.js","model/select/SelectVMUtil.js","model/color/ColorPicker.js","model/color/ColorPickerView.js","model/delete/EntDelete_ToggleType.js","model/delete/EntDelete_UseType.js","model/delete/EntDeleteView.js","model/delete/EntDelete_VisibleType.js","model/delete/EntDelete.js","model/delete/EntDeleteUtil.js","model/editor/tool/QuillToolUtil.js","model/color/ColorPickerUtil.js","model/editor/tool/QuillTool.js","model/editor/tool/QuillToolView.js","model/editor/QuillEditor.js","model/editor/QuillEditorUtil.js","model/editor/QuillEditorView.js","model/text/TextRenderItemUtil.js","model/text/TextRender_Dict.js","model/text/EditableTextView.js","model/text/EditableTextVM.js","model/text/EditableTextVMUtil.js","model/user/item/base/UserVM.js","model/user/item/base/UserVMUtil.js","model/user/dict/User_DictVM.js","model/user/login/Login.js","model/user/login/LoginUtil.js","model/user/newpassword/NewPassword.js","model/user/newpassword/NewPasswordUtil.js","model/user/dict/User_Dict_ViewType.js","model/user/admin/base/AdminVM.js","util/inputUtil.js","model/user/admin/usermanager/item/ItemVM.js","model/user/admin/usermanager/item/ItemVMUtil.js","model/user/admin/usermanager/table/TableView.js","model/user/admin/usermanager/dict/DictVM.js","model/user/admin/usermanager/dict/DictVMUtil.js","model/user/admin/adminuser/item/ItemVM.js","model/user/admin/adminuser/item/ItemVMUtil.js","model/user/admin/adminuser/table/TableView.js","model/user/admin/adminuser/dict/DictVM.js","model/user/admin/adminuser/dict/DictVMUtil.js","model/user/admin/base/AdminVMUtil.js","model/user/dict/User_DictVMUtil.js","model/main/entity/user/role/table/TableView.js","model/main/entity/user/role/item/ItemVM.js","model/main/entity/user/command/base/CommandVM.js","model/main/entity/user/command/base/CommandVMUtil.js","model/main/entity/user/role/item/ItemVMUtil.js","model/main/entity/user/role/dict/DictVM.js","model/main/entity/user/role/dict/DictVMUtil.js","model/main/entity/coin/group/GroupVM.js","model/main/entity/coin/base/base/BaseVM.js","model/main/entity/coin/base/field/Field.js","model/ref/RefDict.js","model/ref/RefDictUtil.js","util/refUtil.js","model/field/FieldView.js","model/field/Field.js","model/field/FieldUtil.js","model/main/entity/coin/base/info/base/BaseVM.js","model/main/entity/coin/base/info/field/Field.js","model/main/entity/coin/base/info/base/BaseVMUtil.js","model/main/entity/trade/group/GroupVM.js","model/main/entity/trade/future/field/Field.js","model/main/entity/trade/future/base/BaseVM.js","model/main/entity/trade/future/base/BaseVMUtil.js","model/main/entity/trade/future/dict/DictVM.js","model/main/entity/trade/future/summary/SummaryVM.js","model/main/entity/trade/future/summary/SummaryVMUtil.js","model/main/entity/trade/future/dict/DictVMUtil.js","model/main/entity/trade/group/GroupVMUtil.js","model/main/entity/coin/base/base/BaseVMUtil.js","model/main/entity/coin/base/dict/DictVM.js","model/main/entity/coin/base/dict/DictVMUtil.js","model/main/entity/coin/group/GroupVMUtil.js","model/main/single/form/PMDataVMUtil.js","model/main/entity/layout/header/HeaderView.js","model/main/entity/layout/body/BodyView.js","model/main/entity/layout/footer/FooterView.js","model/main/entity/layout/layout/LayoutView.js","model/main/single/form/PMDataView.js","model/main/single/form/PMDataVM.js","App.js","reportWebVitals.js","index.js"],"names":["http","timeout","axios","create","baseURL","Accept","handleNetworkError","err","showMessage","message","error","data","undefined","handleResponse","response","success","status","statusText","callApi","action","a","console","log","timeout_default","put","url","payload","config","result","post","randomId","Intl","DateTimeFormat","Math","random","toString","substr","newGUID","replace","c","crypto","getRandomValues","Uint8Array","Remove","dict","key","index","findIndex","x","Key","splice","Add","func","isDelete","newfunc","push","Value","Add_2","IsDelete","Handle","newDict_Handle","forEach","filter","SaveDatabase","q","handle","apiData","ApiData","isNew","_id","api","then","DeleteDatabase","SingleFilter","list","nullHandle","obj","User","OnSet_id_Func_Dict","Save","Password","genUtil","Url","Delete","CurrentList","Index","this","__id","v","tempId","TempId","userName","username","Username","name","Name","password","Dict","Users","indexOf","commandDict","util","Targets","GetTarget","target","Clear","item","IsEqual","GetFromDb","qI","get","userToken","Token","GetCommandDict","commandDictUtil","GetData","User_Dict","OnSet_loginId_Func","_loginId","OnSet_Users_Func","AddUser","userUtil","GetUser","userId","makeObservable","observable","token","localStorage","getItem","setItem","removeItem","loginUser","loginId","OnSet_LoginUser","users","admin","commandRender_Dict","headers","Admin","adminUser_Dict","Item","role","Items","OnSet_Items_Func","AddItem","itemUtil","items","Handle_Items","IsGet_Items","setObj","map","iUtil","GetAdminUser_Dict","auDictUtil","GetItem","type","Type","Handle_LoginUser","IsGet_LoginUser","LoginUser","Config","Handle_Users","IsGet_Users","length","GetAdmin","adminUtil","GetCommandRender_Dict","commandRender_DictUtil","Target","other","OnSet_Role_Func","Refresh_Role","Validate","commandData","roleUrl","Role","Commands","general","GetQueryData","GetRoleUrl","tt","Handle_Role","IsGet_Role","QueryData","rolename_func","rolename","PMData","Instance","RoleDict","RoleUrl","q1","q2","commands","isValid","pmData","UserDict","targetUtil","GetCommand","Level","none","view","edit","GetOrder","Command","cl","level","commandLevel","content","answer","List","GetName","GetCommands","commandType","commandUtil","getObj","Group","OnSet_CurrentItem_Func","currentItem","itemDict","Base","Code","Reference_RatioName","OnGet_Info_Func","isOwned","Clone","OnSave","tradeGroup","info","creatorId","code","ref_rationame","Star","Rating","Quantity","Description","addin","description","addinId","Addin","Coin","futureDict","InitialPrice","takeProfit_Price","TakeProfit_Percent","stopLoss_Price","StopLoss_Percent","IsSubmit","Submit","EarnPercent","coin","_coinId","InCoin","coinId","initialprice","takeprofitprecent","stoplosspercent","issubmit","earnpercent","GetTakeProfit_Price","price","percent","val","pow","mul","ceil","GetTakeProfit_Percent","profit","TakeProfit_Price","GetStopLoss_Price","GetStopLoss_Percent","loss","StopLoss_Price","Handle_Coin","IsGet_Coin","CoinGroup","ItemDict","Handle_IsOwned","IsGet_IsOwned","IsOwned","userDict","res","CreatedDate","createdDate","getApi","GetFutureDict","futureDictUtil","GetFromData","GetTradeGroup","tradeGroupUtil","Handle_Info","IsGet_Info","Info","infoUtil","GetOne","GetItemDict","itemDictUtil","Handle_CurrentItem","routeData","RouteData","IsGet_CurrentItem","meta","baseUtil","CurrentItem","GetUserDict","baseUrl","userDictUtil","CommandRender_Dict","Render","AdminUser_Dict","GetRoleDict","roleDictUtil","OnSet_LoginUser_Func","GetCoinGroup","coinGroupUtil","IsPublish","ViewMode","vm","roleDict","coinGroup","instance","Layout","header","body","footer","Image","Source","Alt","Width","Height","source","alt","width","height","ImageView","props","store","state","style","Style","className","ClassName","onClick","onDoubleClick","onMouseEnter","onMouseLeave","src","Component","observer","Header","PMDataVM","MainMenu","img","imgUtil","Body","targetData","CommandDict","Current","home","type2","GetContentView","vt","View","ContentView","TradeGroup","GetMainView","Footer","GetHeader","headerUtil","GetBody","bodyUtil","GetFooter","footerUtil","_default","text","TextVM","placeholder","State","ts","onSetContent","OnSetContent","inputStyle","wrapper","position","NewInputView","handleChange","e","Content","value","OnPaste","preventDefault","pasteEvent","originalEvent","clipboardData","getData","OnKeyDown","ctrlKey","which","keyCode","contentEditable","React","createRef","textVMUtil","Ref","onFocus","OnFocus","ref","innerRef","Placeholder","onChange","InputView","InputRegex","test","onKeyDown","TextRenderItem","render","createMarkup","__html","AlignLeftView","viewBox","xmlns","d","AlignMiddleView","AlignRightView","align_left","align_middle","align_right","font_family","font_size","font_color","_delete","FloatItemVM","getClassName","location","loc","FloatItemView","getWrapperContent","floatItemVMUtil","Option","Select","SelectView","onValueChange","SelectedIndex","onDropdownVisibleChange","Open","SelectVM","InitialIndex","elems","displayContent","TitleRender","id","IdRender","isNaN","floatElem","CanClear","floatItemStore","size","DivStyle","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","open","CanOpen","disabled","Disabled","IsDisabled","initialItem","GetInitialIndex","InitialItem","selectedIndex","selectedItem","SetValue","SelectedItem","GetSelectedItem","canOpen","isDisabled","IsSet_InitialItem","initialIndex","OnSelectedItemChanged","padding","titleRender","OnSetOpen","GetDisabled_Func","GetTitleRender","DisplayContent","ColorPicker","color","PickColor","Color","hex","OnSetColor","ColorPickerView","MainView","title","trigger","placement","backgroundColor","manual","mobx","EntDeleteView","EntDelete","UseType","ut","Is_Visible","WrapperStyle","WrapperView","AdditionElement","VisibleType","BlankStyle","is_Visible","ToggleType","is_Hover_Visible","Show_Hover","stopPropagation","OnPre_ShowHover","Is_Hover_Visible","Toggle_Hover","PreRun","IsRun_Cancel","OnPreRun","Run","PreCancel","Cancel","Show","Hide","OnPreHide","Title","OnSet_Is_Hover_Visible","run","OnRun","cancel","OnCancel","showHover_Button","Retrieve_ShowHover_Button","retrieve_ShowHover_Button","Retrieve_WrapperView","retrieve_WrapperView","Modal_ContentView","visible","onVisibleChange","ShowHover_Button","modal_ButtonView","modal_InfoView","modal_ContentView","Modal_InfoView","Modal_ButtonView","display","QuillTool","Get_DefaultData","selUtil","colorPickerUtil","toolView","toolClass","ToolClass","defaultValue","persist","Data","contentView","QuillToolView","ToolView","QuillEditor","Focus","current","focus","IsFocusInit","IsHaveTool","tools","subTools","GetTool","FullTools","toolUtil","Tools","concat","SubTools","QuillEditorView","OnChange","LastContent","IsCancel","altKey","OnAltEnter","charCode","OnEmptyBackspace","OnTab","modules","syntax","toolbar","container","handlers","Handles","clipboard","matchVisual","Tool_Container","formats","PlaceHolder","GetRender","rs","context","OnDoubleClick","OnClick","storageType_css","StorageType","dangerouslySetInnerHTML","htmlUtil","Is_Tool_Visible","Is_Edit_Visible","Edit","r_onFocus","Editor","Is_OK_Visible","EditOK","TextRender_Dict","renderUtil","EditableTextView","EditableTextVM","IsEditing","OnSet_RenderState_Func_Dict","renderState","CanChange_RenderState","Ready","RenderState","NotReady","Render_Dict","OnSet_Ref_Func_Dict","setFocus","Ref_Element","editor","titleFunc","render_Dict","Old_RenderState","ref_Element","getEl","canEdit","isToolVisible","GetEditor","InitialContent","editorUtil","UserVM","Hide_Tool","IsSaveDatabase","ModelItem","UsernameVM","OnSet_RenderState","usernameVM","editTextUtil","CanEdit","User_DictVM","Logout","viewType","demo","user","ViewType","IsSet_Model","login","newPassword","loginRender","userRender","mainViewRender","MainViewRender","modalViewRender","ModalViewRender","viewRender","ViewRender","Login","Is_Modal_Visible","ModalOK","pw","warn","Initial","PasswordVM","passwordVM","GetUsernameVM","GetPasswordVM","GetButtonView","GetModalView","hideVisible","onCancel","dictVM","uUtil","uVMUtil","NewPassword","opw","OldPassword","npw","rnpw","ReNewPassword","OpenModal","OldPasswordVM","NewPasswordVM","ReNewPasswordVM","oldPasswordVM","newPasswordVM","reNewPasswordVM","oldpassword","newpassword","GetOldPasswordVM","GetNewPasswordVM","GetReNewPasswordVM","AdminVM","userManager_Dict","alt_enter","enter","preFunc","postFunc","GetInput","field","postOkFunc","set_default","Get_Shortcut","IsEscape","okfunc","ItemVM","tempUsername","IsPasswordChanged","OK","TempUsername","inputUtil","TempPassword","IsUsernameChanged","deleteVM","GetRowView","UsernameView","PasswordView","DeleteVM","GetDeleteVM","TableView","DictVM","RowView","host","OnSet_User_Func","user_Select","Handle_User","IsGet_User","GetUser_Select","setObj2","User_Select","GetDefault_ViewRender","UserManager_Dict","GetUserManager_Dict","um_dUtil","GetDemo","demoItemUtil","select","GetLogin","loginUtil","GetNewPassword","newpasswordUtil","Handle_ViewType","IsGet_ViewType","GetViewType","GetDefault_LoginRender","ButtonView","GetDefault_UserRender","GetDefault_MainViewRender","LoginRender","UserRender","GetDefault_ModalViewRender","ModalView","nameVM","NameVM","CommandVM","UpLevel","GetView","n_index","NameView","GroupVM","BaseVM","GetField","Fields","SetCurrent","fields","IsCreator","IsOwner","RefDict","GetRef","ClickOutsite","refName","Target_RefData","GetRefItem","Events","contains","CheckOutside","Export_RefData","loadType","document","addEventListener","removeEventListener","FieldView","Field","refUtil","RefData","ValueVM","PreReady","PreNotReady","PreEdit","PreEditOK","refData","valueGet","valueSet","ValueGet","RefineValue","IsRefinedValue","ValueSet","OnSetValue","valueVM","ValueSet_OK","ValueVM_Render","valueSet_OK","storageType","GetRefData","GetDefault_ValueGet","GetDefault_ValueSet","Key_id","Get_WrapperView","GetFields","inputs","i","fName","param","r_name","f","fieldUtil","validate","GetStarView","star","rating","StarFilled","StarOutlined","takeprofitprice","stoplossprice","SetField","IsStopPropagation","valVM","Refresh_Field","finish","Is_SaveCancel","targetFields","model","modelUtil","checkedChildren","unCheckedChildren","checked","CheckCircleOutlined","RewardRisk_Ratio","toFixed","summary","TitleView","Summary","SummaryVM","GetEarnPercent","reduce","acc","earnPercent","colSpan","GetSummary","summaryUtil","FutureDict","pmDataVM","GetTitleView","Css","OnEdit","to","LinkOutlined","ItemsView","Owner","Buy","Creator","Store","GetLayout","HeaderView","BodyView","FooterView","LayoutView","match","params","withRouter","PMDataView","basename","process","path","exact","component","OnSet_IsAdmin_Func_Dict","isAdmin","viewMode","UnAuthorized_View","AddinGroup","layout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.fe437d24.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nexport const API_URL = 'https://api.bimdev.vn/api';\r\n\r\n// const http = axios.create({\r\n//   baseURL: API_URL,\r\n//   Accept: 'application/json',\r\n//   'Content-Type': 'application/json',\r\n//   //timeout: 20000\r\n//   timeout: 20000000\r\n// });\r\n\r\nconst http = (timeout) => axios.create({\r\n  baseURL: API_URL,\r\n  Accept: 'application/json',\r\n  'Content-Type': 'application/json',\r\n  timeout,\r\n});\r\n\r\nconst handleNetworkError = (err, showMessage) => {\r\n  if (showMessage) {\r\n    message.error(`Error sending request: ${err}`);\r\n  }\r\n  return {\r\n    data: undefined\r\n  };\r\n}\r\n\r\nconst handleResponse = (response) => {\r\n  // Parse the axios response\r\n  const success = response.status >= 200 && response.status < 300;\r\n  const data = response.data;\r\n  let message = response.statusText;\r\n  return {\r\n    success,\r\n    data,\r\n    message\r\n  };\r\n}\r\n\r\nexport const callApi = async (action, showMessage) => {\r\n  try {\r\n    const response = await action;\r\n    return handleResponse(response);\r\n  } catch (err) {\r\n    console.log(err)\r\n    return handleNetworkError(err, showMessage);\r\n  } finally { }\r\n}\r\n\r\nexport const timeout_default = 20000\r\n\r\nexport const get = async (url, config, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  return callApi(http(timeout).get(url, config));\r\n}\r\n\r\nexport const put = async (url, payload, config, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).put(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const post = async (url, payload, config, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).post(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const del = async (url, payload, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).delete(url, payload));\r\n  return result;\r\n}","import { PMData } from '../model/main/single/model/PMData'\r\nimport { PMDataVM } from '../model/main/single/form/PMDataVM'\r\nimport * as api from './apiUtil'\r\n\r\nexport let dtFormat = new Intl.DateTimeFormat('en-GB')\r\n\r\nexport const deepClone = (q) => {\r\n  return JSON.parse(JSON.stringify(q))\r\n}\r\n\r\nexport const numberWithCommas = (\r\n  num,\r\n  decimalChar = ',',\r\n  thousandChar = '.'\r\n) => {\r\n  var parts = num.toString().split('.')\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandChar)\r\n  return parts.join(decimalChar)\r\n}\r\n\r\n// random\r\nexport const randomId = () => {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n  return Math.random().toString(36).substr(2, 9)\r\n}\r\n\r\nexport const newGUID = () => {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n    (\r\n      c ^\r\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n    ).toString(16)\r\n  )\r\n}\r\n\r\nexport const randomInt = (digitLength = 4) => {\r\n  return Math.floor(Math.random() * Math.pow(10, digitLength))\r\n}\r\n\r\n// model\r\nexport const UpdateFromModel = (obj, action) => {\r\n  obj.M2VM = true\r\n  action()\r\n  obj.M2VM = false\r\n}\r\n\r\nexport const MoveItem = (list, oldIndex, newIndex) => {\r\n  if (oldIndex === -1 || newIndex === -1 || oldIndex === newIndex) return\r\n  var temp = list[oldIndex]\r\n  list[oldIndex] = list[newIndex]\r\n  list[newIndex] = temp\r\n}\r\n\r\nexport const IsEqual = (list1, list2) => {\r\n  if (list1.length !== list2.length) return false\r\n  var isValidCheck = true\r\n  var isEqual = true\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && x !== list2[i]) {\r\n      isValidCheck = false\r\n      isEqual = false\r\n    }\r\n  })\r\n\r\n  return isEqual\r\n}\r\n\r\nexport const IsSameValues = (list1, list2) => {\r\n  var isValidCheck = true\r\n  var isSame = true\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && !list2.includes(x)) {\r\n      isValidCheck = false\r\n      isSame = false\r\n    }\r\n  })\r\n\r\n  return isSame\r\n}\r\n\r\nexport const GroupBy = function (xs, key, gr_Prop) {\r\n  var groups = []\r\n\r\n  xs.forEach((x) => {\r\n    var val = x[key]\r\n    var group = undefined\r\n    var index = groups.findIndex((y) => val === y.Key)\r\n    if (index === -1) {\r\n      group = {\r\n        Key: val,\r\n        Items: [],\r\n      }\r\n\r\n      if (gr_Prop) {\r\n        group[gr_Prop] = val\r\n      }\r\n\r\n      groups.push(group)\r\n    } else {\r\n      group = groups[index]\r\n    }\r\n    group.Items.push(x)\r\n  })\r\n\r\n  return groups\r\n}\r\n\r\nexport const Remove = (dict, key) => {\r\n  var index = dict.findIndex((x) => x.Key === key)\r\n  if (index !== 0) {\r\n    return dict.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport const Add = (dict, func, isDelete = true) => {\r\n  var key = newGUID()\r\n\r\n  var newfunc = () => {\r\n    func()\r\n    if (isDelete) {\r\n      Remove(dict, key)\r\n    }\r\n  }\r\n\r\n  dict.push({\r\n    Key: key,\r\n    Value: newfunc,\r\n  })\r\n}\r\n\r\nexport const Add_2 = (dict, func, isDelete = true) => {\r\n  dict.push({\r\n    Key: newGUID(),\r\n    Value: func,\r\n    IsDelete: isDelete,\r\n  })\r\n}\r\n\r\nexport const Handle = (dict, newDict_Handle) => {\r\n  dict.forEach((x) => x.Value())\r\n\r\n  dict = dict.filter((x) => !x.IsDelete)\r\n  newDict_Handle(dict)\r\n}\r\n\r\n// Truy xuất thông tin Excel\r\nexport const ExcelColumnName = (n) => {\r\n  var ordA = 'A'.charCodeAt(0)\r\n  var ordZ = 'Z'.charCodeAt(0)\r\n  var len = ordZ - ordA + 1\r\n\r\n  var s = ''\r\n  while (n >= 0) {\r\n    s = String.fromCharCode((n % len) + ordA) + s\r\n    n = Math.floor(n / len) - 1\r\n  }\r\n  return s\r\n}\r\n\r\nexport const ExcelCellName = (row, col) => {\r\n  return `${ExcelColumnName(col)}${row + 1}`\r\n}\r\n\r\nexport const ExcelRangeName = (row1, col1, row2, col2) => {\r\n  return `${ExcelCellName(row1, col1)}:${ExcelCellName(row2, col2)}`\r\n}\r\n\r\n// Max min\r\nexport const MinMax = (arr) => {\r\n  return arr.reduce(\r\n    ({ min, max }, v) => ({\r\n      min: min < v ? min : v,\r\n      max: max > v ? max : v,\r\n    }),\r\n    { min: arr[0], max: arr[0] }\r\n  )\r\n}\r\n\r\n// Save Database\r\nexport const SaveDatabase = (q, url, handle) => {\r\n  var apiData = q.ApiData\r\n  var _id = apiData._id\r\n\r\n  var isNew = _id ? false : true\r\n  const apiFunc = () =>\r\n    isNew ? api.post(`${url}/add`, apiData) : api.put(`${url}/edit`, apiData)\r\n\r\n  apiFunc()\r\n    .then((response) => response.data)\r\n    .then((data) => {\r\n      if (isNew) {\r\n        q._id = data._id\r\n      }\r\n      handle(data, isNew)\r\n    })\r\n}\r\n\r\nexport const DeleteDatabase = (q, url, handle) => {\r\n  var apiData = {\r\n    _id: q._id,\r\n  }\r\n\r\n  const apiFunc = () => api.put(`${url}/delete`, apiData)\r\n\r\n  apiFunc()\r\n    .then((response) => response.data)\r\n    .then((data) => {\r\n      handle(data)\r\n    })\r\n}\r\n\r\n// Get plain text from paste\r\nexport const GetPlainText = (pasteEvent) => {\r\n  var text = (pasteEvent.originalEvent || pasteEvent).clipboardData.getData(\r\n    'text/plain'\r\n  )\r\n  return text\r\n}\r\n\r\n// Remove new line\r\nexport const RemoveNewLine = (text) => {\r\n  return text.replace(/\\r?\\n|\\r/g, '')\r\n}\r\n\r\n// First - Last Item\r\nexport const GetFirst = (list) => {\r\n  return list.length !== 0 ? list[0] : undefined\r\n}\r\n\r\nexport const GetLast = (list) => {\r\n  return list.length !== 0 ? list[list.length - 1] : undefined\r\n}\r\n\r\n// Image\r\nexport const IsImage = (fileName) => {\r\n  var isValid = false\r\n  var list = ['.jpg', '.png', '.jpeg']\r\n\r\n  list.forEach((x) => {\r\n    if (!isValid && fileName.includes(x)) {\r\n      isValid = true\r\n    }\r\n  })\r\n\r\n  return isValid\r\n}\r\n\r\nexport const SingleFilter = (list, filter, nullHandle) => {\r\n  var index = list.findIndex(filter)\r\n  var obj = index !== -1 ? list[index] : undefined\r\n\r\n  if (obj === undefined && nullHandle) {\r\n    var obj = nullHandle()\r\n    list.push(obj)\r\n  }\r\n\r\n  return obj\r\n}\r\n","import { message } from 'antd';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as util from './UserUtil'\r\n\r\nexport class User {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  userName\r\n  get Username(){\r\n    if (!this.userName){\r\n      this.userName = 'username'\r\n    } return this.userName\r\n  } set Username(v){\r\n    this.userName = v\r\n  }\r\n\r\n  Password\r\n\r\n  Name\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      username : this.Username,\r\n      name : this.Name,\r\n      password : this.Password\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n\r\n  get Url() {\r\n    return this.Dict.Url\r\n  }\r\n\r\n  Save = (handle) => {\r\n    this.SaveDatabase(false, handle);\r\n    this.Password = undefined\r\n  } \r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, this.Url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Users\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n\r\n    if (this._id) {\r\n      this.DeleteDatabase(false)\r\n    }\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, this.Url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successflly!');\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n\r\n  // command\r\n  commandDict\r\n  get CommandDict(){\r\n    if (!this.commandDict){\r\n      this.commandDict = util.GetCommandDict(this)\r\n    } return this.commandDict;\r\n  }\r\n}","import * as util from './DictUtil'\r\n\r\nexport class Dict {\r\n  // constructor() {\r\n  //   makeObservable(this, {\r\n\r\n  //   })\r\n  // }\r\n\r\n  Dict\r\n\r\n  get userId(){\r\n    return this.Dict._id\r\n  }\r\n\r\n  Targets = []\r\n\r\n  GetTarget = (target) => {\r\n    return util.GetTarget(this, target)\r\n  }\r\n\r\n  Clear = () => {\r\n    this.Targets = [];\r\n  }\r\n}","import { Dict } from \"./Dict\";\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n// import * as targetUtil from '../target/TargetUtil'\r\n\r\n// instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Method\r\nexport const GetTarget = (q, target) => {\r\n  var list = q.Targets;\r\n  var item = genUtil.SingleFilter(list, x => x.IsEqual(target));\r\n  if (item == null) {\r\n    // item = targetUtil.GetFromData(target, q);\r\n    list.push(item);\r\n  }\r\n  return item;\r\n}","import { User } from \"./User\"\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as commandDictUtil from '../command/base/DictUtil'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict);\r\n  qI._id = data._id\r\n  qI.Username = data.username;\r\n  qI.Name = data.name;\r\n\r\n  if (data.userToken){\r\n    dict.Token = data.userToken\r\n  }\r\n  \r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new User();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetCommandDict = (q) => {\r\n  return commandDictUtil.get(q);\r\n}\r\n\r\n// Api\r\nexport const GetData = (url, apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './User_DictUtil'\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport * as userUtil from '../item/base/UserUtil'\r\n\r\nconst userToken = 'userToken'\r\n\r\nexport class User_Dict {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      _loginId: observable,\r\n    })\r\n  }\r\n\r\n  Url\r\n\r\n  token\r\n  get Token(){\r\n    if (!this.token){\r\n      this.token = localStorage.getItem(userToken);\r\n    } return this.token\r\n  } set Token(v){\r\n    this.token = v\r\n    if (!v){\r\n      localStorage.removeItem(userToken)\r\n    } else {\r\n      localStorage.setItem(userToken,v)\r\n    }\r\n  }\r\n  \r\n  // LoginUser\r\n  OnSet_loginId_Func =[]\r\n\r\n  _loginId = undefined\r\n  get loginId (){\r\n    return this._loginId\r\n  } set loginId(v){\r\n    this._loginId = v\r\n\r\n    genUtil.Handle(this.OnSet_loginId_Func,\r\n      (v) => this.OnSet_loginId_Func = v)\r\n  }\r\n\r\n  loginUser\r\n  get LoginUser(){\r\n    if (!this.loginUser){\r\n      util.Handle_LoginUser(this)\r\n    } return this.loginUser;\r\n  } set LoginUser(v){\r\n    this.loginUser = v;\r\n    this.loginId = v?._id\r\n\r\n    if (!v){\r\n      this.Token = v;\r\n    }\r\n\r\n    if (this.OnSet_LoginUser){\r\n      this.OnSet_LoginUser(v);\r\n    }\r\n  }\r\n\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  users\r\n  get Users(){\r\n    if (!this.users){\r\n      util.Handle_Users(this)\r\n    } return this.users\r\n  } set Users(v){\r\n    this.users = v;\r\n\r\n    genUtil.Handle(this.OnSet_Users_Func,\r\n      (v) => this.OnSet_Users_Func = v)\r\n  }\r\n\r\n  AddUser = () => {\r\n    var qI = userUtil.get(this);\r\n\r\n    this.Users.push(qI);\r\n    return qI;\r\n  }\r\n\r\n  GetUser = (userId, handle) => {\r\n    util.GetUser(this, userId, handle)\r\n  }\r\n\r\n  // Admin\r\n  admin\r\n  get Admin(){\r\n    if(!this.admin){\r\n      this.admin = util.GetAdmin(this)\r\n    } return this.admin;\r\n  }\r\n\r\n  // Command Render\r\n  commandRender_Dict\r\n  get CommandRender_Dict(){\r\n    if (!this.commandRender_Dict){\r\n      this.commandRender_Dict = util.GetCommandRender_Dict(this)\r\n    } return this.commandRender_Dict;\r\n  }\r\n\r\n  get Config(){\r\n    return {\r\n      headers : {\r\n        'Authorization': 'Bearer ' + this.Token\r\n      }\r\n    }\r\n  }\r\n}","import * as util from './AdminUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class Admin {\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  get Users(){\r\n    return this.Dict.Users\r\n  }\r\n\r\n  // Dict\r\n  Dict\r\n\r\n  adminUser_Dict\r\n  get AdminUser_Dict(){\r\n    if (!this.adminUser_Dict){\r\n      this.adminUser_Dict = \r\n        util.GetAdminUser_Dict(this)\r\n    } return this.adminUser_Dict\r\n  }\r\n\r\n  get Url(){\r\n    return this.Dict.Url\r\n  }\r\n}","import { message } from 'antd';\r\nimport * as util from './ItemUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class Item {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  get Url() {\r\n    return this.Dict.Url\r\n  }\r\n\r\n  // User\r\n  userId\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      userId: this.userId,\r\n      role: \"Admin\"\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  Save = (handle) => {\r\n    const save = () => this.SaveDatabase(false, handle);\r\n    save();\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, this.Url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(false)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, this.Url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successflly!');\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","import { Item } from './Item'\r\nimport { message } from 'antd'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.userId = data.userId\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// Method\r\n\r\n\r\n// Api\r\nexport const GetData = (url, apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as util from './DictUtil'\r\nimport * as itemUtil from '../item/ItemUtil'\r\nimport { message } from 'antd'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class Dict {\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n    \r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var qI = itemUtil.get(this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n}","import { Dict, ExportSet_Dict } from \"./Dict\"\r\nimport * as iUtil from '../item/ItemUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => iUtil.GetFromDb(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n    }\r\n\r\n    iUtil.GetData(q.Url, apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\n\r\n// Method\r\n","import { Admin } from \"./Admin\";\r\nimport * as userUtil from '../../item/base/UserUtil'\r\nimport * as auDictUtil from '../adminuser/dict/DictUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Admin();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Users = (q) => {\r\n  if (q.IsGet_Users) return undefined\r\n  q.IsGet_Users = true;\r\n\r\n  var url = q.Url\r\n\r\n  const setObj = (data) => {\r\n    q.Users = data.map(x => {\r\n      return q.GetUser_Func(x)\r\n    });\r\n    q.IsGet_Users = false;\r\n  }\r\n\r\n  var apiData = {}\r\n\r\n  userUtil.GetData(\r\n    url,\r\n    apiData, (data) => setObj(data)\r\n  )\r\n}\r\n\r\n// dict\r\nexport const GetAdminUser_Dict = (q) => {\r\n  return auDictUtil.get(q)\r\n}\r\n\r\n// Method\r\n","import * as util from './ItemUtil'\r\n\r\nexport class Item {\r\n  Type\r\n\r\n  Render\r\n}","import { Item } from \"./Item\";\r\n\r\n// instance\r\nexport const GetFromData = (type, dict) => {\r\n  var qI = get(dict);\r\n  qI.Type = type\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Method\r\n","import * as util from './DictUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as itemUtil from '../item/ItemUtil'\r\n\r\nexport class Dict {\r\n  Items = []\r\n\r\n  GetItem = (type) => {\r\n    var list = this.Items;\r\n    var item = genUtil.SingleFilter(list, x => x.Type === type);\r\n    if (!item){\r\n      item = itemUtil.GetFromData(type, this);\r\n      list.push(item)\r\n    } \r\n    return item;\r\n  }\r\n}","import { User_Dict } from \"./User_Dict\"\r\nimport * as api from '../../../util/apiUtil'\r\nimport * as userUtil from '../item/base/UserUtil'\r\nimport * as adminUtil from '../admin/base/AdminUtil'\r\n\r\nimport * as commandRender_DictUtil from '../item/command/render/dict/DictUtil'\r\n\r\n// Instance\r\nexport const get = (url, dict) => {\r\n  var qI = new User_Dict();\r\n  qI.Url = url\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_LoginUser = (q) => {\r\n  if (q.IsGet_LoginUser) return undefined;\r\n  q.IsGet_LoginUser = true;\r\n\r\n  const setObj = (data) => {\r\n    q.LoginUser = data ? userUtil.GetFromDb(data, q) : undefined;\r\n    q.IsGet_LoginUser = true;\r\n  }\r\n\r\n  if (q.Token) {\r\n    const apiFunc = () => api.post(`${q.Url}/token`, {}, q.Config);\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        setObj(data)\r\n      })\r\n  } else {\r\n    setObj();\r\n  }\r\n}\r\n\r\nexport const Handle_Users = (q) => {\r\n  if (q.IsGet_Users) return undefined\r\n  q.IsGet_Users = true;\r\n\r\n  var url = q.Url\r\n\r\n  const setObj = (data) => {\r\n    q.Users = data.map(x => userUtil.GetFromDb(x, q));\r\n    q.IsGet_Users = false;\r\n  }\r\n\r\n  var apiData = {}\r\n\r\n  userUtil.GetData(\r\n    url,\r\n    apiData, (data) => setObj(data)\r\n  )\r\n}\r\n\r\nexport const GetUser = (q, userId, handle) => {\r\n  const setObj = (data) => {\r\n    var qI = data.length !== 0 ? userUtil.GetFromDb(data[0]) : undefined\r\n    handle(qI)\r\n  }\r\n\r\n  userUtil.GetData(q.Url, { userId }, (v) => setObj(v))\r\n}\r\n\r\n// admin\r\nexport const GetAdmin = (q) => {\r\n  return adminUtil.get(q);\r\n}\r\n\r\n// Command Render\r\nexport const GetCommandRender_Dict = (q) => {\r\n  return commandRender_DictUtil.get(q);\r\n}","import { Dict } from \"./Dict\";\r\n\r\n// instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Method\r\n","import { makeObservable, observable, action } from 'mobx';\r\n\r\nimport * as util from './TargetUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\n\r\nexport class Target {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      role: observable,\r\n    })\r\n  }\r\n\r\n  Dict\r\n\r\n  Value\r\n\r\n  Type\r\n\r\n  IsEqual = (other) => {\r\n    return util.IsEqual(this, other)\r\n  }\r\n\r\n  get QueryData() {\r\n    return util.GetQueryData(this)\r\n  }\r\n\r\n  roleUrl\r\n  get RoleUrl() {\r\n    if (!this.roleUrl) {\r\n      this.roleUrl = util.GetRoleUrl(this)\r\n    } return this.roleUrl\r\n  }\r\n\r\n  // role\r\n  OnSet_Role_Func = []\r\n\r\n  role = undefined\r\n  get Role() {\r\n    if (this.role === undefined) {\r\n      util.Handle_Role(this)\r\n    } return this.role\r\n  } set Role(v) {\r\n    this.role = v;\r\n\r\n    genUtil.Handle(this.OnSet_Role_Func,\r\n      (v) => this.OnSet_Role_Func = v)\r\n  }\r\n\r\n  Refresh_Role = () => {\r\n    util.Handle_Role(this)\r\n  }\r\n\r\n  get Commands() {\r\n    return this.Role?.Commands;\r\n  }\r\n\r\n  Validate = (commandData) => {\r\n    return util.Validate(this, commandData)\r\n  }\r\n}","export const general = 'general'","import { Target } from \"./Target\"\r\nimport * as tt from './TargetType'\r\n\r\nimport * as api from '../../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\n\r\nimport { PMData } from \"../../../../../single/model/PMData\"\r\n\r\nconst pmData = () => PMData.Instance;\r\n\r\n// instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  if (!data) {\r\n    qI.Type = tt.general\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Target();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetQueryData = (q) => {\r\n  var qI = {}\r\n  var dict = q.Dict;\r\n\r\n  // user\r\n  switch (q.Type) {\r\n    default:\r\n      qI.userId = dict.User?._id\r\n      break;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetRoleUrl = (q) => {\r\n  switch (q.Type) {\r\n    case tt.general:\r\n      return \"https://api.bimdev.vn/api/btr_userrole\"\r\n  }\r\n}\r\n\r\nexport const Handle_Role = (q) => {\r\n  if (q.IsGet_Role) return undefined\r\n  q.IsGet_Role = true\r\n\r\n  const setObj = (data) => {\r\n    q.Role = data\r\n    q.IsGet_Role = false\r\n  }\r\n\r\n  if (!q.QueryData.userId){\r\n    setObj(undefined)\r\n    return\r\n  }\r\n\r\n  const rolename_func = (rolename) => {\r\n    rolename = rolename ? rolename : 'User'\r\n    pmData().RoleDict.GetItem(rolename, (item) => setObj(item));\r\n  }\r\n\r\n  var url = q.RoleUrl\r\n  var apiData = q.QueryData\r\n\r\n  const apiFunc = () => api.post(`${url}/get`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      rolename_func(data?.role)\r\n    })\r\n}\r\n\r\n// method\r\nexport const IsEqual = (q1, q2) => {\r\n  return q1.Type === q2.Type && q1.Value === q2.Value\r\n}\r\n\r\nexport const Validate = (q, commandData) => {\r\n  if (!q.Commands) return false;\r\n  \r\n  var commands = q.Commands;\r\n\r\n  var isValid = false;\r\n  commands.forEach(x => {\r\n    if (!isValid) {\r\n      isValid = x.Validate(commandData)\r\n    }\r\n  })\r\n\r\n  return isValid;\r\n}","import * as util from './DictUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\n\r\nexport class Dict {\r\n  Dict\r\n\r\n  get Current() {\r\n    return this\r\n  }\r\n\r\n  get User() {\r\n    return util.GetUser(this)\r\n  }\r\n\r\n  Targets = []\r\n\r\n  GetTarget = (data) => {\r\n    return util.GetTarget(this, data)\r\n  }\r\n}","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport { PMData } from '../../../../../single/model/PMData'\r\nimport * as targetUtil from '../_target/TargetUtil'\r\n\r\nimport {Dict} from './Dict'\r\n\r\nconst pmData = () => PMData.Instance;\r\n\r\n// instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  genUtil.Add_2(pmData().UserDict.OnSet_LoginUser_Func,\r\n    () => qI.Targets.forEach(x => {\r\n      x.Refresh_Role();\r\n      // x.Role = undefined\r\n    }), false)\r\n\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetUser = (q) => {\r\n  return pmData().UserDict.LoginUser\r\n}\r\n\r\n// method\r\nexport const GetTarget = (q, data) => {\r\n  var target = targetUtil.GetFromData(data, q);\r\n  var list = q.Targets\r\n\r\n  var item = genUtil.SingleFilter(list, x => x.IsEqual(target));\r\n  if (!item){\r\n    list.push(target);\r\n    return target;\r\n  }\r\n  return item;\r\n}","export const url = \"https://api.bimdev.vn/api/btr_role\"","import * as util from './ItemUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport {url} from './Item_Url'\r\nimport { message } from 'antd'\r\n\r\nexport class Item {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Name = 'tên vai trò'\r\n\r\n  // command\r\n  commands\r\n  get Commands(){\r\n    if (!this.commands){\r\n      this.commands = util.GetCommands(this)\r\n    } return this.commands;\r\n  }\r\n\r\n  GetCommand = (type) => {\r\n    return genUtil.SingleFilter(this.Commands, x => x.Type === type);\r\n  }\r\n\r\n  // apidata\r\n  get ApiData(){\r\n    return {\r\n      _id : this._id,\r\n      name : this.Name,\r\n      commands : this.Commands.filter(x => x.Level !== 'none')\r\n        .map(x => x.ApiData)\r\n    }\r\n  }\r\n\r\n  // Save\r\n  Save = (handle) => {\r\n    this.SaveDatabase(false, handle)\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(false)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage){\r\n        message.success('delete successfully!');\r\n      }\r\n      if (handle){\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","export const none = 'none'\r\nexport const view = 'view'\r\nexport const edit = 'edit'\r\n\r\nexport const List = () => {\r\n  return [\r\n    none, view, edit\r\n  ]\r\n}\r\n\r\nexport const GetOrder = (q) => {\r\n  switch (q) {\r\n    case none:\r\n      return 0;\r\n    case view:\r\n      return 1;\r\n    case edit:\r\n      return 2\r\n  }\r\n}","import * as cl from './CommandLevel'\r\nimport * as util from './CommandUtil'\r\n\r\nexport class Command {\r\n  get id() {\r\n    return this.Type\r\n  }\r\n\r\n  Type\r\n\r\n  Level = cl.none\r\n\r\n  // apidata\r\n  get ApiData(){\r\n    return {\r\n      type : this.Type,\r\n      level : this.Level\r\n    }\r\n  }\r\n\r\n  // validate\r\n  Validate = (data) => {\r\n    return util.Validate(this, data)\r\n  }\r\n}","import {Command} from './Command'\r\nimport * as commandLevel from './CommandLevel'\r\n\r\n// instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI.Type = data.type\r\n  qI.Level = data.level\r\n\r\n  return qI;  \r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Command();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// method\r\nexport const Validate = (q, data) => {\r\n  return q.Type === data.type && \r\n    commandLevel.GetOrder(q.Level) >= commandLevel.GetOrder(data.level);\r\n}","export const content = 'content'\r\nexport const answer = 'answer'\r\n\r\nexport const List = () => {\r\n  return [\r\n    content,\r\n    answer\r\n  ]\r\n}\r\n\r\nexport const GetName = (key) => {\r\n  var name\r\n\r\n  switch (key) {\r\n    case content:\r\n      name = 'Nội dung'\r\n      break\r\n    case answer:\r\n      name = 'Trả lời';\r\n      break;\r\n  }\r\n\r\n  return name;\r\n}","import {Item} from './Item'\r\nimport * as commandUtil from '../../command/base/CommandUtil'\r\nimport * as commandType from '../../command/base/CommandType'\r\nimport {url} from './Item_Url'\r\n\r\nimport * as api from '../../../../../../util/apiUtil'\r\n\r\n// instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.Name = data.name\r\n  \r\n  // map command\r\n  data.commands.forEach(x => {\r\n    qI.GetCommand(x.type).Level = x.level\r\n  })\r\n\r\n  return qI;  \r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}\r\n\r\n// property\r\nexport const GetCommands = (q) => {\r\n  return commandType.List().map(x => {\r\n    var qI = commandUtil.get(q);\r\n    qI.Type = x;\r\n    return qI;\r\n  })\r\n}","import * as util from './DictUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as itemUtil from '../item/ItemUtil'\r\n\r\nexport class Dict {\r\n  // item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      util.Handle_Items(this)\r\n    } return this.items; \r\n  } set Items(v){\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func, \r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var qI = itemUtil.get(this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  GetItem = (name, handle) => {\r\n    util.GetItem(this, name, handle)\r\n  }\r\n}","import * as itemUtil from '../item/ItemUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { Dict } from './Dict'\r\n\r\n// instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.GetFromData(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  // setObj([]);\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n    }\r\n\r\n    itemUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\n// method\r\nexport const GetItem = (q, name, handle) => {\r\n  if (!name){\r\n    handle(name)\r\n  }\r\n\r\n  const getObj = () => {\r\n    var list = q.Items;\r\n    var item = genUtil.SingleFilter(list, x => x.Name === name);\r\n\r\n    handle(item);\r\n  }\r\n\r\n  if (q.Items) {\r\n    getObj();\r\n  } else {\r\n    genUtil.Add_2(q.OnSet_Items_Func,\r\n      getObj);\r\n  }\r\n}","import * as util from './GroupUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class Group {\r\n  itemDict\r\n  get ItemDict() {\r\n    if (!this.itemDict) {\r\n      this.itemDict = util.GetItemDict(this)\r\n    }\r\n    return this.itemDict\r\n  }\r\n\r\n  OnSet_CurrentItem_Func = []\r\n\r\n  currentItem = undefined\r\n  get CurrentItem() {\r\n    if (!this.currentItem) {\r\n      util.Handle_CurrentItem(this)\r\n    }\r\n    return this.currentItem\r\n  }\r\n  set CurrentItem(v) {\r\n    this.currentItem = v\r\n    genUtil.Handle(\r\n      this.OnSet_CurrentItem_Func,\r\n      (v) => (this.OnSet_CurrentItem_Func = v)\r\n    )\r\n  }\r\n}\r\n","export const url = 'https://api.bimdev.vn/api/bt_coin'\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport { message } from 'antd'\r\nimport { url } from './Base_Url'\r\nimport * as util from './BaseUtil'\r\nimport { PMData } from '../../../../single/model/PMData'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\nexport class Base {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      __id: observable,\r\n      Name: observable,\r\n      isOwned: observable,\r\n    })\r\n  }\r\n\r\n  OnSet_id_Func_Dict = []\r\n  __id = undefined\r\n  get _id() {\r\n    return this.__id\r\n  }\r\n  set _id(v) {\r\n    this.__id = v\r\n    genUtil.Handle(\r\n      this.OnSet_id_Func_Dict,\r\n      (v) => (this.OnSet_id_Func_Dict = v)\r\n    )\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID()\r\n    }\r\n    return this.tempId\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId\r\n  }\r\n\r\n  Code = 'code'\r\n\r\n  Name = 'name'\r\n\r\n  Reference_RatioName = 'ref ration name'\r\n\r\n  // trade\r\n  tradeGroup\r\n  get TradeGroup() {\r\n    if (!this.tradeGroup) {\r\n      this.tradeGroup = util.GetTradeGroup(this)\r\n    }\r\n    return this.tradeGroup\r\n  }\r\n\r\n  // info\r\n  OnGet_Info_Func = []\r\n\r\n  info\r\n  get Info() {\r\n    if (!this.info) {\r\n      util.Handle_Info(this)\r\n    }\r\n    return this.info\r\n  }\r\n  set Info(v) {\r\n    this.info = v\r\n\r\n    genUtil.Handle(this.OnGet_Info_Func, (v) => (this.OnGet_Info_Func = v))\r\n  }\r\n\r\n  // sở hữu\r\n  isOwned = undefined\r\n  get IsOwned() {\r\n    if (this.isOwned === undefined) {\r\n      util.Handle_IsOwned(this)\r\n    }\r\n    return this.isOwned\r\n  }\r\n  set IsOwned(v) {\r\n    this.isOwned = v\r\n  }\r\n\r\n  //\r\n  get IsOwner() {\r\n    return this.creatorId === pmData().UserDict.loginId\r\n  }\r\n\r\n  // clone\r\n  Clone = (dict) => {\r\n    return util.Clone(this, dict)\r\n  }\r\n\r\n  // apidata\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      code: this.Code,\r\n      name: this.Name,\r\n      ref_rationame: this.Reference_RatioName,\r\n    }\r\n\r\n    return obj\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url, () => {\r\n      if (showMessage) {\r\n        message.success('save successfully!')\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    })\r\n  }\r\n\r\n  Save = (handle) => {\r\n    const func = () => {\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    }\r\n\r\n    const finish = () => {\r\n      this.OnSave = false\r\n      func()\r\n    }\r\n\r\n    if (this.OnSave) {\r\n      func()\r\n      return\r\n    } else {\r\n      this.OnSave = true\r\n    }\r\n\r\n    this.SaveDatabase(false, finish)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(false)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successfully!')\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    })\r\n  }\r\n}\r\n","export const url = 'https://api.bimdev.vn/api/ba_addininfo'\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport { message } from 'antd'\r\nimport { url } from './Base_Url'\r\nimport * as util from './BaseUtil'\r\n\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\n\r\nexport class Base {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  }\r\n  set _id(v) {\r\n    this.__id = v\r\n    genUtil.Handle(\r\n      this.OnSet_id_Func_Dict,\r\n      (v) => (this.OnSet_id_Func_Dict = v)\r\n    )\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID()\r\n    }\r\n    return this.tempId\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId\r\n  }\r\n\r\n  addin\r\n  get Addin() {\r\n    if (!this.addin) {\r\n      this.addin = this.Dict\r\n    }\r\n    return this.addin\r\n  }\r\n\r\n  // star review\r\n  Star = {\r\n    Rating: 4,\r\n    Quantity: 8,\r\n  }\r\n\r\n  Description = 'mô tả ...'\r\n\r\n  // apidata\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      description: this.Description,\r\n      addinId: this.Addin.__id,\r\n    }\r\n\r\n    return obj\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url, () => {\r\n      if (showMessage) {\r\n        message.success('save successfully!')\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    })\r\n  }\r\n\r\n  Save = (handle) => {\r\n    const func = () => {\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    }\r\n\r\n    const finish = () => {\r\n      this.OnSave = false\r\n      func()\r\n    }\r\n\r\n    if (this.OnSave) {\r\n      func()\r\n      return\r\n    } else {\r\n      this.OnSave = true\r\n    }\r\n\r\n    this.SaveDatabase(false, finish)\r\n  }\r\n}\r\n","import { url } from './Base_Url'\r\nimport { Base } from './Base'\r\n\r\nimport * as api from '../../../../../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.Description = data.description\r\n  qI.addinId = data.addinId\r\n\r\n  return qI\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Base()\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\nexport const Clone = (q, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = q._id\r\n  qI.Name = q.Name\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData)\r\n\r\n  apiFunc()\r\n    .then((response) => response.data)\r\n    .then((data) => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}\r\n\r\nexport const GetOne = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/get`, apiData)\r\n\r\n  apiFunc()\r\n    .then((response) => response.data)\r\n    .then((data) => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}\r\n","import * as util from './GroupUtil'\r\nimport { Base as Coin } from '../../coin/base/base/Base'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class Group {\r\n  Coin\r\n\r\n  get InCoin() {\r\n    return this.Dict instanceof Coin\r\n  }\r\n\r\n  futureDict\r\n  get FutureDict() {\r\n    if (!this.futureDict) {\r\n      this.futureDict = util.GetFutureDict(this)\r\n    }\r\n    return this.futureDict\r\n  }\r\n}\r\n","export const url = 'https://api.bimdev.vn/api/bt_futuretrade'\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport { message } from 'antd'\r\nimport { url } from './Base_Url'\r\nimport * as util from './BaseUtil'\r\nimport { PMData } from '../../../../single/model/PMData'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\nexport class Base {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      coin: observable,\r\n      TakeProfit_Percent: observable,\r\n      StopLoss_Percent: observable,\r\n      IsSubmit: observable,\r\n      EarnPercent: observable,\r\n    })\r\n  }\r\n\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  }\r\n  set _id(v) {\r\n    this.__id = v\r\n    genUtil.Handle(\r\n      this.OnSet_id_Func_Dict,\r\n      (v) => (this.OnSet_id_Func_Dict = v)\r\n    )\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID()\r\n    }\r\n    return this.tempId\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId\r\n  }\r\n\r\n  Type = 'long'\r\n\r\n  InitialPrice = 40000\r\n\r\n  takeProfit_Price = undefined\r\n  get TakeProfit_Price() {\r\n    if (this.takeProfit_Price === undefined) {\r\n      this.takeProfit_Price = util.GetTakeProfit_Price(this)\r\n    }\r\n    return this.takeProfit_Price\r\n  }\r\n  set TakeProfit_Price(v) {\r\n    this.takeProfit_Price = v\r\n  }\r\n\r\n  TakeProfit_Percent = 0.03\r\n\r\n  stopLoss_Price = undefined\r\n  get StopLoss_Price() {\r\n    if (this.stopLoss_Price === undefined) {\r\n      this.stopLoss_Price = util.GetStopLoss_Price(this)\r\n    }\r\n    return this.stopLoss_Price\r\n  }\r\n  set StopLoss_Price(v) {\r\n    this.stopLoss_Price = v\r\n  }\r\n\r\n  StopLoss_Percent = 0.01\r\n\r\n  IsSubmit = undefined\r\n\r\n  Submit = (type) => {\r\n    this.IsSubmit = true\r\n    this.EarnPercent =\r\n      1 * (type === 'profit' ? this.TakeProfit_Percent : -this.StopLoss_Percent)\r\n\r\n    this.Save()\r\n  }\r\n\r\n  EarnPercent = undefined\r\n\r\n  get RewardRisk_Ratio() {\r\n    return this.TakeProfit_Percent / this.StopLoss_Percent\r\n  }\r\n\r\n  _coinId\r\n  get coinId() {\r\n    if (!this._coinId) {\r\n      this._coinId = this.Coin._id\r\n    }\r\n    return this._coinId\r\n  }\r\n  set coinId(v) {\r\n    this._coinId = v\r\n  }\r\n\r\n  get InCoin() {\r\n    return this.Dict.InCoin\r\n  }\r\n\r\n  coin = undefined\r\n  get Coin() {\r\n    if (!this.coin) {\r\n      if (this.InCoin) {\r\n        this.coin = this.Dict.Coin\r\n      } else {\r\n        util.Handle_Coin(this)\r\n      }\r\n    }\r\n    return this.coin\r\n  }\r\n  set Coin(v) {\r\n    this.coin = v\r\n  }\r\n\r\n  // sở hữu\r\n  isOwned = undefined\r\n  get IsOwned() {\r\n    if (this.isOwned === undefined) {\r\n      util.Handle_IsOwned(this)\r\n    }\r\n    return this.isOwned\r\n  }\r\n  set IsOwned(v) {\r\n    this.isOwned = v\r\n  }\r\n\r\n  //\r\n  get IsOwner() {\r\n    return this.creatorId === pmData().UserDict.loginId\r\n  }\r\n\r\n  // clone\r\n  Clone = (dict) => {\r\n    return util.Clone(this, dict)\r\n  }\r\n\r\n  // apidata\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      coinId: this.coinId,\r\n      type: this.Type,\r\n      initialprice: this.InitialPrice,\r\n      takeprofitprecent: this.TakeProfit_Percent,\r\n      stoplosspercent: this.StopLoss_Percent,\r\n\r\n      issubmit: this.IsSubmit,\r\n      earnpercent: this.EarnPercent,\r\n    }\r\n\r\n    return obj\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url, () => {\r\n      if (showMessage) {\r\n        message.success('save successfully!')\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    })\r\n  }\r\n\r\n  Save = (handle) => {\r\n    const func = () => {\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    }\r\n\r\n    const finish = () => {\r\n      this.OnSave = false\r\n      func()\r\n    }\r\n\r\n    if (this.OnSave) {\r\n      func()\r\n      return\r\n    } else {\r\n      this.OnSave = true\r\n    }\r\n\r\n    console.log('save')\r\n    this.SaveDatabase(false, finish)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(false)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successfully!')\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { url } from './Base_Url'\r\nimport { Base } from './Base'\r\nimport * as util from './Util'\r\n\r\nimport * as api from '../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nimport { PMData } from '../../../../single/model/PMData'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.CreatedDate = data.createdDate\r\n\r\n  qI.coinId = data.coinId\r\n  qI.Type = data.type\r\n  qI.InitialPrice = data.initialprice\r\n  qI.TakeProfit_Percent = data.takeprofitprecent\r\n  qI.StopLoss_Percent = data.stoplosspercent\r\n\r\n  qI.IsSubmit = data.issubmit\r\n  qI.EarnPercent = data.earnpercent\r\n\r\n  return qI\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Base()\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\nexport const Clone = (q, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = q._id\r\n  qI.Name = q.Name\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\nexport const GetTakeProfit_Price = (q) => {\r\n  return util.GetTakeProfit_Price(q.Type, q.InitialPrice, q.TakeProfit_Percent)\r\n}\r\n\r\nexport const GetTakeProfit_Percent = (q) => {\r\n  return util.GetTakeProfit_Percent(q.Type, q.InitialPrice, q.TakeProfit_Price)\r\n}\r\n\r\nexport const GetStopLoss_Price = (q) => {\r\n  return util.GetStopLoss_Price(q.Type, q.InitialPrice, q.StopLoss_Percent)\r\n}\r\n\r\nexport const GetStopLoss_Percent = (q) => {\r\n  return util.GetStopLoss_Percent(q.Type, q.InitialPrice, q.StopLoss_Price)\r\n}\r\n\r\nexport const GetEarnPercent = (q) => {}\r\n\r\nexport const Handle_Coin = (q) => {\r\n  if (q.IsGet_Coin) return\r\n  q.IsGet_Coin = true\r\n\r\n  const setObj = (data) => {\r\n    q.Coin = data\r\n    q.IsGet_Coin = false\r\n  }\r\n\r\n  var coinDict = pmData().CoinGroup.ItemDict\r\n  coinDict.GetItem(q.coinId, (data) => setObj(data))\r\n}\r\n\r\nexport const Handle_IsOwned = (q) => {\r\n  if (q.IsGet_IsOwned) return\r\n  q.IsGet_IsOwned = true\r\n\r\n  const setObj = (data) => {\r\n    q.IsOwned = data\r\n    q.IsGet_IsOwned = false\r\n  }\r\n\r\n  var userDict = pmData().UserDict\r\n\r\n  const func = () => {\r\n    api\r\n      .post('https://api.bimdev.vn/api/ba_addinvalidate/check', {\r\n        addinId: q._id,\r\n        userId: userDict.loginId,\r\n      })\r\n      .then((res) => res.data)\r\n      .then((data) => setObj(data))\r\n  }\r\n\r\n  if (!userDict.loginId) {\r\n    setObj(false)\r\n  } else {\r\n    func()\r\n  }\r\n\r\n  genUtil.Add_2(userDict.OnSet_loginId_Func, func, false)\r\n}\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData)\r\n\r\n  apiFunc()\r\n    .then((response) => response.data)\r\n    .then((data) => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}\r\n\r\nexport const GetOne = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/get`, apiData)\r\n\r\n  apiFunc()\r\n    .then((response) => response.data)\r\n    .then((data) => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}\r\n","export const GetTakeProfit_Price = (type, price, percent) => {\r\n  var val = price * (1 + (type === 'long' ? 1 : -1) * percent)\r\n\r\n  var pow = val < 10 ? 3 : val < 100 ? 2 : val < 1000 ? 1 : 0\r\n  var mul = Math.pow(10, pow)\r\n\r\n  return Math.ceil(val * mul) / mul\r\n}\r\n\r\nexport const GetTakeProfit_Percent = (type, price, profit) => {\r\n  var val = ((profit - price) * (type === 'long' ? 1 : -1)) / price\r\n  return Math.ceil(val * 10000) / 10000\r\n}\r\n\r\nexport const GetStopLoss_Price = (type, price, percent) => {\r\n  var val = price * (1 + (type === 'long' ? -1 : 1) * percent)\r\n  return Math.ceil(val * 10) / 10\r\n}\r\n\r\nexport const GetStopLoss_Percent = (type, price, loss) => {\r\n  var val = ((loss - price) * (type === 'long' ? -1 : 1)) / price\r\n\r\n  var pow = val < 10 ? 3 : val < 100 ? 2 : val < 1000 ? 1 : 0\r\n  var mul = Math.pow(10, pow)\r\n\r\n  return Math.ceil(val * mul) / mul\r\n}\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport * as util from './DictUtil'\r\nimport * as itemUtil from '../base/BaseUtil'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class Dict {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n    })\r\n  }\r\n\r\n  get IsCreator() {\r\n    return this.Type === 'creator'\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    }\r\n    return this.items\r\n  }\r\n  set Items(v) {\r\n    this.items = v\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func, (v) => (this.OnSet_Items_Func = v))\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = itemUtil.get(this)\r\n    this.Items.push(q)\r\n\r\n    return q\r\n  }\r\n\r\n  //\r\n  get Coin() {\r\n    return this.Dict.Coin\r\n  }\r\n\r\n  get InCoin() {\r\n    return this.Dict.InCoin\r\n  }\r\n}\r\n","import { Dict } from './Dict'\r\nimport * as itemUtil from '../base/BaseUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { PMData } from '../../../../single/model/PMData'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict()\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return [\r\n    {\r\n      _id: genUtil.newGUID(),\r\n      type: 'long',\r\n      initialprice: 32000,\r\n      takeprofitprecent: 0.04,\r\n      stoplosspercent: 0.015,\r\n    },\r\n    // { _id: genUtil.newGUID(), name: 'Niềm tin' }\r\n  ]\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined\r\n  q.IsGet_Items = true\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map((x) => itemUtil.GetFromData(x, q))\r\n    q.IsGet_Items = false\r\n  }\r\n\r\n  // setObj(GetTest())\r\n\r\n  // // var host = pmData().UserDict\r\n\r\n  const getApi = () => {\r\n    var apiData = {}\r\n\r\n    if (q.InCoin) {\r\n      apiData.coinId = q.Coin._id\r\n    }\r\n\r\n    itemUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n\r\n  // // if (host.LoginUser) {\r\n  // //   getApi()\r\n  // // }\r\n\r\n  // // genUtil.Add_2(host.OnSet_loginId_Func, getApi, false)\r\n}\r\n\r\n// Method\r\n","import { Group } from './Group'\r\nimport * as futureDictUtil from '../future/dict/DictUtil'\r\nimport { PMData } from '../../../single/model/PMData'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Group()\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\nexport const GetFutureDict = (q) => {\r\n  return futureDictUtil.get(q)\r\n}\r\n","import { url } from './Base_Url'\r\nimport { Base } from './Base'\r\nimport * as infoUtil from '../info/base/BaseUtil'\r\nimport * as tradeGroupUtil from '../../../trade/group/GroupUtil'\r\n\r\nimport * as api from '../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nimport { PMData } from '../../../../single/model/PMData'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.CreatedDate = data.createdDate\r\n\r\n  qI.Code = data.code\r\n  qI.Name = data.name\r\n  qI.Reference_RatioName = data.ref_rationame\r\n\r\n  return qI\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Base()\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\nexport const Clone = (q, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = q._id\r\n  qI.Name = q.Name\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\n// trade\r\nexport const GetTradeGroup = (q) => {\r\n  var qI = tradeGroupUtil.get(q)\r\n  qI.Coin = q\r\n  return qI\r\n}\r\n\r\n// info\r\nexport const Handle_Info = (q) => {\r\n  if (q.IsGet_Info) return\r\n  q.IsGet_Info = true\r\n\r\n  const setObj = (data) => {\r\n    q.Info = data ? infoUtil.GetFromData(data, q) : infoUtil.get(q)\r\n    q.IsGet_Info = false\r\n  }\r\n\r\n  var apiData = {\r\n    addinId: q._id,\r\n  }\r\n\r\n  if (q._id) {\r\n    infoUtil.GetOne(apiData, (data) => setObj(data))\r\n  } else {\r\n    q.Save(() => setObj())\r\n  }\r\n}\r\n\r\nexport const Handle_IsOwned = (q) => {\r\n  if (q.IsGet_IsOwned) return\r\n  q.IsGet_IsOwned = true\r\n\r\n  const setObj = (data) => {\r\n    q.IsOwned = data\r\n    q.IsGet_IsOwned = false\r\n  }\r\n\r\n  var userDict = pmData().UserDict\r\n\r\n  const func = () => {\r\n    api\r\n      .post('https://api.bimdev.vn/api/ba_addinvalidate/check', {\r\n        addinId: q._id,\r\n        userId: userDict.loginId,\r\n      })\r\n      .then((res) => res.data)\r\n      .then((data) => setObj(data))\r\n  }\r\n\r\n  if (!userDict.loginId) {\r\n    setObj(false)\r\n  } else {\r\n    func()\r\n  }\r\n\r\n  genUtil.Add_2(userDict.OnSet_loginId_Func, func, false)\r\n}\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData)\r\n\r\n  apiFunc()\r\n    .then((response) => response.data)\r\n    .then((data) => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}\r\n\r\nexport const GetOne = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/get`, apiData)\r\n\r\n  apiFunc()\r\n    .then((response) => response.data)\r\n    .then((data) => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport * as util from './DictUtil'\r\nimport * as itemUtil from '../base/BaseUtil'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class Dict {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n    })\r\n  }\r\n\r\n  get IsCreator() {\r\n    return this.Type === 'creator'\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    }\r\n    return this.items\r\n  }\r\n  set Items(v) {\r\n    this.items = v\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func, (v) => (this.OnSet_Items_Func = v))\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = itemUtil.get(this)\r\n    this.Items.push(q)\r\n\r\n    return q\r\n  }\r\n\r\n  GetItem = (_id, handle) => {\r\n    util.GetItem(this, _id, handle)\r\n  }\r\n}\r\n","import { Dict } from './Dict'\r\nimport * as itemUtil from '../base/BaseUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { PMData } from '../../../../single/model/PMData'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict()\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return [\r\n    {\r\n      _id: genUtil.newGUID(),\r\n      code: 'BTC',\r\n      name: 'Bitcoin',\r\n      ref_rationame: 'BTC USDT',\r\n    },\r\n    // { _id: genUtil.newGUID(), name: 'Niềm tin' }\r\n  ]\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined\r\n  q.IsGet_Items = true\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map((x) => itemUtil.GetFromData(x, q))\r\n    q.IsGet_Items = false\r\n  }\r\n\r\n  // setObj(GetTest())\r\n\r\n  // var host = pmData().UserDict\r\n\r\n  const getApi = () => {\r\n    var apiData = {}\r\n\r\n    itemUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n\r\n  // if (host.LoginUser) {\r\n  //   getApi()\r\n  // }\r\n\r\n  // genUtil.Add_2(host.OnSet_loginId_Func, getApi, false)\r\n}\r\n\r\n// Method\r\nexport const GetItem = (q, _id, handle) => {\r\n  itemUtil.GetOne(\r\n    {\r\n      _id,\r\n    },\r\n    (data) => {\r\n      data = data ? itemUtil.GetFromData(data) : data\r\n      handle(data)\r\n    }\r\n  )\r\n}\r\n","import { Group } from './Group'\r\nimport * as itemDictUtil from '../base/dict/DictUtil'\r\nimport * as baseUtil from '../base/base/BaseUtil'\r\nimport { PMData } from '../../../single/model/PMData'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Group()\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\nexport const GetItemDict = (q) => {\r\n  return itemDictUtil.get(q)\r\n}\r\n\r\nexport const Handle_CurrentItem = (q) => {\r\n  var routeData = pmData().RouteData\r\n  if (routeData[0] === 'home') return\r\n\r\n  if (q.IsGet_CurrentItem) return\r\n  q.IsGet_CurrentItem = true\r\n\r\n  const setObj = (data) => {\r\n    q.CurrentItem = baseUtil.GetFromData(data, q)\r\n    q.IsGet_CurrentItem = false\r\n  }\r\n\r\n  var apiData = {\r\n    _id: routeData[0].meta,\r\n  }\r\n\r\n  baseUtil.GetOne(apiData, (data) => setObj(data))\r\n}\r\n","import { PMData } from './PMData'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as api from '../../../../util/apiUtil'\r\n\r\n// user\r\nimport * as userDictUtil from '../../../user/dict/User_DictUtil'\r\n\r\n// command\r\nimport * as commandDictUtil from '../../entity/user/command/dict/base/DictUtil'\r\n\r\n// role\r\nimport * as roleDictUtil from '../../entity/user/role/dict/DictUtil'\r\n\r\n// coin\r\nimport * as coinGroupUtil from '../../entity/coin/group/GroupUtil'\r\n\r\n// trade\r\nimport * as tradeGroupUtil from '../../entity/trade/group/GroupUtil'\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new PMData()\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\n// user\r\nexport const GetUserDict = (data) => {\r\n  var baseUrl = 'https://api.bimdev.vn/api'\r\n\r\n  var qI = userDictUtil.get(`${baseUrl}/bu_user`, data)\r\n\r\n  // command render\r\n  var cr_d = qI.CommandRender_Dict\r\n  cr_d.GetItem('admin').Render = (q, handle) => {\r\n    var url = `${baseUrl}/bu_usercommand`\r\n\r\n    var apiData = {\r\n      userId: q.userId,\r\n    }\r\n\r\n    api\r\n      .post(`${url}/list`, apiData)\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        if (data.length === 1) {\r\n          if (handle) {\r\n            handle(data[0].commands)\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  // admin\r\n  qI.Admin.AdminUser_Dict.Url = 'https://api.bimdev.vn/api/btr_userrole'\r\n\r\n  return qI\r\n}\r\n\r\n// role\r\nexport const GetRoleDict = (data) => {\r\n  return roleDictUtil.get(data)\r\n}\r\n\r\n// Command\r\nexport const GetCommandDict = (q) => {\r\n  var qI = commandDictUtil.get(q)\r\n  return qI\r\n}\r\n\r\n// coin\r\nexport const GetCoinGroup = (q) => {\r\n  return coinGroupUtil.get(q)\r\n}\r\n\r\n// trade\r\nexport const GetTradeGroup = (q) => {\r\n  return tradeGroupUtil.get(q)\r\n}\r\n","export const view = 'view'\r\nexport const edit = 'edit'","import * as util from './PMDataUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as vm from '../../entity/view/ViewMode'\r\n\r\nexport class PMData {\r\n  constructor() {}\r\n\r\n  static instance\r\n  static get Instance() {\r\n    if (!this.instance) {\r\n      this.instance = util.get()\r\n    }\r\n    return this.instance\r\n  }\r\n  static set Instance(v) {\r\n    this.instance = v\r\n  }\r\n\r\n  //\r\n  IsPublish = false\r\n\r\n  // route\r\n  routeData = undefined\r\n  get RouteData() {\r\n    if (!this.routeData) {\r\n      this.routeData = [{ type: 'home' }]\r\n    }\r\n    return this.routeData\r\n  }\r\n  set RouteData(v) {\r\n    this.routeData = v\r\n  }\r\n\r\n  // view\r\n  ViewMode = vm.view\r\n\r\n  // Data\r\n  // user\r\n  userDict\r\n  get UserDict() {\r\n    if (!this.userDict) {\r\n      this.userDict = util.GetUserDict(this)\r\n    }\r\n    return this.userDict\r\n  }\r\n\r\n  // role\r\n  roleDict\r\n  get RoleDict() {\r\n    if (!this.roleDict) {\r\n      this.roleDict = util.GetRoleDict(this)\r\n    }\r\n    return this.roleDict\r\n  }\r\n\r\n  // Command\r\n  commandDict\r\n  get CommandDict() {\r\n    if (!this.commandDict) {\r\n      this.commandDict = util.GetCommandDict(this)\r\n    }\r\n    return this.commandDict\r\n  }\r\n\r\n  // coin\r\n  coinGroup\r\n  get CoinGroup() {\r\n    if (!this.coinGroup) {\r\n      this.coinGroup = util.GetCoinGroup(this)\r\n    }\r\n    return this.coinGroup\r\n  }\r\n\r\n  tradeGroup\r\n  get TradeGroup() {\r\n    if (!this.tradeGroup) {\r\n      this.tradeGroup = util.GetTradeGroup(this)\r\n    }\r\n    return this.tradeGroup\r\n  }\r\n}\r\n","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './LayoutUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as vs from '../../view/ViewState'\r\n\r\nexport class Layout {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  header\r\n  get Header() {\r\n    if (!this.header) {\r\n      this.header = util.GetHeader(this);\r\n    }\r\n    return this.header;\r\n  }\r\n\r\n  body\r\n  get Body() {\r\n    if (!this.body) {\r\n      this.body = util.GetBody(this);\r\n    }\r\n    return this.body;\r\n  }\r\n\r\n  footer\r\n  get Footer() {\r\n    if (!this.footer) {\r\n      this.footer = util.GetFooter(this);\r\n    }\r\n    return this.footer;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport class Image {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Source: observable,\r\n      Alt: observable,\r\n      Width : observable,\r\n      Height: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId(){\r\n    if (!this.tempId){\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n\r\n  Source = undefined\r\n\r\n  Alt = undefined\r\n\r\n  Width = undefined\r\n\r\n  Height = undefined\r\n}","import { Image } from \"./Image\"\r\n\r\nexport const get = (source, alt, width, height) => {\r\n  var qI = new Image();\r\n\r\n  qI.Source = source;\r\n  qI.Alt = alt;\r\n  qI.Width = width;\r\n  qI.Height = height;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return get(\r\n    'https://raw.githubusercontent.com/bimtaiht/bimdev-source/master/Image/hello.png',\r\n    'test-image',\r\n    200, 200\r\n  )\r\n}","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as imageUtil from './ImageUtil'\r\n\r\nclass ImageView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = imageUtil.GetTest();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style ?\r\n      this.props.style : data.Style;\r\n\r\n    var className = this.props.className ?\r\n      this.props.className : data.ClassName\r\n\r\n    var onClick = this.props.onClick;\r\n    var onDoubleClick = this.props.onDoubleClick;\r\n    var onMouseEnter = this.props.onMouseEnter;\r\n    var onMouseLeave = this.props.onMouseLeave;\r\n\r\n    return (\r\n      <>\r\n        <img className={className} style={style}\r\n          src={data.Source} alt={data.Alt}\r\n          width={data.Width} height={data.Height} \r\n          onClick={onClick} \r\n          onDoubleClick={onDoubleClick}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ImageView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './HeaderUtil'\r\nimport * as vs from '../../view/ViewState'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport ImageView from '../../../../image/ImageView'\r\nimport * as imgUtil from '../../../../image/ImageUtil'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class Header {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Data\r\n  get MainMenu() {\r\n    return pmDataVM().MainMenu;\r\n  }\r\n\r\n  get LogoView() {\r\n    var img = imgUtil.get('https://bimdev.vn/wp-content/uploads/2020/01/logo.jpg')\r\n    return <ImageView className='header__logo' store={img} />\r\n  }\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as util from './BodyUtil'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class Body {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Data\r\n\r\n  \r\n  // View\r\n  get MainView() {\r\n    return util.GetMainView(this);\r\n  }\r\n}","import { PMData } from \"../model/main/single/model/PMData\"\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Validate\r\nexport const Validate = (targetData, commandData) => {\r\n  var validate = pmData().CommandDict.Current.GetTarget(targetData).Validate(commandData);\r\n  return validate;\r\n}\r\n\r\n// Copy\r\nexport const copyToClipboard = (content) => {\r\n  // Create a dummy input to copy the string array inside it\r\n  var dummy = document.createElement(\"input\");\r\n\r\n  // Add it to the document\r\n  document.body.appendChild(dummy);\r\n\r\n  // Set its ID\r\n  dummy.setAttribute(\"id\", \"dummy_id\");\r\n\r\n  // Output the array into it\r\n  document.getElementById(\"dummy_id\").value = content;\r\n\r\n  // Select it\r\n  dummy.select();\r\n\r\n  // Copy its contents\r\n  document.execCommand(\"copy\");\r\n\r\n  // Remove it as its not needed anymore\r\n  document.body.removeChild(dummy);\r\n}","import { PMDataVM } from '../../single/form/PMDataVM'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport const home = 'home'\r\nexport const role = 'role'\r\nexport const coin = 'coin'\r\nexport const trade = 'trade'\r\n\r\nconst pmDataVM = () => PMDataVM.instance\r\n\r\nexport const Handle = (type, meta, type2) => {\r\n  type = type ? type : home\r\n\r\n  var qI = pmDataVM()\r\n  qI.RouteData = [\r\n    {\r\n      type,\r\n      meta,\r\n    },\r\n    {\r\n      type: type2,\r\n    },\r\n  ]\r\n}\r\n","import { Body } from './Body'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../util/commandUtil'\r\n\r\nimport { convertToRaw, EditorState } from 'draft-js'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM'\r\nimport * as vt from '../../view/ViewType'\r\nimport { message, Switch } from 'antd'\r\nimport { PMData } from '../../../single/model/PMData'\r\nimport * as vm from '../../view/ViewMode'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Body()\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\n// view\r\nexport const GetContentView = (q) => {\r\n  var qI = pmDataVM()\r\n\r\n  switch (qI.RouteData[0].type) {\r\n    case vt.home:\r\n      return <div className=\"mt-4\">{qI.CoinGroup.ItemDict.View}</div>\r\n    case vt.role:\r\n      return (\r\n        <div>\r\n          <div>{qI.RoleDict.View}</div>\r\n\r\n          <div className=\"mt-4\">{qI.UserDict.Admin.AdminUser_Dict.View}</div>\r\n        </div>\r\n      )\r\n    case vt.coin:\r\n      return <div className=\"mt-4\">{qI.CoinGroup.CurrentItem?.ContentView}</div>\r\n    case vt.trade:\r\n      return <div className=\"mt-4\">{qI.TradeGroup.View}</div>\r\n  }\r\n}\r\n\r\n// main\r\nexport const GetMainView = (q) => {\r\n  return !pmData().IsPublish ? (\r\n    <div className=\"m-10\">{GetContentView(q)}</div>\r\n  ) : (\r\n    GetContentView(q)\r\n  )\r\n}\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './FooterUtil'\r\n\r\nexport class Footer {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n}","import { Layout } from './Layout';\r\nimport * as headerUtil from '../header/HeaderUtil'\r\nimport * as bodyUtil from '../body/BodyUtil'\r\nimport * as footerUtil from '../footer/FooterUtil'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { message } from 'antd';\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new Layout();\r\n\r\n  return qI;\r\n}\r\n\r\n\r\n// Property\r\nexport const GetHeader = (q) => {\r\n  return headerUtil.get(q)\r\n}\r\n\r\nexport const GetBody = (q) => {\r\n  return bodyUtil.get(q)\r\n}\r\n\r\nexport const GetFooter = (q) => {\r\n  return footerUtil.get(q)\r\n}","import { Header, Vi_Header } from './Header';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as vs from '../../view/ViewState'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Header();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n","import { Footer } from './Footer';\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Footer();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n\r\n// Property\r\n\r\n","export const _default = \"default\";\r\nexport const ready = 'ready'\r\nexport const edit = \"edit\";","export const text = 'text'\r\nexport const password = 'password'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as ts from './TextState'\r\n\r\nexport class TextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder : observable,\r\n      State : observable,\r\n      ClassName : observable\r\n    })\r\n  }\r\n\r\n  GetContentFunc\r\n\r\n  content = undefined\r\n  get Content(){\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n\r\n    if (this.OnSetContent) {\r\n      this.OnSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  inputStyle\r\n\r\n  style\r\n  get Style() {\r\n    if (!this.style) {\r\n      this.style = this.inputStyle ? this.inputStyle : {};\r\n\r\n      if (this.wrapper) {\r\n        this.style.position = 'relative';\r\n      }\r\n    }\r\n    return this.style;\r\n  }\r\n\r\n  State = ts.text\r\n\r\n  ClassName = undefined\r\n}","import { TextVM } from \"./TextVM\"\r\n\r\nexport const get = (q, placeholder) => {\r\n  var qI = new TextVM();\r\n  qI.content = q;\r\n  qI.placeholder = placeholder;\r\n  return qI;\r\n}","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport * as ts from '../text/TextState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nclass NewInputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.contentEditable = React.createRef();\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    var data = this.state;\r\n    data.Content = e.target.value;\r\n  };\r\n\r\n  OnPaste = (e) => {\r\n    e.preventDefault();\r\n    var text = genUtil.GetPlainText(e);\r\n\r\n    var data = this.state;\r\n    data.Content = text;\r\n  }\r\n\r\n  OnKeyDown = (e) => {\r\n    var data = this.state;\r\n    if (data.OnKeyDown){\r\n      data.OnKeyDown(e)\r\n      return;\r\n    }\r\n\r\n    // Ctrl + B\r\n    if (e.ctrlKey && e.which == 66) {\r\n      e.preventDefault();\r\n    }\r\n    // Ctrl + I\r\n    else if (e.ctrlKey && e.which == 73) {\r\n      e.preventDefault();\r\n    }\r\n    // Enter\r\n    else if (e.keyCode == 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var Content = data.Content;\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style\r\n    var onFocus = this.props.onFocus ? \r\n      this.props.onFocus : data.OnFocus\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <ContentEditable ref={data.Ref}\r\n            className={`ant-input ${className}`}\r\n            style={style}\r\n            innerRef={this.contentEditable}\r\n            placeholder={data.Placeholder}\r\n            style={style}\r\n            html={Content ? Content : ''}\r\n            onChange={this.handleChange}\r\n            onPaste={this.OnPaste}\r\n            onKeyDown={this.OnKeyDown} \r\n            onFocus={onFocus}/>\r\n          : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password value={Content} onChange={this.handleChange}\r\n            className={className}\r\n            style={style} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(NewInputView)","import React, { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport * as ts from '../text/TextState'\r\n\r\nclass InputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    var { value } = e.target;\r\n\r\n    var data = this.state;\r\n\r\n    if (value !== '' && data.InputRegex) {\r\n      if (!data.InputRegex.test(value)) return;\r\n    }\r\n\r\n    this.state.Content = value;\r\n  }\r\n\r\n  OnKeyDown = (e) => {\r\n    var data = this.state;\r\n\r\n    if (data.OnKeyDown) {\r\n      data.OnKeyDown(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { content, placeholder } = data;\r\n    var style = this.props.style\r\n    var className = this.props.className\r\n    var onFocus = this.props.onFocus ?\r\n      this.props.onFocus : data.OnFocus\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <Input ref={data.Ref} style={style} className={className}\r\n            value={content} onChange={this.onChange}\r\n            onKeyDown={this.OnKeyDown}\r\n            onFocus={onFocus}\r\n            placeholder={placeholder} /> : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password ref={data.Ref} style={style} className={className}\r\n            value={content} onChange={this.onChange}\r\n            onFocus={onFocus}\r\n            onKeyDown={this.OnKeyDown} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(InputView)","import * as util from './TextRenderItemUtil'\r\n\r\nexport class TextRenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","export const createMarkup = (data) => {\r\n  try {\r\n    return { __html: data };\r\n  }\r\n  catch {\r\n    data = \"Invalid html\";\r\n    return { __html: data };\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nclass AlignLeftView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      //this.state = new UserFormVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var viewBox = this.props.viewBox ?\r\n      this.props.viewBox : \"0 -5 469 469\"\r\n\r\n    return (\r\n      <>\r\n        <svg viewBox={viewBox} xmlns=\"http://www.w3.org/2000/svg\"\r\n        // height=\"469pt\" width=\"469pt\"\r\n        >\r\n          <path d=\"m325.332031 32.167969h-309.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h309.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" /><path d=\"m453.332031 138.832031h-437.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h437.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" /><path d=\"m325.332031 245.5h-309.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h309.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" /><path d=\"m453.332031 352.167969h-437.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h437.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" /><path d=\"m325.332031 458.832031h-309.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h309.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" />\r\n        </svg>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(AlignLeftView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nclass AlignMiddleView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      //this.state = new UserFormVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var viewBox = this.props.viewBox ?\r\n      this.props.viewBox : \"0 0 469 469\"\r\n\r\n    return (\r\n      <>\r\n        <svg viewBox={viewBox}>\r\n          <path d=\"m384 42.667969h-298.667969c-11.773437 0-21.332031-9.558594-21.332031-21.335938 0-11.773437 9.558594-21.332031 21.332031-21.332031h298.667969c11.777344 0 21.332031 9.558594 21.332031 21.332031 0 11.777344-9.554687 21.335938-21.332031 21.335938zm0 0\" /><path d=\"m448 149.332031h-426.667969c-11.773437 0-21.332031-9.554687-21.332031-21.332031s9.558594-21.332031 21.332031-21.332031h426.667969c11.777344 0 21.332031 9.554687 21.332031 21.332031s-9.554687 21.332031-21.332031 21.332031zm0 0\" /><path d=\"m384 256h-298.667969c-11.773437 0-21.332031-9.558594-21.332031-21.332031 0-11.777344 9.558594-21.335938 21.332031-21.335938h298.667969c11.777344 0 21.332031 9.558594 21.332031 21.335938 0 11.773437-9.554687 21.332031-21.332031 21.332031zm0 0\" /><path d=\"m448 362.667969h-426.667969c-11.773437 0-21.332031-9.558594-21.332031-21.335938 0-11.773437 9.558594-21.332031 21.332031-21.332031h426.667969c11.777344 0 21.332031 9.558594 21.332031 21.332031 0 11.777344-9.554687 21.335938-21.332031 21.335938zm0 0\" /><path d=\"m384 469.332031h-298.667969c-11.773437 0-21.332031-9.554687-21.332031-21.332031s9.558594-21.332031 21.332031-21.332031h298.667969c11.777344 0 21.332031 9.554687 21.332031 21.332031s-9.554687 21.332031-21.332031 21.332031zm0 0\" />\r\n        </svg>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(AlignMiddleView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nclass AlignRightView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      //this.state = new UserFormVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var viewBox = this.props.viewBox ?\r\n      this.props.viewBox : \"0 0 512 512\"\r\n\r\n    return (\r\n      <>\r\n        <svg  viewBox={viewBox}>\r\n          <path d=\"M492,118H156c-11.046,0-20,8.954-20,20s8.954,20,20,20h336c11.046,0,20-8.954,20-20C512,126.954,503.046,118,492,118z\" />\r\n          <path d=\"M492,0H20C8.954,0,0,8.954,0,20s8.954,20,20,20h472c11.046,0,20-8.954,20-20S503.046,0,492,0z\" />\r\n          <path d=\"M492,472H20c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h472c11.046,0,20-8.954,20-20\r\n\t\t\tC512,480.954,503.046,472,492,472z\"/>\r\n          <path d=\"M492,354H156c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h336c11.046,0,20-8.954,20-20\r\n\t\t\tC512,362.954,503.046,354,492,354z\"/>\r\n          <path d=\"M492,236H20c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h472c11.046,0,20-8.954,20-20S503.046,236,492,236z\" />\r\n        </svg>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(AlignRightView);\r\n","export const header = 'header'\r\nexport const bold = 'bold'\r\nexport const italic = 'italic'\r\nexport const underline = 'underline'\r\nexport const strike = 'strike'\r\nexport const code_block = 'code-block'\r\nexport const blockquote = 'blockquote'\r\nexport const clean = 'clean'\r\nexport const align_left = 'align-left'\r\nexport const align_middle = 'align-middle'\r\nexport const align_right = 'align-right'\r\n\r\nexport const font_family = 'font-famiy'\r\nexport const font_size = 'font_size'\r\nexport const font_color = 'font-color'\r\n\r\nexport const _delete = 'delete'","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class FloatItemVM {\r\n  location\r\n\r\n  className\r\n  getClassName = () => {\r\n    if (!this.className){\r\n      this.className = `float ${this.location}`;\r\n    }\r\n    return this.className\r\n  }\r\n}","import FloatItemVM from \"./FloatItemVM\";\r\n\r\nexport const get = (loc) => {\r\n  var qI = new FloatItemVM();\r\n  qI.location = loc;\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport * as floatItemVMUtil from './FloatItemVMUtil'\r\n\r\nclass FloatItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = floatItemVMUtil.get('top right', 'Test')\r\n    }else{\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <span className={data.getClassName()}>{this.getWrapperContent()}</span>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FloatItemView);\r\n","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { SelectVM } from \"./SelectVM\";\r\nimport * as floatItemVMUtil from '../float/FloatItemVMUtil'\r\nimport FloatItemView from \"../float/FloatItemView\";\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport './Select.css'\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new SelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style ? this.props.style : { width: '100%' };\r\n    var { Placeholder, Items, SelectedIndex, InitialIndex } = data;\r\n\r\n    if (SelectedIndex === -1) {\r\n      SelectedIndex = InitialIndex;\r\n      data.InitialIndex = -1;\r\n    }\r\n\r\n    // debugger\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (data.IdRender) {\r\n        id = data.IdRender(item)\r\n      } else {\r\n        if (item === undefined) {\r\n          id = genUtil.randomId();\r\n        } else if (typeof item === 'string' || !isNaN(item)) {\r\n          id = item;\r\n        } else {\r\n          id = item._id ? item._id : item.id;\r\n        }\r\n      }\r\n\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    var floatElem = ''\r\n    if (data.CanClear) {\r\n      var floatItemStore = floatItemVMUtil.get('right')\r\n      floatItemStore.wrapper = <Button size='small' type='primary'\r\n        onClick={data.Clear}>x</Button>\r\n\r\n      floatElem = <FloatItemView store={floatItemStore} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div \r\n          className={`select__wrapper ${className}`}\r\n          style={data.DivStyle} >\r\n          {floatElem}\r\n          <Select\r\n            className='select__main'\r\n            style={style}\r\n            showSearch\r\n            placeholder={Placeholder}\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onValueChange}\r\n            value={SelectedIndex}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            open={data.CanOpen && data.Open}\r\n            onDropdownVisibleChange={this.onDropdownVisibleChange}\r\n            disabled={data.Disabled || data.IsDisabled}\r\n            onFocus={data.OnFocus}\r\n\r\n          >\r\n            {elems}\r\n          </Select>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(SelectView)","import { makeObservable, observable, action } from 'mobx';\r\nimport SelectView from './SelectView';\r\nimport * as util from './SelectVMUtil'\r\n\r\nexport class SelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      selectedIndex: observable,\r\n      selectedItem: observable,\r\n      CanClear: observable,\r\n      open: observable,\r\n      canOpen: observable,\r\n      isDisabled: observable,\r\n      disabled: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = [];\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v\r\n  }\r\n\r\n  initialItem = undefined\r\n  get InitialItem() {\r\n    return this.initialItem;\r\n  }\r\n  set InitialItem(v) {\r\n    this.IsSet_InitialItem = true;\r\n    this.initialItem = v;\r\n    this.InitialIndex = this.GetInitialIndex();\r\n    this.SelectedIndex = this.InitialIndex;\r\n  }\r\n\r\n  initialIndex\r\n  get InitialIndex() {\r\n    if (!this.initialIndex) {\r\n      this.initialIndex = this.GetInitialIndex();\r\n    }\r\n    return this.initialIndex;\r\n  }\r\n  set InitialIndex(v) {\r\n    this.initialIndex = v;\r\n  }\r\n\r\n  GetInitialIndex = () => {\r\n    var index = this.Items.indexOf(this.InitialItem);\r\n    return index !== -1 ? index : null;\r\n  }\r\n\r\n  selectedIndex = undefined\r\n  get SelectedIndex() {\r\n    return this.selectedIndex;\r\n  }\r\n  set SelectedIndex(v) {\r\n    this.selectedIndex = v;\r\n    this.SelectedItem = this.GetSelectedItem();\r\n  }\r\n\r\n  selectedItem = undefined\r\n  get SelectedItem() {\r\n    if (!this.selectedItem) {\r\n      this.selectedItem = this.GetSelectedItem();\r\n    }\r\n    return this.selectedItem;\r\n  }\r\n  set SelectedItem(v) {\r\n    this.selectedItem = v;\r\n\r\n    if (this.IsSet_InitialItem) {\r\n      this.IsSet_InitialItem = false\r\n    } else if (this.OnSelectedItemChanged) {\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  SetValue = (v) => {\r\n    this.InitialItem = this.SelectedItem = v;\r\n  }\r\n\r\n  GetSelectedItem = () => {\r\n    var index = this.SelectedIndex;\r\n    if (index === -1) return undefined;\r\n    return this.Items[index];\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder() {\r\n    if (!this.placeholder) {\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  CanClear = false\r\n\r\n  Clear = () => {\r\n    this.SelectedIndex = null\r\n  }\r\n\r\n  get DivStyle() {\r\n    return this.CanClear ? {\r\n      position: 'relative',\r\n      padding: '0 22px 0 0'\r\n    } : {};\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender) {\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender(v) {\r\n    this.titleRender = v;\r\n  }\r\n\r\n  open = false\r\n  get Open() {\r\n    return this.open;\r\n  }\r\n  set Open(v) {\r\n    this.open = v;\r\n    if (this.OnSetOpen) {\r\n      this.OnSetOpen(v);\r\n    }\r\n  }\r\n\r\n  canOpen = true\r\n  get CanOpen() {\r\n    return this.canOpen;\r\n  } set CanOpen(v) {\r\n    this.canOpen = v;\r\n  }\r\n\r\n  isDisabled = false\r\n  get IsDisabled() {\r\n    return this.isDisabled;\r\n  } set IsDisabled(v) {\r\n    this.isDisabled = v;\r\n  }\r\n\r\n  // disabled\r\n  disabled = false\r\n  get Disabled() {\r\n    if (this.GetDisabled_Func) {\r\n      return this.GetDisabled_Func();\r\n    }\r\n    return this.disabled\r\n  } set Disabled(v) {\r\n    this.disabled = v;\r\n  }\r\n\r\n  IdRender\r\n\r\n  // View\r\n  get View() {\r\n    return <SelectView store={this} />\r\n  }\r\n}","import { SelectVM } from \"./SelectVM\";\r\n\r\nexport const get = (items, initialItem) => {\r\n  var qI = new SelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItem = initialItem;\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nexport class ColorPicker {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      color: observable,\r\n    })\r\n  }\r\n\r\n  color = \"#000000\"\r\n  get Color() {\r\n    return this.color\r\n  } set Color(v) {\r\n    this.color = v;\r\n    if (this.OnSetColor) {\r\n      this.OnSetColor(v);\r\n    }\r\n  }\r\n\r\n  PickColor = (c) => {\r\n    this.Color = c.hex\r\n  }\r\n\r\n  get MainView() {\r\n    return <ChromePicker color={this.Color}\r\n      onChange={this.PickColor}\r\n    />\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { ColorPicker } from './ColorPicker';\r\nimport { Popover } from 'antd';\r\nimport './ColorPicker.css'\r\n\r\nclass ColorPickerView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ColorPicker()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className=this.props.className ? this.props.className  : ''\r\n\r\n    return (\r\n      <>\r\n        <Popover\r\n          content={data.MainView}\r\n          title=\"Pick text color\"\r\n          trigger='hover'\r\n          placement=\"bottomLeft\"\r\n        >\r\n          <div className={`color__demo ${className}`}\r\n            style={{ backgroundColor: data.Color }}\r\n          />\r\n        </Popover >\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(ColorPickerView);\r\n","export const manual = 'manual'\r\nexport const mouseEvent = 'mouseEvent'","export const mobx = 'mobx'\r\nexport const style = 'style'","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { EntDelete } from './EntDelete';\r\nimport { Button, Popover } from 'antd';\r\nimport './EntDelete.css'\r\nimport * as vt from './EntDelete_VisibleType'\r\nimport * as ut from './EntDelete_UseType'\r\n\r\nclass EntDeleteView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntDelete()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    data.ClassName = data.ClassName ? data.ClassName :\r\n      (this.props.className ? this.props.className : '')\r\n    data.Style = data.Style ? data.Style : this.props.style\r\n\r\n    return (\r\n      <>\r\n        {data.UseType === ut.style || data.Is_Visible ?\r\n          <>\r\n            <div style={data.WrapperStyle}>\r\n              {/* Popover */}\r\n              {data.WrapperView}\r\n\r\n              {/* Addition Element */}\r\n              {data.AdditionElement}\r\n            </div>\r\n          </>\r\n          : (data.VisibleType === vt.hidden ?\r\n            <div className={data.BlankStyle} />\r\n            :\r\n            '')\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(EntDeleteView);\r\n","export const collapse = 'collapse'\r\nexport const hidden = 'hidden'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as tt from './EntDelete_ToggleType'\r\nimport * as vt from './EntDelete_VisibleType'\r\nimport * as ut from './EntDelete_UseType'\r\nimport * as util from './EntDeleteUtil'\r\nimport EntDeleteView from './EntDeleteView';\r\nimport { TextVM } from '../text/TextVM';\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport class EntDelete {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      is_Visible: observable,\r\n      is_Hover_Visible: observable,\r\n      VisibleType: observable,\r\n      UseType: observable,\r\n      ClassName: observable,\r\n      Style: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    } return this._id;\r\n  } set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  is_Visible = undefined\r\n  get Is_Visible() {\r\n    if (!this.is_Visible) {\r\n      this.is_Visible = util.GetDefault_Is_Visible(this)\r\n    } return this.is_Visible\r\n  } set Is_Visible(v) {\r\n    this.is_Visible = v;\r\n  }\r\n\r\n  ToggleType = tt.manual\r\n\r\n  VisibleType = vt.collapse\r\n\r\n  is_Hover_Visible = undefined\r\n  get Is_Hover_Visible() {\r\n    return this.is_Hover_Visible\r\n  } set Is_Hover_Visible(v) {\r\n    this.is_Hover_Visible = v;\r\n\r\n    if (this.ToggleType === tt.mouseEvent) {\r\n      if (!v) {\r\n        this.Is_Visible = false\r\n      }\r\n    }\r\n\r\n    if (this.OnSet_Is_Hover_Visible) {\r\n      this.OnSet_Is_Hover_Visible(v);\r\n    }\r\n  }\r\n\r\n  Show_Hover = (e) => {\r\n    if (e) {\r\n      e.stopPropagation();\r\n    }\r\n\r\n    if (this.OnPre_ShowHover) {\r\n      this.OnPre_ShowHover();\r\n    }\r\n\r\n    this.Is_Hover_Visible = true;\r\n  }\r\n\r\n  Toggle_Hover = (v) => {\r\n    this.Is_Hover_Visible = v\r\n  }\r\n\r\n  // Run\r\n  IsRun_Cancel\r\n\r\n  PreRun = (e) => {\r\n    e.stopPropagation();\r\n\r\n    this.IsRun_Cancel = false\r\n    if (this.OnPreRun) {\r\n      this.OnPreRun()\r\n    }\r\n\r\n    if (!this.IsRun_Cancel) {\r\n      this.Run();\r\n    }\r\n  }\r\n\r\n  run\r\n  get Run() {\r\n    if (!this.run) {\r\n      this.run = util.GetDefault_Run(this)\r\n    } return this.run\r\n  } set Run(v) {\r\n    this.run = v;\r\n  }\r\n\r\n  PreCancel = (e) => {\r\n    e.stopPropagation();\r\n    this.Cancel();\r\n  }\r\n\r\n  cancel\r\n  get Cancel() {\r\n    if (!this.cancel) {\r\n      this.cancel = util.GetDefault_Cancel(this)\r\n    } return this.cancel\r\n  } set Cancel(v) {\r\n    this.cancel = v;\r\n  }\r\n\r\n  Show = () => {\r\n    this.Is_Visible = true\r\n  }\r\n\r\n  // Hide\r\n  Hide = () => {\r\n    this.IsRun_Cancel = false\r\n    if (this.OnPreHide) {\r\n      this.OnPreHide()\r\n    }\r\n\r\n    if (this.IsRun_Cancel) return\r\n\r\n    if (!this.Is_Hover_Visible) {\r\n      this.Is_Visible = false\r\n    }\r\n  }\r\n\r\n  // Style\r\n  ClassName = undefined\r\n\r\n  Style = undefined\r\n\r\n  AdditionElement = ''\r\n\r\n  BlankStyle = 'delete__blank'\r\n\r\n  Title = \"Xác nhận lệnh?\"\r\n\r\n  showHover_Button\r\n  get ShowHover_Button() {\r\n    return this.showHover_Button ? this.showHover_Button\r\n      : this.Retrieve_ShowHover_Button();\r\n  } set ShowHover_Button(v) {\r\n    this.showHover_Button = v;\r\n  }\r\n\r\n  retrieve_ShowHover_Button\r\n  get Retrieve_ShowHover_Button() {\r\n    if (!this.retrieve_ShowHover_Button) {\r\n      this.retrieve_ShowHover_Button =\r\n        util.GetDefault_Retrieve_ShowHover_Button(this)\r\n    } return this.retrieve_ShowHover_Button\r\n  } set Retrieve_ShowHover_Button(v) {\r\n    this.retrieve_ShowHover_Button = v;\r\n  }\r\n\r\n  get View() {\r\n    return <EntDeleteView key={this.id} store={this} />\r\n  }\r\n\r\n  // Modal\r\n  get WrapperView() {\r\n    return this.Retrieve_WrapperView();\r\n  }\r\n\r\n  retrieve_WrapperView\r\n  get Retrieve_WrapperView() {\r\n    if (!this.retrieve_WrapperView) {\r\n      this.retrieve_WrapperView = util.GetDefault_Retrieve_WrapperView(this)\r\n    } return this.retrieve_WrapperView\r\n  } set Retrieve_WrapperView(v) {\r\n    this.retrieve_WrapperView = v;\r\n  }\r\n\r\n  modal_ButtonView\r\n  get Modal_ButtonView() {\r\n    if (!this.modal_ButtonView) {\r\n      this.modal_ButtonView = util.GetDefault_Modal_ButtonView(this)\r\n    }\r\n    return this.modal_ButtonView\r\n  } set Modal_ButtonView(v) {\r\n    this.modal_ButtonView = v;\r\n  }\r\n\r\n  modal_InfoView\r\n  get Modal_InfoView() {\r\n    if (!this.modal_InfoView) {\r\n      this.modal_InfoView = util.GetDefault_Modal_InfoView(this)\r\n    }\r\n    return this.modal_InfoView\r\n  } set Modal_InfoView(v) {\r\n    this.modal_InfoView = v;\r\n  }\r\n\r\n  modal_ContentView\r\n  get Modal_ContentView() {\r\n    if (!this.modal_ContentView) {\r\n      this.modal_ContentView = util.GetDefault_Modal_ContentView(this)\r\n    } return this.modal_ContentView\r\n  } set Modal_ContentView(v) {\r\n    this.modal_ContentView = v;\r\n  }\r\n\r\n  // UseStyle\r\n  UseType = ut.mobx\r\n\r\n  get WrapperStyle() {\r\n    switch (this.UseType) {\r\n      case ut.mobx:\r\n        return undefined\r\n      case ut.style:\r\n        return this.Is_Visible ? undefined : { display: 'none' }\r\n    }\r\n  }\r\n}","import { Button, Popover } from 'antd'\r\nimport * as tt from './EntDelete_ToggleType'\r\n\r\n// Property\r\nexport const GetDefault_Is_Visible = (q) => {\r\n  return q.ToggleType === tt.manual ?\r\n    true : false\r\n}\r\n\r\nexport const GetDefault_Retrieve_ShowHover_Button = (q) => {\r\n  return () => <Button type='primary' size='small'\r\n    className={`btn_delete ${q.ClassName}`}\r\n    style={q.Style}\r\n    onClick={q.Show_Hover}\r\n  >x</Button>\r\n}\r\n\r\nexport const GetDefault_Run = (q) => {\r\n  return () => {\r\n    q.Is_Hover_Visible = false;\r\n    if (q.OnRun) {\r\n      q.OnRun();\r\n    }\r\n  }\r\n}\r\n\r\nexport const GetDefault_Cancel = (q) => {\r\n  return () => {\r\n    q.Is_Hover_Visible = false;\r\n    if (q.OnCancel) {\r\n      q.OnCancel();\r\n    }\r\n  }\r\n}\r\n\r\nexport const GetDefault_Retrieve_WrapperView = (q) => {\r\n  return () => <Popover\r\n    content={\r\n      <>\r\n        {q.Modal_ContentView}\r\n      </>\r\n    }\r\n    title={q.Title}\r\n    trigger=\"click\"\r\n    visible={q.Is_Hover_Visible}\r\n    onVisibleChange={q.Toggle_Hover}\r\n  >\r\n    {q.ShowHover_Button}\r\n  </Popover>\r\n}\r\n\r\nexport const GetDefault_Modal_ButtonView = (q) => {\r\n  return <div className='delete__btn-group'>\r\n    <Button type='primary' size='small'\r\n      onClick={q.PreRun}>ok</Button>\r\n    <Button type='text' size='small'\r\n      className='btn_blank'\r\n      onClick={q.PreCancel}>cancel</Button>\r\n  </div>\r\n}\r\n\r\nexport const GetDefault_Modal_InfoView = (q) => {\r\n  return ''\r\n}\r\n\r\nexport const GetDefault_Modal_ContentView = (q) => {\r\n  return <>\r\n    {q.Modal_InfoView}\r\n    {q.Modal_ButtonView}\r\n  </>\r\n}","import AlignLeftView from \"../../svg/AlignLeftView\";\r\nimport AlignMiddleView from \"../../svg/AlignMiddleView\";\r\nimport AlignRightView from \"../../svg/AlignRightView\";\r\nimport { QuillTool } from \"./QuillTool\"\r\nimport * as tt from './QuillToolType'\r\nimport * as selUtil from '../../select/SelectVMUtil'\r\nimport SelectView from '../../select/SelectView'\r\nimport * as colorPickerUtil from '../../color/ColorPickerUtil'\r\nimport { Popover } from \"antd\";\r\nimport ColorPickerView from \"../../color/ColorPickerView\";\r\nimport { EntDelete } from \"../../delete/EntDelete\";\r\nimport EntDeleteView from \"../../delete/EntDeleteView\";\r\n\r\n// Instance\r\nexport const get = (type, dict) => {\r\n  var qI = new QuillTool();\r\n\r\n  qI.Type = type;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Get_DefaultToolView = (q) => {\r\n  var toolClass = q.ToolClass;\r\n  switch (q.Type) {\r\n    case tt.header:\r\n      return <select className={toolClass} defaultValue={\"\"} onChange={e => e.persist()}>\r\n        <option value=\"1\" />\r\n        <option value=\"2\" />\r\n        <option value=\"\" />\r\n      </select>\r\n    case tt.font_family:\r\n    case tt.font_size:\r\n      return <SelectView className={toolClass} store={q.Data} />\r\n    case tt.font_color:\r\n      return <ColorPickerView className={toolClass} store={q.Data} />\r\n    case tt._delete:\r\n      return <EntDeleteView className={toolClass}\r\n        store={q.Data} style={{backgroundColor:'#ff4d4f'}} />\r\n    default:\r\n      return <button className={toolClass}>\r\n        {q.ContentView}\r\n      </button>\r\n  }\r\n}\r\n\r\nexport const Get_DefaultContentView = (q) => {\r\n  switch (q.Type) {\r\n    case tt.align_left:\r\n      return <AlignLeftView viewBox=\"0 -90 620 620\" />\r\n    case tt.align_middle:\r\n      return <AlignMiddleView viewBox=\"0 -100 620 620\" />\r\n    case tt.align_right:\r\n      return <AlignRightView viewBox=\"0 -100 670 670\" />\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\nexport const Get_DefaultData = (q) => {\r\n  var data\r\n\r\n  switch (q.Type) {\r\n    case tt.font_family:\r\n      {\r\n        var list = [\r\n          'UTM penumbra', \r\n          'Quicksand',\r\n          '-apple-system',\r\n          'BlinkMacSystemFont',\r\n          'Segoe UI',\r\n          'Roboto',\r\n          'Helvetica Neue',\r\n          'Arial',\r\n          'Noto Sans',\r\n          'sans-serif',\r\n          'Apple Color Emoji',\r\n          'Segoe UI Emoji',\r\n          'Segoe UI Symbol',\r\n          'Noto Color Emoji'\r\n        ]\r\n\r\n        var sel = selUtil.get(list, list[0]);\r\n        data = sel\r\n      }\r\n      break;\r\n    case tt.font_size:\r\n      {\r\n        var list = [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72]\r\n        var sel = selUtil.get(list, 12);\r\n        data = sel\r\n      }\r\n      break;\r\n    case tt.font_color:\r\n      {\r\n        var color = \"#000000\"\r\n        // var color = \"#8E4545\"\r\n        data = colorPickerUtil.get(color);\r\n      }\r\n      break;\r\n    case tt._delete:\r\n      {\r\n        data = new EntDelete();\r\n        data.Is_Visible = true;\r\n      }\r\n      break\r\n  }\r\n  return data;\r\n}","import { ColorPicker } from \"./ColorPicker\"\r\n\r\nexport const get = (color) => {\r\n  var qI = new ColorPicker();\r\n\r\n  qI.Color = color;\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './QuillToolUtil'\r\n\r\nexport class QuillTool {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      data: observable,\r\n    })\r\n  }\r\n\r\n  Type\r\n\r\n  get ToolClass(){\r\n    return `ql-${this.Type}`\r\n  }\r\n\r\n  toolView\r\n  get ToolView(){\r\n    if (!this.toolView){\r\n      this.toolView = util.Get_DefaultToolView(this)\r\n    } return this.toolView\r\n  } set ToolView(v){\r\n    this.toolView = v;\r\n  }\r\n\r\n  contentView\r\n  get ContentView(){\r\n    if (!this.contentView){\r\n      this.contentView = util.Get_DefaultContentView(this)\r\n    } return this.contentView\r\n  } set ContentView(v){\r\n    this.contentView = v;\r\n  }\r\n\r\n  Handle\r\n\r\n  data = undefined\r\n  get Data(){\r\n    if (!this.data) {\r\n      this.data = util.Get_DefaultData(this)\r\n    } return this.data\r\n  } set Data(v){\r\n    this.data = v;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { QuillTool } from './QuillTool';\r\nimport './QuillTool.css'\r\n\r\nclass QuillToolView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new QuillTool()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.ToolView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(QuillToolView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport QuillToolView from './tool/QuillToolView';\r\nimport * as util from './QuillEditorUtil'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport class QuillEditor {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      tools: observable,\r\n      subTools: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = `q-${genUtil.randomId()}`;\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  content = ''\r\n  get Content() {\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.OnSetContent) {\r\n      this.OnSetContent(v);\r\n    }\r\n  }\r\n\r\n  set InitialContent(v) {\r\n    this.content = v;\r\n  }\r\n\r\n  placeholder\r\n  get PlaceHolder() {\r\n    if (!this.placeholder) {\r\n      this.placeholder = 'văn bản soạn thảo ...';\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set PlaceHolder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  Focus = () => {\r\n    if (this.Ref) {\r\n      this.Ref.current.focus();\r\n    } else {\r\n      this.IsFocusInit = true\r\n    }\r\n  }\r\n\r\n  // Event\r\n  OnAltEnter\r\n  OnEmptyBackspace\r\n  OnTab\r\n\r\n  // Tools\r\n  IsHaveTool = true\r\n\r\n  tools = undefined\r\n  get Tools() {\r\n    if (!this.tools) {\r\n      this.tools = util.GetDefault_Tools(this)\r\n    }\r\n    return this.tools\r\n  } set Tools(v) {\r\n    this.tools = v;\r\n  }\r\n\r\n  subTools = undefined\r\n  get SubTools() {\r\n    if (!this.subTools) {\r\n      this.subTools = util.GetDefault_SubTools(this)\r\n    } return this.subTools\r\n  } set SubTools(v) {\r\n    this.subTools = v;\r\n  }\r\n\r\n  get FullTools() {\r\n    return this.Tools.concat(this.SubTools);\r\n  }\r\n\r\n  GetTool = (type) => {\r\n    var index = this.FullTools.findIndex(x => x.Type === type);\r\n    return index !== -1 ? this.FullTools[index] : undefined\r\n  }\r\n\r\n  get Tool_Container() {\r\n    return <div id={this.id} className='ql-snow wrapper'>\r\n      <div className='ql__tool__main'>\r\n        {this.Tools.map(x => {\r\n          return <QuillToolView key={x.Type} store={x} />\r\n        })}\r\n      </div>\r\n      <div className='ql__tool__sub'>\r\n        {this.SubTools.map(x => {\r\n          return <QuillToolView key={x.Type} store={x} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  get Handles() {\r\n    var obj = {}\r\n    this.Tools.filter(x => x.Handle !== undefined).forEach(x => {\r\n      obj[x.Type] = x.Handle\r\n    })\r\n\r\n    return obj;\r\n  }\r\n}","import { QuillEditor } from \"./QuillEditor\"\r\nimport * as toolUtil from './tool/QuillToolUtil'\r\nimport * as tt from './tool/QuillToolType'\r\n\r\nexport const get = (content, placeholder) => {\r\n  var qI = new QuillEditor();\r\n  qI.InitialContent = content;\r\n  qI.PlaceHolder = placeholder;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefault_Tools = (q) => {\r\n  return [\r\n    toolUtil.get(tt.header, q),\r\n    toolUtil.get(tt.bold, q),\r\n    toolUtil.get(tt.italic, q),\r\n    toolUtil.get(tt.underline, q),\r\n\r\n    toolUtil.get(tt.align_left,q),\r\n    toolUtil.get(tt.align_middle,q),\r\n    toolUtil.get(tt.align_right,q),\r\n\r\n    toolUtil.get(tt.code_block, q),\r\n    toolUtil.get(tt.blockquote, q),\r\n  ]\r\n}\r\n\r\nexport const GetDefault_SubTools = (q) => {\r\n  return [\r\n    \r\n  ]\r\n}","import React, { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { QuillEditor } from \"./QuillEditor\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport './QuillEditor.css'\r\nimport 'react-quill/dist/quill.snow.css'; // ES6\r\n\r\nclass QuillEditorView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new QuillEditor();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n\r\n    if (data.IsFocusInit) {\r\n      data.Ref.current.focus();\r\n    }\r\n  }\r\n\r\n  OnChange = (content) => {\r\n    var data = this.state;\r\n    data.LastContent = data.Content;\r\n    data.Content = content;\r\n  }\r\n\r\n  OnKeyDown = (e) => {\r\n    var data = this.state;\r\n    if (data.OnKeyDown) {\r\n      data.OnKeyDown(e)\r\n\r\n      if (data.IsCancel) {\r\n        data.IsCancel = false\r\n        data.Content = data.LastContent\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Alt + Enter\r\n    if (e.altKey && e.keyCode == 13) {\r\n      if (data.OnAltEnter) {\r\n        e.preventDefault();\r\n        data.OnAltEnter();\r\n      }\r\n    }\r\n    // Backspace\r\n    else if (e.keyCode == 8 || e.charCode == 46) {\r\n      if ((!data.LastContent && data.Content.length === 0) ||\r\n        (data.LastContent === data.Content && data.Content === '<p><br></p>')) {\r\n        // đang bị 1 lỗi nhỏ khi nhập 1 chữ cái, sau đó backspace\r\n        if (data.OnEmptyBackspace) {\r\n          e.preventDefault();\r\n          data.OnEmptyBackspace();\r\n        }\r\n      }\r\n    }\r\n    // Tab\r\n    else if (e.keyCode == 9) {\r\n      if (data.OnTab) {\r\n        e.preventDefault();\r\n        data.OnTab();\r\n      }\r\n    }\r\n\r\n    data.LastContent = data.Content;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var modules = {\r\n      syntax: true,\r\n      toolbar: {\r\n        container: `#${data.id}`,\r\n        //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다. \r\n        handlers: data.Handles\r\n      },\r\n      clipboard: {\r\n        // toggle to add extra line breaks when pasting HTML:\r\n        matchVisual: false,\r\n      },\r\n    };\r\n\r\n    var formats = [\r\n      'header',\r\n      'bold', 'italic', 'underline', 'strike',\r\n      'image', 'video', 'file', 'link', \"code-block\", \"video\", \"blockquote\", \"clean\"\r\n    ];\r\n\r\n    data.OnKeyDown = data.OnKeyDown ?\r\n      data.OnKeyDown : this.props.onKeyDown\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style\r\n    var onFocus = this.props.onFocus ?\r\n      this.props.onFocus : data.OnFocus\r\n\r\n    return (\r\n      <div className={`ql__wrapper ${className}`} style={style}>\r\n        {/* {container} */}\r\n        <div className={data.IsHaveTool ? '' : 'hidden'}>\r\n          {data.Tool_Container}\r\n        </div>\r\n\r\n        <ReactQuill ref={data.Ref}\r\n          className='ql__style'\r\n          // theme='snow'\r\n          modules={modules}\r\n          formats={formats}\r\n          onChange={this.OnChange}\r\n          value={data.Content}\r\n          placeholder={data.PlaceHolder}\r\n          onKeyDown={data.OnKeyDown}\r\n          onFocus={onFocus}\r\n        >\r\n        </ReactQuill>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(QuillEditorView)","import InputView from \"../input/InputView\";\r\nimport * as rs from './TextRenderState'\r\nimport { TextRenderItem } from \"./TextRenderItem\";\r\nimport { Button } from \"antd\";\r\n\r\nimport * as htmlUtil from '../../util/htmlUtil'\r\nimport QuillEditorView from \"../editor/QuillEditorView\";\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new TextRenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (content, context) => {\r\n        var className = context.ClassName;\r\n        var style = context.Style;\r\n        var onDoubleClick = context.OnDoubleClick\r\n        var onClick = context.OnClick\r\n\r\n        var storageType_css = `${context.StorageType}`\r\n\r\n        return <>\r\n          <div \r\n            className={`${className} input_wrapper view ${storageType_css}`} \r\n            style={style}\r\n            onDoubleClick={onDoubleClick}\r\n            onClick={onClick}>\r\n\r\n            {context.StorageType === 'text' ?\r\n              content :\r\n              <div dangerouslySetInnerHTML={htmlUtil.createMarkup(content)} />\r\n            }\r\n\r\n          </div>\r\n          {context.Is_Tool_Visible && context.Is_Edit_Visible ?\r\n            <Button type='primary' size='small'\r\n              className='left10 btn-warning' onClick={context.Edit}\r\n            >e</Button>\r\n            : ''}\r\n        </>\r\n      }\r\n    case 'ready':\r\n    case rs.edit:\r\n      return (content, context) => {\r\n        var className = context.ClassName;\r\n        var style = context.Style;\r\n        var onFocus = context.OnFocus\r\n\r\n        // onfocus\r\n        var r_onFocus = () => {\r\n          context.Edit();\r\n          if (onFocus) {\r\n            onFocus();\r\n          }\r\n        }\r\n\r\n        return <>\r\n          <div className={`input__wrapper edit ${className}`}>\r\n\r\n            {context.StorageType === 'text' ?\r\n              <InputView ref={context.Ref}\r\n                className='input__main'\r\n                style={style}\r\n                store={context}\r\n                ref={context.Ref}\r\n                onFocus={r_onFocus} />\r\n              :\r\n              <QuillEditorView store={context.Editor}\r\n                onFocus={r_onFocus} />\r\n            }\r\n\r\n            {context.Is_Tool_Visible && context.Is_OK_Visible ?\r\n              <Button type='primary' size='small'\r\n                onClick={context.EditOK}>ok</Button>\r\n              : ''}\r\n          </div>\r\n        </>\r\n      }\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './TextRenderItemUtil'\r\n\r\nexport default class TextRender_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\nimport { EditableTextVM } from \"./EditableTextVM\";\r\nimport './Text.css'\r\n\r\nclass EditableTextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EditableTextVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    data.ClassName = this.props.className ? this.props.className : ''\r\n    data.Style = this.props.style\r\n\r\n    data.OnFocus = data.OnFocus ?\r\n      data.OnFocus : this.props.onFocus\r\n\r\n    data.OnDoubleClick = data.OnDoubleClick ?\r\n      data.OnDoubleClick : this.props.onDoubleClick\r\n\r\n    data.OnClick = data.OnClick ?\r\n      data.OnClick : this.props.onClick\r\n\r\n    return (\r\n      <>\r\n        {data.Render()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EditableTextView)","import { makeObservable, observable, action } from 'mobx';\r\nimport NewInputView from '../input/NewInputView';\r\nimport TextRender_Dict from './TextRender_Dict';\r\nimport * as ts from './TextState'\r\nimport * as rs from './TextRenderState'\r\nimport * as util from './EditableTextVMUtil'\r\n\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport EditableTextView from './EditableTextView';\r\n\r\nexport class EditableTextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder: observable,\r\n      State: observable,\r\n      IsEditing: observable,\r\n      renderState: observable,\r\n      Is_Tool_Visible: observable,\r\n      Is_Edit_Visible: observable,\r\n      Is_OK_Visible: observable,\r\n      CanChange_RenderState: observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content() {\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n  }\r\n\r\n  // Cách lưu trữ dạng text hay html\r\n  StorageType = 'text'\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  State = ts.text\r\n\r\n  IsEditing = false\r\n\r\n  // editor\r\n  editor\r\n  get Editor(){\r\n    if (!this.editor){\r\n      this.editor = util.GetEditor(this)\r\n    } return this.editor\r\n  }\r\n\r\n  titleFunc\r\n  get TitleFunc() {\r\n    if (!this.titleFunc) {\r\n      this.titleFunc = () => this.Content;\r\n    }\r\n    return this.titleFunc;\r\n  } set TitleFunc(v) {\r\n    this.titleFunc = v;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict() {\r\n    if (!this.render_Dict) {\r\n      this.render_Dict = new TextRender_Dict();\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n  set Render_Dict(v) {\r\n    this.render_Dict = v;\r\n  }\r\n\r\n  OnSet_RenderState_Func_Dict = []\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState;\r\n  } set RenderState(v) {\r\n    if (!this.CanChange_RenderState) {\r\n      return;\r\n    }\r\n\r\n    this.Old_RenderState = this.RenderState\r\n\r\n    this.renderState = v;\r\n    this.OnSet_RenderState_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  CanChange_RenderState = true\r\n\r\n  Is_Tool_Visible = true\r\n  Is_Edit_Visible = true\r\n  Is_OK_Visible = true;\r\n\r\n  Ready = () => {\r\n    if (this.RenderState !== rs.edit){\r\n      this.RenderState = rs.ready\r\n    }\r\n  }\r\n\r\n  NotReady = () => {\r\n    if (this.RenderState !== rs.edit){\r\n      this.RenderState = rs._default\r\n    }\r\n  }\r\n\r\n  Edit = () =>this.RenderState = rs.edit\r\n\r\n  EditOK = () => this.RenderState = rs._default\r\n\r\n  Render = () => {\r\n    var render = this.Render_Dict.GetRender(this.RenderState);\r\n    return render.Render(this.Content, this);\r\n  }\r\n\r\n  OnSet_Ref_Func_Dict = []\r\n\r\n  ref\r\n  get Ref() {\r\n    return this.ref\r\n  } set Ref(v) {\r\n    this.ref = v;\r\n\r\n    genUtil.Handle(this.OnSet_Ref_Func_Dict,\r\n      (v) => this.OnSet_Ref_Func_Dict = v)\r\n  }\r\n\r\n  ref_Element\r\n  get Ref_Element() {\r\n    if (!this.ref_Element) {\r\n      var obj = this.Ref.current\r\n      if (obj && obj.getEl) {\r\n        obj = obj.getEl();\r\n      }\r\n\r\n      this.ref_Element = obj;\r\n    }\r\n    return this.ref_Element;\r\n  }\r\n\r\n  Focus = () => {\r\n    const setFocus = () => {\r\n      this.Ref_Element?.focus();\r\n    }\r\n\r\n    if (this.Ref) {\r\n      setFocus()\r\n    } else {\r\n      genUtil.Add_2(\r\n        this.OnSet_Ref_Func_Dict,\r\n        () => setFocus()\r\n      )\r\n    }\r\n  }\r\n\r\n  // View\r\n  get View() {\r\n    return <EditableTextView store={this} />\r\n  }\r\n}","import { EditableTextVM } from \"./EditableTextVM\"\r\nimport * as editorUtil from '../editor/QuillEditorUtil'\r\n\r\nexport const get = (content, canEdit = true, isToolVisible) => {\r\n  var qI = new EditableTextVM();\r\n  \r\n  qI.Content = content;\r\n  qI.CanChange_RenderState = canEdit;\r\n\r\n  if (isToolVisible === undefined){\r\n    isToolVisible = canEdit;\r\n  }\r\n\r\n  qI.Is_Tool_Visible = isToolVisible;\r\n\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetEditor = (q) => {\r\n  var qI = editorUtil.get(q.Content, q.Placeholder)\r\n\r\n  qI.OnSetContent = (v) => q.Content = v;\r\n  qI.OnKeyDown = q.OnKeyDown\r\n  qI.IsHaveTool = false\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from '../../../text/TextRenderState';\r\nimport * as editTextUtil from '../../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../../text/EditableTextView';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class UserVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState: observable,\r\n    })\r\n  }\r\n  \r\n  get id(){\r\n    return this.ModelItem.id\r\n  }\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n    this.UsernameVM.RenderState = v;\r\n    // this.DescriptionVM.RenderState = v;\r\n\r\n    if (this.OnSet_RenderState){\r\n      this.OnSet_RenderState(v)\r\n    }\r\n\r\n    if (!this.IsSaveDatabase){\r\n      this.IsSaveDatabase = true\r\n    } else if (v === rs._default) {\r\n      this.SaveDatabase(false);\r\n    }\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.RenderState === rs._default) {\r\n      this.RenderState = rs.edit\r\n      this.Hide_Tool();\r\n    }\r\n  }\r\n\r\n  // UserName\r\n  get Username(){\r\n    return this.ModelItem.Username\r\n  } set Username(v){\r\n    this.ModelItem.Username = v;\r\n  }\r\n\r\n  usernameVM\r\n  get UsernameVM() {\r\n    if (!this.usernameVM) {\r\n      var obj = this.usernameVM = editTextUtil.get(this.Username, this.CanEdit);\r\n\r\n      obj.Is_Tool_Visible = false\r\n      // obj.OnKeyDown = (e) => {\r\n      //   var { key, value } = inputUtil.Get_Shortcut(e);\r\n      //   switch (key) {\r\n      //     case inputUtil.enter:\r\n      //       this.RenderState = rs._default\r\n      //       break;\r\n      //   }\r\n      // }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Username = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.usernameVM;\r\n  }\r\n\r\n  get UsernameView() {\r\n    return <EditableTextView store={this.UsernameVM} />\r\n  }\r\n\r\n  // Name\r\n  get Name(){\r\n    return this.ModelItem.Name\r\n  } set Name(v){\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n   // Password\r\n   get Password(){\r\n    return this.ModelItem.Password\r\n  } set Password(v){\r\n    this.ModelItem.Password = v;\r\n  }\r\n\r\n  // Save\r\n  IsSaveDatabase = true\r\n\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle);\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Users\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  // command\r\n  get CommandDict(){\r\n    return this.ModelItem.CommandDict;\r\n  }\r\n}","import { UserVM } from \"./UserVM\"\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  \r\n  var qI = new UserVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import * as util from './User_DictVMUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport * as userUtil from '../item/base/UserVMUtil'\r\n\r\nexport class User_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      viewType: observable,\r\n      users: observable,\r\n      loginUser: observable\r\n    })\r\n  }\r\n\r\n  get Url() {\r\n    return this.ModelItem.Url\r\n  } set Url(v) {\r\n    this.ModelItem.Url = v;\r\n  }\r\n\r\n  // demo\r\n  demo\r\n  get Demo(){\r\n    if (!this.demo){\r\n      this.demo = util.GetDemo(this)\r\n    } return this.demo\r\n  }\r\n\r\n  // LoginUser\r\n  OnSet_LoginUser_Func = []\r\n\r\n  loginUser = undefined\r\n  get LoginUser() {\r\n    if (!this.loginUser) {\r\n      util.Handle_LoginUser(this)\r\n    } return this.loginUser;\r\n  } set LoginUser(v) {\r\n    var user = this.loginUser = v;\r\n    // Clear command\r\n    if (user) {\r\n      user.CommandDict.Clear();\r\n    }\r\n\r\n    this.ViewType = util.GetViewType(this)\r\n\r\n    if (this.IsSet_Model) {\r\n      this.ModelItem.LoginUser = v?.ModelItem;\r\n    } else {\r\n      this.IsSet_Model = true;\r\n    }\r\n\r\n    genUtil.Handle(this.OnSet_LoginUser_Func,\r\n      (v) => this.OnSet_LoginUser_Func = v)\r\n  }\r\n\r\n  get OnLogin(){\r\n    return this.LoginUser\r\n  }\r\n\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  users = undefined\r\n  get Users() {\r\n    if (!this.users) {\r\n      util.Handle_Users(this)\r\n    } return this.users\r\n  } set Users(v) {\r\n    this.users = v;\r\n\r\n    genUtil.Handle(this.OnSet_Users_Func,\r\n      (v) => this.OnSet_Users_Func = v)\r\n  }\r\n\r\n  AddUser = () => {\r\n    var qI = userUtil.get(this.ModelItem.AddUser(), this);\r\n    this.Users.push(qI);\r\n    return qI;\r\n  }\r\n\r\n  // Admin\r\n  admin\r\n  get Admin() {\r\n    if (!this.admin) {\r\n      this.admin = util.GetAdmin(this)\r\n    } return this.admin;\r\n  }\r\n\r\n  // Login\r\n  login\r\n  get Login() {\r\n    if (!this.login) {\r\n      this.login = util.GetLogin(this)\r\n    } return this.login;\r\n  }\r\n\r\n  // NewPassword\r\n  newPassword\r\n  get NewPassword() {\r\n    if (!this.newPassword) {\r\n      this.newPassword = util.GetNewPassword(this)\r\n    } return this.newPassword;\r\n  }\r\n\r\n  Logout = () => {\r\n    this.LoginUser = undefined\r\n  }\r\n\r\n  // View\r\n  viewType = undefined;\r\n  get ViewType() {\r\n    if (!this.viewType) {\r\n      util.Handle_ViewType(this)\r\n    } return this.viewType\r\n  } set ViewType(v) {\r\n    this.viewType = v;\r\n  }\r\n\r\n  loginRender\r\n  get LoginRender() {\r\n    if (!this.loginRender) {\r\n      this.loginRender = util.GetDefault_LoginRender(this)\r\n    } return this.loginRender;\r\n  } set LoginRender(v) {\r\n    this.loginRender = v;\r\n  }\r\n\r\n  userRender\r\n  get UserRender() {\r\n    if (!this.userRender) {\r\n      this.userRender = util.GetDefault_UserRender(this)\r\n    } return this.userRender;\r\n  } set UserRender(v) {\r\n    this.userRender = v;\r\n  }\r\n\r\n  mainViewRender\r\n  get MainViewRender() {\r\n    if (!this.mainViewRender) {\r\n      this.mainViewRender = util.GetDefault_MainViewRender(this)\r\n    } return this.mainViewRender\r\n  } set MainViewRender(v) {\r\n    this.mainViewRender = v;\r\n  }\r\n\r\n  get MainView() {\r\n    return this.MainViewRender();\r\n  }\r\n\r\n  modalViewRender\r\n  get ModalViewRender() {\r\n    if (!this.modalViewRender) {\r\n      this.modalViewRender = util.GetDefault_ModalViewRender(this)\r\n    } return this.modalViewRender\r\n  } set ModalViewRender(v) {\r\n    this.modalViewRender = v;\r\n  }\r\n\r\n  get ModalView() {\r\n    return this.ModalViewRender();\r\n  }\r\n\r\n  viewRender\r\n  get ViewRender() {\r\n    if (!this.viewRender) {\r\n      this.viewRender = util.GetDefault_ViewRender(this)\r\n    } return this.viewRender\r\n  } set ViewRender(v) {\r\n    this.viewRender = v;\r\n  }\r\n\r\n  get View() {\r\n    return this.ViewRender();\r\n  }\r\n}","import { message } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport { TextVM } from '../../text/TextVM'\r\nimport * as util from './LoginUtil'\r\n\r\nexport class Login {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_Modal_Visible: observable\r\n    })\r\n  }\r\n\r\n  Username = ''\r\n\r\n  usernameVM\r\n  get UsernameVM(){\r\n    if (!this.usernameVM){\r\n      this.usernameVM = util.GetUsernameVM(this)\r\n    } return this.usernameVM;\r\n  }\r\n\r\n  Password\r\n\r\n  passwordVM\r\n  get PasswordVM(){\r\n    if (!this.passwordVM){\r\n      this.passwordVM = util.GetPasswordVM(this)\r\n    } return this.passwordVM;\r\n  }\r\n\r\n  get ApiData(){\r\n    return {\r\n      username : this.Username,\r\n      password: this.Password\r\n    }\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ButtonView(){\r\n    return util.GetButtonView(this)\r\n  }\r\n\r\n  get MainView(){\r\n    return util.GetMainView(this)\r\n  }\r\n  \r\n  get ModalView(){\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  ModalOK = () => {\r\n    var username = this.Username;\r\n    var pw = this.Password;\r\n    if (!username || username.length === 0){\r\n      message.warn('Bạn phải nhập UserName!');\r\n      return;\r\n    }\r\n    if (!pw || pw.length === 0){\r\n      message.warn('Bạn phải nhập Password!');\r\n      return;\r\n    }\r\n\r\n    this.Validate();\r\n  }\r\n\r\n  Initial = () => {\r\n    this.UsernameVM.Content = ''\r\n    this.PasswordVM.Content = ''\r\n  }\r\n\r\n  Validate = () => {\r\n    util.Validate(this)\r\n  }\r\n}","import { TextVM } from \"../../text/TextVM\";\r\nimport * as ts from '../../text/TextState'\r\nimport { Login } from \"./Login\"\r\nimport InputView from \"../../input/InputView\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, message } from 'antd';\r\nimport './Login.css'\r\nimport * as uUtil from '../item/base/UserUtil'\r\nimport * as uVMUtil from '../item/base/UserVMUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Login();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetUsernameVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.Placeholder = 'tên user'\r\n  qI.Content = q.Username;\r\n  qI.onSetContent = (v) => q.Username = v;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.Password;\r\n  qI.onSetContent = (v) => q.Password = v;\r\n\r\n  return qI;\r\n}\r\n\r\n// View\r\nexport const GetButtonView = (q) => {\r\n  var click = () => {\r\n    q.Initial();\r\n    q.Is_Modal_Visible = true\r\n  }\r\n\r\n  return <Button type='primary' size='small'\r\n    onClick={click}>\r\n    Login\r\n  </Button>\r\n}\r\n\r\nexport const GetMainView = (q) => {\r\n  return <table className='login__table'>\r\n    <tbody>\r\n      <tr className='login__tr name'>\r\n        <th className='login__title'>\r\n          Username:\r\n        </th>\r\n        <td className='login__input'>\r\n          <InputView store={q.UsernameVM} />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='login__title'>\r\n          Password:\r\n        </th>\r\n        <td className='login__input'>\r\n          <InputView store={q.PasswordVM} />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  const hideVisible = () => {\r\n    q.Is_Modal_Visible = false\r\n  }\r\n\r\n  return <Modal title=\"Đăng nhập\" visible={q.Is_Modal_Visible}\r\n    onCancel={hideVisible}\r\n    width={350}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small'\r\n          onClick={q.ModalOK}>ok</Button>\r\n        <Button type='text' size='small'\r\n          onClick={hideVisible}>cancel</Button>\r\n      </>\r\n    }>\r\n    <div>\r\n      {q.MainView}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\n// Method\r\nexport const Validate = (q) => {\r\n  var dictVM = q.Dict;\r\n  var dict = dictVM.ModelItem;\r\n\r\n  const setObj = (data) => {\r\n    if (data.length !== 0) {\r\n      dictVM.LoginUser = uVMUtil.get(uUtil.GetFromDb(data[0], dict), dictVM);\r\n      q.Is_Modal_Visible = false;\r\n    } else {\r\n      message.warn('Thông tin đăng nhập không đúng!')\r\n    }\r\n  }\r\n\r\n  uUtil.GetData(dictVM.Url, q.ApiData, (data) => {\r\n    setObj(data)\r\n  });\r\n}","import { message } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport { TextVM } from '../../text/TextVM'\r\nimport * as util from './NewPasswordUtil'\r\n\r\nexport class NewPassword {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_Modal_Visible: observable\r\n    })\r\n  }\r\n\r\n  OldPassword\r\n\r\n  oldPasswordVM\r\n  get OldPasswordVM(){\r\n    if (!this.oldPasswordVM){\r\n      this.oldPasswordVM = util.GetOldPasswordVM(this)\r\n    } return this.oldPasswordVM;\r\n  }\r\n\r\n  NewPassword\r\n\r\n  newPasswordVM\r\n  get NewPasswordVM(){\r\n    if (!this.newPasswordVM){\r\n      this.newPasswordVM = util.GetNewPasswordVM(this)\r\n    } return this.newPasswordVM;\r\n  }\r\n\r\n  ReNewPassword\r\n\r\n  reNewPasswordVM\r\n  get ReNewPasswordVM(){\r\n    if (!this.reNewPasswordVM){\r\n      this.reNewPasswordVM = util.GetReNewPasswordVM(this)\r\n    } return this.reNewPasswordVM;\r\n  }\r\n\r\n  get ApiData(){\r\n    var obj = {\r\n      _id : this.User.ModelItem?._id,\r\n      oldpassword: this.OldPassword,\r\n      newpassword : this.NewPassword\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  get User(){\r\n    return this.Dict.LoginUser\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ButtonView(){\r\n    return util.GetButtonView(this)\r\n  }\r\n\r\n  get MainView(){\r\n    return util.GetMainView(this)\r\n  }\r\n  \r\n  get ModalView(){\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  ModalOK = () => {\r\n    var opw = this.OldPassword;\r\n    var npw = this.NewPassword\r\n    var rnpw = this.ReNewPassword;\r\n    if (!opw || opw.length === 0){\r\n      message.warn('Bạn phải nhập Password cũ!');\r\n      return;\r\n    }\r\n    if (!npw || npw.length === 0){\r\n      message.warn('Bạn phải nhập Password mới!');\r\n      return;\r\n    }\r\n    if (opw === npw){\r\n      message.warn('Password mới bị trùng với password cũ!');\r\n      return;\r\n    }\r\n    if (rnpw !== npw){\r\n      message.warn('Thông tin nhập lại Password mới không đúng!');\r\n      return;\r\n    }\r\n\r\n    this.Validate();\r\n  }\r\n\r\n  OpenModal = () => {\r\n    this.Initial();\r\n    this.Is_Modal_Visible = true\r\n  }\r\n\r\n  Initial = () => {\r\n    this.OldPasswordVM.Content = ''\r\n    this.NewPasswordVM.Content = ''\r\n    this.ReNewPasswordVM.Content = ''\r\n  }\r\n\r\n  Validate = () => {\r\n    util.Validate(this)\r\n  }\r\n}","import { TextVM } from \"../../text/TextVM\";\r\nimport * as ts from '../../text/TextState'\r\nimport { NewPassword } from \"./NewPassword\"\r\nimport InputView from \"../../input/InputView\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, message } from 'antd';\r\nimport './NewPassword.css'\r\nimport * as api from '../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new NewPassword();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetOldPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.OldPassword;\r\n  qI.onSetContent = (v) => q.OldPassword = v;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetNewPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.NewPassword;\r\n  qI.onSetContent = (v) => q.NewPassword = v;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetReNewPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.ReNewPassword;\r\n  qI.onSetContent = (v) => q.ReNewPassword = v;\r\n\r\n  return qI;\r\n}\r\n\r\n// View\r\nexport const GetButtonView = (q) => {\r\n  var click = () => {\r\n    q.OpenModal();\r\n  }\r\n\r\n  return <Button type='primary' size='small'\r\n    onClick={click}>\r\n    New Password\r\n  </Button>\r\n}\r\n\r\nexport const GetMainView = (q) => {\r\n  return <table className='newpassword__table'>\r\n    <tbody>\r\n      <tr className='newpassword__tr name'>\r\n        <th className='newpassword__title'>\r\n          Username:\r\n        </th>\r\n        <td className='newpassword__input'>\r\n          <b>\r\n            {q.User?.Username}\r\n          </b>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='newpassword__title'>\r\n          OldPassword:\r\n        </th>\r\n        <td className='newpassword__input'>\r\n          <InputView store={q.OldPasswordVM} />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='newpassword__title'>\r\n          NewPassword:\r\n        </th>\r\n        <td className='newpassword__input'>\r\n          <InputView store={q.NewPasswordVM} />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='login__title'>\r\n          Re-NewPassword:\r\n        </th>\r\n        <td className='login__input'>\r\n          <InputView store={q.ReNewPasswordVM} />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  const hideVisible = () => {\r\n    q.Is_Modal_Visible = false\r\n  }\r\n\r\n  return <Modal title=\"Đổi mật khẩu\" visible={q.Is_Modal_Visible}\r\n    onCancel={hideVisible}\r\n    width={400}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small'\r\n          onClick={q.ModalOK}>ok</Button>\r\n        <Button type='text' size='small'\r\n          onClick={hideVisible}>cancel</Button>\r\n      </>\r\n    }>\r\n    <div>\r\n      {q.MainView}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\n// Method\r\nexport const Validate = (q) => {\r\n  var dictVM = q.Dict;\r\n  var dict = dictVM.ModelItem;\r\n\r\n  const setObj = (data) => {\r\n    if (data === 'wrongpassword'){\r\n      message.warn('Password cũ không đúng!');\r\n    }else if (data.length !== 0) {\r\n      q.Is_Modal_Visible = false;\r\n      message.success('change password successfully!');\r\n      q.Dict.LoginUser = undefined\r\n    }\r\n  }\r\n\r\n  const apiFunc = () => api.put(`${dictVM.Url}/newpassword`, q.ApiData);\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      setObj(data)\r\n    })\r\n}","export const login = 'login'\r\nexport const user = 'user'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as util from './AdminVMUtil'\r\n\r\nexport class AdminVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      viewRender : observable\r\n    })\r\n  }\r\n\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  get Users(){\r\n    return this.Dict.Users\r\n  }\r\n\r\n\r\n  // Dict\r\n  Dict\r\n\r\n  adminUser_Dict\r\n  get AdminUser_Dict(){\r\n    if (!this.adminUser_Dict){\r\n      this.adminUser_Dict = \r\n        util.GetAdminUser_Dict(this)\r\n    } return this.adminUser_Dict\r\n  }\r\n\r\n  // Item\r\n  userManager_Dict\r\n  get UserManager_Dict(){\r\n    if (!this.userManager_Dict){\r\n      this.userManager_Dict = util.GetUserManager_Dict(this)\r\n    } return this.userManager_Dict;\r\n  }\r\n\r\n  // View\r\n  viewRender = undefined\r\n  get ViewRender(){\r\n    if (!this.viewRender){\r\n      this.viewRender = util.GetDefault_ViewRender(this)\r\n    } return this.viewRender;\r\n  } set ViewRender(v){\r\n    this.viewRender = v;\r\n  }\r\n\r\n  get View(){\r\n    return this.ViewRender();\r\n  }\r\n}","import * as editTextUtil from '../model/text/EditableTextVMUtil'\r\nimport * as genUtil from './generalUtil'\r\n\r\nexport const alt = 'alt'\r\nexport const alt_enter = 'alt_enter'\r\n\r\nexport const ctrl = 'ctrl'\r\nexport const ctrl_b = 'ctrl_b'\r\nexport const ctrl_i = 'ctrl_i'\r\n\r\nexport const enter = 'enter'\r\nexport const tab = 'tab'\r\nexport const backspace = 'backspace'\r\nexport const del = 'del'\r\nexport const esc = 'esc'\r\n\r\nexport const Get_Shortcut = (e) => {\r\n  var key;\r\n  if (e.altKey && e.keyCode == 13) {\r\n    key = alt_enter\r\n  } else if (e.ctrlKey && e.which == 66) {\r\n    key = ctrl_b\r\n  } else if (e.ctrlKey && e.which == 73) {\r\n    key = ctrl_i\r\n  } else if (e.ctrlKey) {\r\n    key = ctrl\r\n  } else if (e.altKey) {\r\n    key = alt\r\n  } else if (e.keyCode == 13) {\r\n    key = enter\r\n  } else if (e.keyCode == 9) {\r\n    key = tab\r\n  } else if (e.keyCode == 8) {\r\n    key = backspace\r\n  } else if (e.keyCode == 46) {\r\n    key = del\r\n  } else if (e.keyCode == 27) {\r\n    key = esc\r\n  }\r\n\r\n  return {\r\n    key,\r\n    value: e.key\r\n  }\r\n}\r\n\r\n// Edit RenderState\r\nexport const Ready = (q, preFunc, postFunc) => {\r\n  var isValid = preFunc ? preFunc() : true;\r\n  if (!isValid) return;\r\n\r\n  if (q.RenderState !== 'edit') {\r\n    q.RenderState = 'ready';\r\n  }\r\n\r\n  if (postFunc) {\r\n    postFunc();\r\n  }\r\n}\r\n\r\nexport const NotReady = (q) => {\r\n  if (q.RenderState !== 'edit') {\r\n    q.RenderState = 'default'\r\n  }\r\n}\r\n\r\nexport const Edit = (q, preFunc, postFunc) => {\r\n  var isValid = preFunc ? preFunc() : true;\r\n  if (!isValid) return;\r\n\r\n  if (q.RenderState === 'default') {\r\n    q.RenderState = 'edit';\r\n\r\n    if (postFunc) {\r\n      postFunc();\r\n    }\r\n  }\r\n}\r\n\r\nexport const EditOK = (q, postFunc) => {\r\n  q.RenderState = 'default';\r\n\r\n  if (postFunc) {\r\n    postFunc();\r\n  }\r\n}\r\n\r\n// Get InputView\r\nexport const GetInput = (q, field, postOkFunc) => {\r\n  var obj = editTextUtil.get(q[field]);\r\n\r\n  const set_default = () =>\r\n    EditOK(obj);\r\n\r\n  obj.Is_Tool_Visible = false\r\n  obj.OnKeyDown = (e) => {\r\n    var { key, value } = Get_Shortcut(e);\r\n\r\n    switch (key) {\r\n      case enter:\r\n        if (!obj.StorageType || obj.StorageType === 'text') {\r\n          set_default();\r\n        }\r\n        break;\r\n      case alt_enter:\r\n        if (obj.StorageType === 'html') {\r\n          set_default();\r\n        }\r\n        break;\r\n      case esc:\r\n        obj.IsEscape = true;\r\n        set_default();\r\n        break;\r\n    }\r\n  }\r\n\r\n  genUtil.Add(\r\n    obj.OnSet_RenderState_Func_Dict,\r\n    () => {\r\n      if (obj.RenderState === 'default' && obj.Old_RenderState === 'edit') {\r\n        const okfunc = () => {\r\n          if (postOkFunc) {\r\n            postOkFunc();\r\n          }\r\n        }\r\n\r\n        if (obj.IsEscape) {\r\n          obj.Editor.Content = obj.Content = q[field]\r\n          obj.IsEscape = false\r\n\r\n          okfunc();\r\n          return;\r\n        }\r\n\r\n        if (obj.Content === q[field]) {\r\n          okfunc();\r\n          return;\r\n        }\r\n\r\n        q[field] = obj.Content;\r\n        okfunc();\r\n      }\r\n    },\r\n    false\r\n  )\r\n\r\n  return obj;\r\n}\r\n\r\n// Phương thức cũ đang sử dụng trong HtmlRenderVM\r\nexport const get = (inputs, name) => {\r\n  var index = inputs.findIndex(x => x.name === name);\r\n  if (index === -1) {\r\n    inputs.push(getDefaultInput(name));\r\n    index = inputs.length - 1;\r\n  }\r\n  return inputs[index];\r\n}\r\n\r\nexport const getDefaultInput = (name) => {\r\n  let value;\r\n  switch (name) {\r\n    case '0':\r\n      value = 0;\r\n      break;\r\n    case 'x':\r\n      value = 3;\r\n      break;\r\n    case 'class':\r\n      value = 'Person';\r\n      break;\r\n    case 'classDesc':\r\n      value = 'Kiểu dữ liệu mô phỏng ...';\r\n      break;\r\n    default:\r\n      value = 'undefined';\r\n      break;\r\n  }\r\n\r\n  return { name, value }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ItemVMUtil'\r\nimport * as inputUtil from '../../../../../util/inputUtil'\r\nimport EditableTextView from '../../../../text/EditableTextView';\r\nimport { message } from 'antd';\r\n\r\nexport class ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      tempUsername: observable,\r\n      IsPasswordChanged: observable\r\n    })\r\n  }\r\n\r\n  User\r\n\r\n  // Username\r\n  get Username() {\r\n    return this.User.Username\r\n  } set Username(v) {\r\n    this.User.Username = v;\r\n  }\r\n\r\n  tempUsername = undefined\r\n  get TempUsername() {\r\n    if (!this.tempUsername) {\r\n      this.tempUsername = this.Username;\r\n    } return this.tempUsername\r\n  } set TempUsername(v) {\r\n    this.tempUsername = v;\r\n  }\r\n\r\n  usernameVM\r\n  get UsernameVM() {\r\n    if (!this.usernameVM) {\r\n      this.usernameVM = inputUtil.GetInput(this, 'TempUsername')\r\n    } return this.usernameVM\r\n  }\r\n\r\n  get UsernameView() {\r\n    return <EditableTextView\r\n      store={this.UsernameVM} />\r\n  }\r\n\r\n  // Password\r\n  get Password() {\r\n    return this.User.Password\r\n  } set Password(v) {\r\n    this.User.Password = v;\r\n  }\r\n\r\n  passwordVM\r\n  get PasswordVM() {\r\n    if (!this.passwordVM) {\r\n      var qI = this.passwordVM =\r\n        inputUtil.GetInput(this, 'TempPassword', () => {\r\n          this.Password = this.TempPassword;\r\n          this.TempPassword = qI.Content = ''\r\n          this.IsPasswordChanged = true;\r\n        })\r\n      qI.Placeholder = 'password ...'\r\n    } return this.passwordVM\r\n  }\r\n\r\n  get PasswordView() {\r\n    return <EditableTextView\r\n      store={this.PasswordVM} />\r\n  }\r\n\r\n  // Changed\r\n  get IsUsernameChanged() {\r\n    return this.Username !== this.TempUsername\r\n  }\r\n\r\n  IsPasswordChanged = false\r\n\r\n  get IsChanged() {\r\n    return this.IsUsernameChanged || this.IsPasswordChanged\r\n  }\r\n\r\n  // Row\r\n  get RowView() {\r\n    return util.GetRowView(this)\r\n  }\r\n\r\n  // Command\r\n  OK = () => {\r\n    this.Username = this.TempUsername\r\n    this.IsPasswordChanged = false\r\n\r\n    this.User.Save(() => {\r\n      message.success('save successfully!');\r\n    });\r\n  }\r\n\r\n  Cancel = () => {\r\n    this.UsernameVM.Content = this.TempUsername = this.Username\r\n    this.IsPasswordChanged = false\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  // Delete\r\n  deleteVM\r\n  get DeleteVM(){\r\n    if (!this.deleteVM){\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n\r\n    this.User.Delete();\r\n  }\r\n}","import { ItemVM } from \"./ItemVM\"\r\nimport * as inputUtil from '../../../../../util/inputUtil'\r\nimport { Button } from \"antd\";\r\nimport './Item.css'\r\nimport { EntDelete } from \"../../../../delete/EntDelete\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ItemVM();\r\n\r\n  qI.User = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetRowView = (q) => {\r\n  return <tr key={q.User.id}>\r\n    <td\r\n      onMouseEnter={\r\n        () => inputUtil.Edit(q.UsernameVM)}\r\n      onMouseLeave={\r\n        () => inputUtil.EditOK(q.UsernameVM)}\r\n    >{q.UsernameView}</td>\r\n\r\n    <td\r\n      onMouseEnter={\r\n        () => inputUtil.Edit(q.PasswordVM)}\r\n      onMouseLeave={\r\n        () => inputUtil.EditOK(q.PasswordVM)}\r\n    >{q.PasswordView}</td>\r\n\r\n    <td>\r\n      <div className='f-jc'>\r\n        <div className='f'>\r\n          {q.IsPasswordChanged ?\r\n            <Button type='primary' size='small'\r\n              onClick={q.OK}>ok</Button>\r\n            : ''}\r\n          {q.IsUsernameChanged ?\r\n            <Button type='primary' className='btn-warning' size='small'\r\n              onClick={q.Cancel}>cancel</Button>\r\n            : ''}\r\n\r\n          {q.DeleteVM.View}\r\n        </div>\r\n      </div>\r\n\r\n    </td>\r\n  </tr >\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Table.css'\r\nimport { DictVM } from '../dict/DictVM';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='table table-bordered admin__um__table'>\r\n          <thead className='admin__um__thead bg-[#e9ecef]'>\r\n            <tr>\r\n              <th className='admin__um__table__username'>Username</th>\r\n              <th className='admin__um__table__password'>Password</th>\r\n              <th className='admin__um__table__command'></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className='admin__um__tbody'>\r\n            {data.Items?.map(x => x.RowView)}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import * as genUtil from '../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\nimport { Button, message } from 'antd';\r\nimport TableView from '../table/TableView';\r\nimport './Dict.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Items\r\n  OnSet_Items_Func =[]\r\n\r\n  items = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      util.Handle_Items(this)\r\n    }   return this.items;\r\n  } set Items(v){\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var qI = itemUtil.get(this.Dict.Dict.AddUser(), this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get MainView() {\r\n    return <div>\r\n      <div className='f-jc admin__um__title'>\r\n        <span>QUẢN LÝ NGƯỜI DÙNG</span>\r\n      </div>\r\n      <div className='f'>\r\n        <div className='admin__um__add'>\r\n          <Button type='primary' size='small'\r\n            className='btn-success'\r\n            onClick={this.AddItem}>+</Button>\r\n        </div>\r\n        <div className='es__main f1'>\r\n          <TableView store={this} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}","import * as genUtil from '../../../../../util/generalUtil'\r\nimport { DictVM } from \"./DictVM\";\r\nimport './Dict.css'\r\nimport { Button } from 'antd';\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\nimport * as editTextUtil from '../../../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../../../text/EditableTextView';\r\nimport * as rs from '../../../../text/TextRenderState';\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.Dict.Dict\r\n  if (host.Users) {\r\n    setObj(host.Users)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Users_Func,\r\n    () => setObj(host.Users),\r\n    false\r\n  )\r\n}\r\n\r\n// export const GetDefault_ItemRender = (q) => {\r\n//   return (v) => <tr key={v.id} onDoubleClick={v.Edit}>\r\n//     <td>\r\n//       <div className='admin__um__username'>\r\n//         {v.UsernameView}\r\n//       </div>\r\n//     </td>\r\n//     <td>\r\n//       <div className='admin__um__password f-ac'>\r\n//         <div className='f1'>\r\n//           {v.PasswordView}\r\n//         </div>\r\n//         {v.ToolView_Render()}\r\n//       </div>\r\n//     </td>\r\n//   </tr>\r\n// }\r\n\r\n// export const GetGetItem_Func = (q) => {\r\n//   return (x) => {\r\n//     var qI = iUtil.get(x, q)\r\n\r\n//     var q1 = qI.PasswordVM = editTextUtil.get('', undefined);\r\n//     q1.Is_Tool_Visible = false\r\n//     qI.OnSet_RenderState = (v) => {\r\n//       q1.RenderState = v\r\n//     }\r\n\r\n//     genUtil.Add(\r\n//       q1.OnSet_RenderState_Func_Dict,\r\n//       () => {\r\n//         if (q1.RenderState === rs._default) {\r\n//           x.Password = q1.Content;\r\n//           q1.Content = ''\r\n//         }\r\n//       },\r\n//       false\r\n//     )\r\n//     qI.PasswordView = <EditableTextView store={q1} />\r\n\r\n//     const ok = () => {\r\n//       // qI.IsSaveDatabase = false\r\n//       qI.RenderState = rs._default\r\n//     }\r\n//     const cancel = () => {\r\n//       qI.UsernameVM.Content = qI.Username;\r\n//       qI.PasswordVM.Content = ''\r\n//       qI.IsSaveDatabase = false\r\n//       qI.RenderState = rs._default\r\n//     }\r\n\r\n//     qI.ToolView_Render = () => <div className='f'>\r\n//       {qI.RenderState === rs.edit ?\r\n//         <>\r\n//           <Button type='primary' size='small'\r\n//             onClick={ok}>ok</Button>\r\n//           <Button type='primary' size='small'\r\n//             onClick={cancel}>cancel</Button>\r\n//         </>\r\n//         : ''}\r\n//       <Button type='primary' size='small'\r\n//         className='btn-danger'\r\n//         onClick={qI.Delete}>x</Button>\r\n//     </div>\r\n\r\n//     return qI;\r\n//   }\r\n// }","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ItemVMUtil'\r\nimport './Item.css'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // User\r\n  get userId(){\r\n    return this.ModelItem.userId;\r\n  } set userId(v){\r\n    this.ModelItem.userId = v\r\n  }\r\n\r\n  OnSet_User_Func = []\r\n\r\n  user\r\n  get User(){\r\n    if (!this.user){\r\n      util.Handle_User(this)\r\n    } return this.user\r\n  } set User(v){\r\n    this.user = v;\r\n    this.userId = v?._id\r\n\r\n    genUtil.Handle(this.OnSet_User_Func,\r\n      (v) => this.OnSet_User_Func = v)\r\n  }\r\n\r\n  user_Select\r\n  get User_Select() {\r\n    if (!this.user_Select) {\r\n      this.user_Select = util.GetUser_Select(this)\r\n    } return this.user_Select\r\n  }\r\n\r\n  // Save\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  // view\r\n  get RowView() {\r\n    return util.GetRowView(this)\r\n  }\r\n}","import { ItemVM } from './ItemVM'\r\nimport { EntDelete } from '../../../../delete/EntDelete';\r\nimport { SelectVM } from '../../../../select/SelectVM';\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ItemVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// User\r\nexport const Handle_User = (q) => {\r\n  if (q.IsGet_User) return undefined;\r\n  q.IsGet_User = true;\r\n\r\n\r\n  const setObj = (data) => {\r\n    var list = data;\r\n\r\n    var _id = q.userId;\r\n    if (_id) {\r\n      q.User = genUtil.SingleFilter(list, (x) => x.id === _id);\r\n    } else {\r\n      q.User = undefined;\r\n    }\r\n\r\n    q.IsGet_User = false;\r\n  }\r\n\r\n  var host = q.ModelItem.Dict.Dict.Dict\r\n  if (host.Users) {\r\n    setObj(host.Users)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Users_Func,\r\n      () => setObj(host.Users)\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetUser_Select = (q) => {\r\n  var qI = new SelectVM();\r\n\r\n  const setObj = (data) => {\r\n    var list = qI.Items = data;\r\n\r\n    const setObj2 = () => {\r\n      qI.InitialItem = q.User;\r\n    }\r\n\r\n    if (q.User) {\r\n      setObj2();\r\n    } else {\r\n      genUtil.Add_2(q.OnSet_User_Func,\r\n        setObj2)\r\n    }\r\n  }\r\n\r\n  var host = q.ModelItem.Dict.Dict.Dict\r\n  if (host.Users) {\r\n    setObj(host.Users)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Users_Func,\r\n      () => setObj(host.Users)\r\n    )\r\n  }\r\n\r\n  qI.Placeholder = 'chọn user...'\r\n  qI.TitleRender = (v) => v.Username\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    q.User = v\r\n    q.Save()\r\n  };\r\n\r\n  return qI;\r\n}\r\n\r\n// view\r\nexport const GetRowView = (q) => {\r\n  return <tr key={q.id}>\r\n    <td>\r\n      <div className='w-40'>\r\n        {q.User_Select.View}\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div className='f-jc'>\r\n        <div className='f'>\r\n          {q.DeleteVM.View}\r\n        </div>\r\n      </div>\r\n    </td>\r\n  </tr>\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { DictVM } from '../dict/DictVM';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table>\r\n          <tbody>\r\n            {data.Items?.map(x => x.RowView)}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\nimport { Button, message } from 'antd';\r\nimport TableView from '../table/TableView';\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Items\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = this.ModelItem.AddItem();\r\n    var qI = itemUtil.get(q, this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get View() {\r\n    return <div>\r\n      <div className='f-jc text-lg font-medium'>\r\n        <span>Admin</span>\r\n      </div>\r\n      <div className='f'>\r\n        <div className='admin__pgc__add'>\r\n          <Button type='primary' size='small'\r\n            className='btn-success'\r\n            onClick={this.AddItem}>+</Button>\r\n        </div>\r\n        <div className='es__main f1 ml-2'>\r\n          <TableView store={this} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}","import { DictVM } from \"./DictVM\";\r\nimport * as iUtil from '../item/ItemVMUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x=> iUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}","import { AdminVM } from \"./AdminVM\";\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as um_dUtil from '../usermanager/dict/DictVMUtil'\r\nimport * as auDictUtil from '../adminuser/dict/DictVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new AdminVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefault_ViewRender = (q) => {\r\n  return () => q.UserManager_Dict.MainView\r\n}\r\n\r\nexport const GetUserManager_Dict = (q) => {\r\n  return um_dUtil.get(undefined, q);\r\n}\r\n\r\nexport const GetAdminUser_Dict = (q) => {\r\n  return auDictUtil.get(q.ModelItem.AdminUser_Dict, q);\r\n}","import { User_DictVM } from \"./User_DictVM\";\r\nimport * as demoItemUtil from '../item/base/UserUtil'\r\nimport * as iUtil from '../item/base/UserVMUtil'\r\nimport * as loginUtil from '../login/LoginUtil'\r\nimport * as newpasswordUtil from '../newpassword/NewPasswordUtil'\r\nimport * as vt from './User_Dict_ViewType'\r\nimport './User_Dict.css'\r\nimport { Button, message } from 'antd';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport * as adminUtil from '../admin/base/AdminVMUtil'\r\nimport * as userUtil from '../item/base/UserVMUtil'\r\nimport { SelectVM } from \"../../select/SelectVM\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new User_DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n// demo\r\nexport const GetDemo = (q) => {\r\n  var demo_data = [\r\n    {\r\n      _id: \"61222cb480d2a3f43484a8a0\",\r\n      username: \"tai\"\r\n    },\r\n    {\r\n      _id: \"613eaaf1580ca3861e99affa\",\r\n      username: \"bapmito\",\r\n    },\r\n    {\r\n      _id: \"6188fcbb8675d289d027e748\",\r\n      username: \"thuan-21.2\"\r\n    },\r\n    {\r\n      _id: \"6188fcec8675d289d027e74a\",\r\n      username: \"thang-21.2\"\r\n    }\r\n  ]\r\n\r\n  var list = demo_data.map(x => demoItemUtil.GetFromDb(x));\r\n  var select = new SelectVM();\r\n\r\n  select.TitleRender = (v) => v.Username\r\n  select.Items = list;\r\n  select.OnSelectedItemChanged = (v) => q.ModelItem.LoginUser = v\r\n  select.SetValue(list[0])\r\n\r\n  return select;\r\n}\r\n\r\n// login user\r\nexport const Handle_LoginUser = (q) => {\r\n  if (q.IsGet_LoginUser) return undefined;\r\n  q.IsGet_LoginUser = true;\r\n\r\n  const setObj = (data) => {\r\n    q.IsSet_Model = false\r\n    q.LoginUser = data ? iUtil.get(data, q) : undefined\r\n    q.IsGet_LoginUser = true;\r\n  }\r\n\r\n  var host = q.ModelItem;\r\n  genUtil.Add_2(host.OnSet_loginId_Func,\r\n    () => setObj(host.LoginUser))\r\n  var q1 = host.LoginUser;\r\n}\r\n\r\nexport const Handle_Users = (q) => {\r\n  if (q.IsGet_Users) return undefined\r\n  q.IsGet_Users = true;\r\n\r\n  var url = q.Url\r\n\r\n  const setObj = (data) => {\r\n    q.Users = data.map(x => userUtil.get(x, q));\r\n    q.IsGet_Users = false;\r\n  }\r\n\r\n  var host = q.ModelItem;\r\n  if (host.Users) {\r\n    setObj(host.Users)\r\n  } else {\r\n    genUtil.Add_2(host.OnSet_Users_Func,\r\n      () => setObj(host.Users))\r\n  }\r\n}\r\n\r\nexport const GetAdmin = (q) => {\r\n  var qI = adminUtil.get(q.ModelItem.Admin, q);\r\n  return qI;\r\n}\r\n\r\nexport const GetLogin = (q) => {\r\n  return loginUtil.get(q);\r\n}\r\n\r\nexport const GetNewPassword = (q) => {\r\n  return newpasswordUtil.get(q)\r\n}\r\n\r\nexport const Handle_ViewType = (q) => {\r\n  if (q.IsGet_ViewType) return undefined;\r\n  q.IsGet_ViewType = true;\r\n\r\n  const setObj = () => {\r\n    q.ViewType = GetViewType(q)\r\n    q.IsGet_ViewType = false;\r\n  }\r\n\r\n  if (q.LoginUser) {\r\n    setObj();\r\n  } else {\r\n    genUtil.Add_2(\r\n      q.OnSet_LoginUser_Func,\r\n      setObj\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetViewType = (q) => {\r\n  return q.LoginUser ? vt.user : vt.login\r\n}\r\n\r\nexport const GetDefault_LoginRender = (q) => {\r\n  return () => q.Login.ButtonView;\r\n}\r\n\r\nexport const GetDefault_UserRender = (q) => {\r\n  return () => <>\r\n    <div className='f-ac'>\r\n      <div className='ud__username'\r\n        onClick={q.NewPassword.OpenModal}>\r\n        <b>{q.LoginUser.Username}</b>\r\n      </div>\r\n      <Button type='primary' size='small'\r\n        className='btn-danger ud__logout'\r\n        onClick={q.Logout}>\r\n        x\r\n      </Button>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport const GetDefault_MainViewRender = (q) => {\r\n  return () => {\r\n    switch (q.ViewType) {\r\n      case vt.login:\r\n        return q.LoginRender()\r\n      case vt.user:\r\n        return q.UserRender();\r\n      default:\r\n        return ''\r\n    }\r\n    // q.ViewType === vt.login ?\r\n    //   q.LoginRender() : q.UserRender();\r\n  }\r\n}\r\n\r\nexport const GetDefault_ModalViewRender = (q) => {\r\n  return () => <>\r\n    {q.Login.ModalView}\r\n    {q.NewPassword.ModalView}\r\n  </>\r\n}\r\n\r\nexport const GetDefault_ViewRender = (q) => {\r\n  return () => <div>\r\n    <div className='ud__main__wrapper'>\r\n      {q.MainView}\r\n    </div>\r\n    {q.ModalView}\r\n  </div>\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { DictVM } from '../dict/DictVM';\r\nimport './Table.css'\r\nimport * as commandType from '../../command/base/CommandType'\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='table table-bordered'>\r\n          <thead className='mt__thead'>\r\n            <tr>\r\n              <th className='role__table__name'/>\r\n\r\n              {commandType.List().map(x => {\r\n                return <td key={x} className='role__table__item'>\r\n                  {commandType.GetName(x)}\r\n                </td>\r\n              })}\r\n\r\n              <th className='role__table__command'></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.Items?.map(x => x.RowView)}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as util from './ItemVMUtil'\r\nimport './Item.css'\r\nimport EditableTextView from '../../../../../text/EditableTextView';\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as inputUtil from '../../../../../../util/inputUtil'\r\n\r\nexport class ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Name\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  } set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      this.nameVM = inputUtil.GetInput(this, 'Name', () => this.Save());\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  get NameView() {\r\n    return <EditableTextView className='mgs__cell__main'\r\n      store={this.NameVM} />\r\n  }\r\n\r\n   // command\r\n   commands\r\n   get Commands(){\r\n     if (!this.commands){\r\n       this.commands = util.GetCommands(this)\r\n     } return this.commands;\r\n   }\r\n \r\n\r\n  // row\r\n  get RowView(){\r\n    return util.GetRowView(this)\r\n  }\r\n\r\n  // save\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as util from './CommandVMUtil'\r\nimport * as commandLevel from './CommandLevel'\r\n\r\nexport class CommandVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      level : observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n  \r\n  get Type(){\r\n    return this.ModelItem.Type\r\n  }\r\n\r\n  // level\r\n  level = undefined\r\n  get Level(){\r\n    if (!this.level){\r\n      this.level = this.ModelItem.Level\r\n    } return this.level\r\n  } set Level(v){\r\n    this.level = this.ModelItem.Level = v\r\n  }\r\n\r\n  UpLevel = () => {\r\n    util.UpLevel(this)\r\n\r\n    // save\r\n    this.Dict.Save();\r\n  }\r\n\r\n  // View\r\n  get View(){\r\n    return util.GetView(this)\r\n  }\r\n}","import { CommandVM } from './CommandVM'\r\nimport { Button, message } from 'antd';\r\nimport * as commandLevel from './CommandLevel'\r\nimport './Command.css'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new CommandVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetView = (q) => {\r\n  return <td className='text-center non-input' key={q.id}>\r\n    <div className='f-jc'>\r\n      <div onClick={q.UpLevel}\r\n        className={`role__command ${q.Level} f-jc`}\r\n      >\r\n        {q.Level}\r\n      </div>\r\n    </div>\r\n  </td>\r\n}\r\n\r\nexport const UpLevel = (q) => {\r\n  var list = commandLevel.List();\r\n  var index = list.indexOf(q.Level)\r\n\r\n  var n_index = index !== list.length - 1 ? index + 1 : 0\r\n  q.Level = list[n_index];\r\n}","import { ItemVM } from './ItemVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete';\r\nimport { Button, message } from 'antd';\r\n\r\nimport * as commandUtil from '../../command/base/CommandVMUtil'\r\n\r\nimport * as inputUtil from '../../../../../../util/inputUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ItemVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetCommands = (q) => {\r\n  return q.ModelItem.Commands.map(x => commandUtil.get(x, q));\r\n}\r\n\r\n// view\r\nexport const GetRowView = (q) => {\r\n  return <tr key={q.id}>\r\n    <td\r\n      onMouseEnter={\r\n        () => inputUtil.Edit(q.NameVM)\r\n      }\r\n      onMouseLeave={\r\n        () => inputUtil.EditOK(q.NameVM)\r\n      }\r\n    >{q.NameView}</td>\r\n\r\n    {/* Command */}\r\n    {q.Commands.map(x => x.View)}\r\n\r\n    {/* Delete */}\r\n    <td className='non-input text-center'>\r\n      {q.DeleteVM.View}\r\n    </td>\r\n  </tr>\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport TableView from '../table/TableView';\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport './Dict.css'\r\nimport { Button } from 'antd';\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = this.ModelItem.AddItem();\r\n    var qI = itemUtil.get(q, this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get View() {\r\n    return <div className='mt__wrapper'>\r\n      <div className='f-jc text-lg font-medium mb-3'>\r\n        <span>Phân quyền</span>\r\n      </div>\r\n\r\n      <div className='f'>\r\n        <Button type='primary' size='small'\r\n          className='btn-success mt__add'\r\n          onClick={this.AddItem}>+</Button>\r\n\r\n        <div className='f1'>\r\n          <TableView store={this} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}","import { DictVM } from \"./DictVM\";\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}","import { makeObservable, observable, action } from 'mobx'\r\nimport * as util from './GroupVMUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class GroupVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      currentItem: observable,\r\n    })\r\n  }\r\n\r\n  itemDict\r\n  get ItemDict() {\r\n    if (!this.itemDict) {\r\n      this.itemDict = util.GetItemDict(this)\r\n    }\r\n    return this.itemDict\r\n  }\r\n\r\n  OnSet_CurrentItem_Func = []\r\n\r\n  currentItem = undefined\r\n  get CurrentItem() {\r\n    if (!this.currentItem) {\r\n      util.Handle_CurrentItem(this)\r\n    }\r\n    return this.currentItem\r\n  }\r\n  set CurrentItem(v) {\r\n    this.currentItem = v\r\n    genUtil.Handle(\r\n      this.OnSet_CurrentItem_Func,\r\n      (v) => (this.OnSet_CurrentItem_Func = v)\r\n    )\r\n  }\r\n\r\n  // view\r\n  get View() {\r\n    return util.GetView(this)\r\n  }\r\n}\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport { Button, message } from 'antd'\r\nimport * as util from './BaseVMUtil'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class BaseVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      info: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id\r\n  }\r\n\r\n  // data\r\n  fields\r\n  get Fields() {\r\n    if (!this.fields) {\r\n      this.fields = util.GetFields(this)\r\n    }\r\n    return this.fields\r\n  }\r\n\r\n  GetField = (name) => {\r\n    return genUtil.SingleFilter(this.Fields, (x) => x.Key === name)\r\n  }\r\n\r\n  // trade\r\n  tradeGroup\r\n  get TradeGroup() {\r\n    if (!this.tradeGroup) {\r\n      this.tradeGroup = util.GetTradeGroup(this)\r\n    }\r\n    return this.tradeGroup\r\n  }\r\n\r\n  // info\r\n  OnGet_Info_Func = []\r\n\r\n  info = undefined\r\n  get Info() {\r\n    if (!this.info) {\r\n      util.Handle_Info(this)\r\n    }\r\n    return this.info\r\n  }\r\n  set Info(v) {\r\n    this.info = v\r\n\r\n    genUtil.Handle(this.OnGet_Info_Func, (v) => (this.OnGet_Info_Func = v))\r\n  }\r\n\r\n  get IsOwned() {\r\n    return this.ModelItem.IsOwned\r\n  }\r\n\r\n  // creator\r\n  get IsCreator() {\r\n    return this.Dict.IsCreator\r\n  }\r\n\r\n  get IsOwner() {\r\n    return this.IsCreator || this.ModelItem.IsOwner\r\n  }\r\n\r\n  // css\r\n  get Css() {\r\n    return this === this.Dict.CurrentItem\r\n      ? 'bg-[#52c41a90] text-white font-medium'\r\n      : ''\r\n  }\r\n\r\n  // current\r\n  SetCurrent = () => {\r\n    var dict = this.Dict\r\n\r\n    if (dict.CurrentItem === this) {\r\n      dict.CurrentItem = undefined\r\n    } else {\r\n      dict.CurrentItem = this\r\n    }\r\n  }\r\n\r\n  // save\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete()\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    }\r\n    return this.deleteVM\r\n  }\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return this.Dict.Validate(level)\r\n  }\r\n\r\n  // view\r\n  get TitleView() {\r\n    return util.GetTitleView(this)\r\n  }\r\n\r\n  get ContentView() {\r\n    return util.GetContentView(this)\r\n  }\r\n}\r\n","export const code = 'code'\r\nexport const name = 'name'\r\nexport const ref_rationame = 'ref_rationame'\r\n\r\nexport const List = () => {\r\n  return [code, name, ref_rationame]\r\n}\r\n\r\nexport const GetName = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case code:\r\n      r_name = 'Code'\r\n      break\r\n    case name:\r\n      r_name = 'Name'\r\n      break\r\n    case ref_rationame:\r\n      r_name = 'Reference_RatioName'\r\n      break\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetTitle = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case code:\r\n      r_name = 'Code'\r\n      break\r\n    case name:\r\n      r_name = 'Name'\r\n      break\r\n    case ref_rationame:\r\n      r_name = 'Reference RatioName'\r\n      break\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetPlaceholder = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case code:\r\n      r_name = 'code'\r\n      break\r\n    case name:\r\n      r_name = 'name'\r\n      break\r\n    case ref_rationame:\r\n      r_name = 'ref ratio'\r\n      break\r\n  }\r\n\r\n  return r_name\r\n}\r\n","import * as util from './RefDictUtil'\r\n\r\nexport class RefDict {\r\n  Items = []\r\n\r\n  GetItem = (name) => {\r\n    return util.GetItem(this, name)\r\n  }\r\n\r\n  GetRef = (name) => {\r\n    return this.GetItem(name).value;\r\n  }\r\n\r\n  get Target(){\r\n    return this.GetRef('Target')\r\n  }\r\n}","import React from 'react';\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\n// method\r\nexport const GetItem = (q, name) => {\r\n  var list = q.Items;\r\n\r\n  var item = genUtil.SingleFilter(list, x => x.key === name)\r\n  if (!item){\r\n    item = {\r\n      key: name,\r\n      value : React.createRef()\r\n    }\r\n\r\n    list.push(item)\r\n  }\r\n\r\n  return item;\r\n}","import { RefDict } from '../model/ref/RefDict';\r\n\r\nexport const GetRefData = (q) => {\r\n  if (!q.Target_RefData) {\r\n    q.Target_RefData = new RefDict();\r\n  }\r\n\r\n  return q.Target_RefData\r\n}\r\n\r\nexport const GetRefItem = (q, refName) => {\r\n  if (!q.Target_RefData) {\r\n    q.Target_RefData = new RefDict();\r\n  }\r\n\r\n  return q.Target_RefData.GetItem(refName);\r\n}\r\n\r\nexport const CheckOutside = (e, ref) => {\r\n  try {\r\n    return ref && ref.current && !ref.current.contains(e.target)\r\n  } catch {\r\n    console.log(ref.current)\r\n    throw 500;\r\n  }\r\n}\r\n\r\nexport const ClickOutsite = (q, refName, handle) => {\r\n  var item = GetRefItem(q, refName);\r\n\r\n  if (!item.Events) {\r\n    item.Events = []\r\n  }\r\n\r\n  var ref = item.value;\r\n\r\n  item.Events.push({\r\n    key: 'mousedown',\r\n    func: (e) => {\r\n      if (CheckOutside(e, ref)) {\r\n        handle(e);\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const Export_RefData = (q, loadType) => {\r\n  if (q.Target_RefData) {\r\n    q.Target_RefData.Items.forEach(item => {\r\n      if (!item.Events) return;\r\n\r\n      item.Events.forEach(x => {\r\n        // mount\r\n        if (loadType === 'mount') {\r\n          document.addEventListener(x.key, x.func);\r\n        }\r\n\r\n        // unmount\r\n        if (loadType === 'unmount') {\r\n          document.removeEventListener(x.key, x.func);\r\n        }\r\n      })\r\n    })\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Field } from './Field';\r\n\r\nimport * as refUtil from '../../util/refUtil'\r\n\r\nclass FieldView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Field()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    refUtil.Export_RefData(this.state, 'mount');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    refUtil.Export_RefData(this.state, 'unmount');\r\n  }\r\n\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div ref={data.RefData.GetRef('Target')}>\r\n          {data.ValueVM.View}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FieldView);\r\n","import * as util from './FieldUtil'\r\n\r\nimport * as inputUtil from '../../util/inputUtil'\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport FieldView from './FieldView'\r\n\r\nexport class Field {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Key\r\n\r\n  get Key_id() {\r\n    return this.Key ? this.Key : this.id\r\n  }\r\n\r\n  // ref\r\n  refData\r\n  get RefData() {\r\n    if (!this.refData) {\r\n      this.refData = util.GetRefData(this)\r\n    } return this.refData\r\n  } set RefData(v) {\r\n    this.refData = v;\r\n  }\r\n\r\n  // dict\r\n  Dict\r\n\r\n  // value\r\n  valueGet\r\n  get ValueGet() {\r\n    if (!this.valueGet) {\r\n      this.valueGet = util.GetDefault_ValueGet(this)\r\n    } return this.valueGet\r\n  } set ValueGet(v) {\r\n    this.valueGet = v\r\n  }\r\n\r\n  valueSet\r\n  get ValueSet() {\r\n    if (!this.valueSet) {\r\n      this.valueSet = util.GetDefault_ValueSet(this)\r\n    } return this.valueSet\r\n  } set ValueSet(v) {\r\n    this.valueSet = v\r\n  }\r\n\r\n  ValueSet_OK\r\n\r\n  value\r\n  get Value() {\r\n    return this.ValueGet();\r\n  } set Value(v) {\r\n    if (this.RefineValue) {\r\n      if (!this.IsRefinedValue) {\r\n        this.IsRefinedValue = true\r\n        // v = this.RefineValue(v)\r\n        this.ValueVM.Content = this.RefineValue(v);\r\n        return;\r\n      } else {\r\n        this.IsRefinedValue = false\r\n      }\r\n    }\r\n\r\n    this.ValueSet(v);\r\n\r\n    if (this.OnSetValue) {\r\n      this.OnSetValue(v)\r\n    }\r\n  }\r\n\r\n  // value VM\r\n  ValueVM_Render\r\n\r\n  valueVM\r\n  get ValueVM() {\r\n    if (!this.valueVM) {\r\n      var obj = this.valueVM =\r\n        inputUtil.GetInput(this, 'Value', this.ValueSet_OK)\r\n      obj.InputRegex = this.InputRegex\r\n\r\n      if (this.ValueVM_Render) {\r\n        this.ValueVM_Render(obj);\r\n      }\r\n    } return this.valueVM;\r\n  }\r\n\r\n  // Regex\r\n  InputRegex\r\n\r\n  // edit\r\n  Ready = () => {\r\n    if (this.PreReady) {\r\n      if (!this.PreReady()) return;\r\n    }\r\n\r\n    inputUtil.Ready(this.ValueVM)\r\n  }\r\n\r\n  NotReady = () => {\r\n    if (this.PreNotReady) {\r\n      if (!this.PreNotReady()) return;\r\n    }\r\n\r\n    inputUtil.NotReady(this.ValueVM)\r\n  }\r\n\r\n  // edit\r\n  get OnEdit() {\r\n    return this.ValueVM.RenderState === 'edit'\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.PreEdit) {\r\n      if (!this.PreEdit()) return;\r\n    }\r\n\r\n    inputUtil.Edit(this.ValueVM)\r\n  }\r\n\r\n  EditOK = () => {\r\n    if (this.PreEditOK) {\r\n      if (!this.PreEditOK()) return;\r\n    }\r\n\r\n    inputUtil.EditOK(this.ValueVM)\r\n  }\r\n\r\n  // view\r\n  viewRender\r\n  get ViewRender() {\r\n    if (!this.viewRender) {\r\n      this.viewRender = util.GetDefault_ViewRender(this)\r\n    } return this.viewRender\r\n  } set ViewRender(v) {\r\n    this.viewRender = v;\r\n  }\r\n\r\n  get View() {\r\n    return this.ViewRender();\r\n  }\r\n\r\n  get WrapperView() {\r\n    return util.Get_WrapperView(this)\r\n  }\r\n}","import { Field } from \"./Field\";\r\nimport FieldView from \"./FieldView\";\r\n\r\nimport * as refUtil from '../../util/refUtil'\r\n\r\n// instance\r\nexport const get = (valueGet, valueSet, valueSet_OK, \r\n    storageType = 'text') => {\r\n  var qI = new Field();\r\n\r\n  qI.ValueGet = valueGet;\r\n  qI.ValueSet = valueSet;\r\n  qI.ValueSet_OK = valueSet_OK\r\n\r\n  qI.ValueVM.StorageType = storageType\r\n\r\n  return qI;\r\n}\r\n\r\n// property\r\n// ref\r\nexport const GetRefData = (q) => {\r\n  refUtil.ClickOutsite(q, 'Target', (e) => {\r\n    q.EditOK()\r\n  })\r\n\r\n  return q.Target_RefData;\r\n}\r\n\r\nexport const GetDefault_ValueGet = (q) => {\r\n  return q.value;\r\n}\r\n\r\nexport const GetDefault_ValueSet = (q, v) => {\r\n  return q.value = v;\r\n}\r\n\r\n// view\r\nexport const GetDefault_ViewRender = (q) => {\r\n  return () => <FieldView key={q.Key_id} store={q} />\r\n}\r\n\r\nexport const Get_WrapperView = (q) => {\r\n  return <div key={q.id}\r\n    onMouseEnter={q.Ready}\r\n    onMouseLeave={q.NotReady}\r\n    onDoubleClick={q.Edit}>\r\n      {q.View}\r\n  </div>\r\n}","import { makeObservable, observable, action } from 'mobx'\r\nimport { Button, message } from 'antd'\r\nimport * as util from './BaseVMUtil'\r\n\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\n\r\nexport class BaseVM {\r\n  constructor() {\r\n    makeObservable(this, {})\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id\r\n  }\r\n\r\n  // data\r\n  fields\r\n  get Fields() {\r\n    if (!this.fields) {\r\n      this.fields = util.GetFields(this)\r\n    }\r\n    return this.fields\r\n  }\r\n\r\n  GetField = (name) => {\r\n    return genUtil.SingleFilter(this.Fields, (x) => x.Key === name)\r\n  }\r\n\r\n  // star review\r\n  get Star() {\r\n    return this.ModelItem.Star\r\n  }\r\n\r\n  get StarView() {\r\n    return util.GetStarView(this)\r\n  }\r\n\r\n  get IsOwner() {\r\n    return this.Dict.IsOwner\r\n  }\r\n\r\n  // save\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle)\r\n  }\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return this.Dict.Validate(level)\r\n  }\r\n\r\n  // view\r\n  get View() {\r\n    return util.GetView(this)\r\n  }\r\n}\r\n","export const description = 'name'\r\n\r\nexport const List = () => {\r\n  return [description]\r\n}\r\n\r\nexport const GetName = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case description:\r\n      r_name = 'Description'\r\n      break\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetTitle = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case description:\r\n      r_name = 'Description'\r\n      break\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetPlaceholder = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case description:\r\n      r_name = 'mô tả addin'\r\n      break\r\n  }\r\n\r\n  return r_name\r\n}\r\n","import { StarFilled, StarOutlined } from '@ant-design/icons'\r\nimport { BaseVM } from './BaseVM'\r\nimport * as f from '../field/Field'\r\nimport * as fieldUtil from '../../../../../../field/FieldUtil'\r\n\r\nimport * as inputUtil from '../../../../../../../util/inputUtil'\r\nimport { PMDataVM } from '../../../../../single/form/PMDataVM'\r\nimport { Switch } from 'antd'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new BaseVM()\r\n  qI.ModelItem = q\r\n  qI.Dict = dict\r\n  return qI\r\n}\r\n\r\n// Property\r\n// field\r\nexport const GetFields = (q) => {\r\n  var inputs = f.List()\r\n\r\n  var host = q.ModelItem\r\n  var fields = []\r\n\r\n  inputs.forEach((x, i) => {\r\n    var fName = f.GetName(x)\r\n\r\n    var qI\r\n    qI = fieldUtil.get(\r\n      () => host[fName],\r\n      (v) => {\r\n        host[fName] = v\r\n      },\r\n      q.Save,\r\n      'html'\r\n    )\r\n\r\n    // qI.PreReady = () => q.Validate('edit') && pmDataVM().ViewMode === 'edit'\r\n    // qI.PreEdit = () => q.Validate('edit')\r\n\r\n    var validate = () => q.IsOwner\r\n    qI.PreReady = () => {\r\n      return validate() && pmDataVM().ViewMode === 'edit'\r\n    }\r\n    qI.PreEdit = validate\r\n\r\n    qI.Key = x\r\n    fields.push(qI)\r\n  })\r\n\r\n  return fields\r\n}\r\n\r\n// star review\r\nexport const GetStarView = (q) => {\r\n  var elems = []\r\n\r\n  var star = q.Star\r\n  var rating = star.Rating\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    elems.push(\r\n      <div className=\"mr-1 text-yellow-300\" key={i}>\r\n        {i <= rating - 1 ? <StarFilled /> : <StarOutlined />}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      <div className=\"flex\">{elems}</div>\r\n      <div className=\"ml-2 mt-1 font-medium\">{star.Quantity} Reviews</div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// view\r\nexport const GetView = (q) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <div className=\"my-2\">{q.StarView}</div> */}\r\n\r\n        <div className=\"my-2 -ml-4\">\r\n          {q.GetField(f.description).WrapperView}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport * as util from './GroupVMUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class GroupVM {\r\n  constructor() {\r\n    makeObservable(this, {})\r\n  }\r\n\r\n  futureDict\r\n  get FutureDict() {\r\n    if (!this.futureDict) {\r\n      this.futureDict = util.GetFutureDict(this)\r\n    }\r\n    return this.futureDict\r\n  }\r\n\r\n  // view\r\n  get View() {\r\n    return util.GetView(this)\r\n  }\r\n}\r\n","export const type = 'type'\r\nexport const initialprice = 'initialprice'\r\n\r\nexport const takeprofitprice = 'takeprofitprice'\r\nexport const takeprofitprecent = 'takeprofitprecent'\r\n\r\nexport const stoplossprice = 'stoplossprice'\r\nexport const stoplosspercent = 'stoplosspercent'\r\n\r\nexport const List = () => {\r\n  return [\r\n    initialprice, //\r\n    takeprofitprice,\r\n    takeprofitprecent,\r\n    stoplossprice,\r\n    stoplosspercent,\r\n  ]\r\n}\r\n\r\nexport const GetName = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case initialprice:\r\n      r_name = 'InitialPrice'\r\n      break\r\n    case takeprofitprice:\r\n      r_name = 'TakeProfit_Price'\r\n      break\r\n    case takeprofitprecent:\r\n      r_name = 'TakeProfit_Percent'\r\n      break\r\n    case stoplossprice:\r\n      r_name = 'StopLoss_Price'\r\n      break\r\n    case stoplosspercent:\r\n      r_name = 'StopLoss_Percent'\r\n      break\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetTitle = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case initialprice:\r\n      r_name = 'InitialPrice'\r\n      break\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetPlaceholder = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case initialprice:\r\n      r_name = 'init price'\r\n      break\r\n  }\r\n\r\n  return r_name\r\n}\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport { Button, message } from 'antd'\r\nimport * as util from './BaseVMUtil'\r\nimport * as f from '../field/Field'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class BaseVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      type: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id\r\n  }\r\n\r\n  // data\r\n  fields\r\n  get Fields() {\r\n    if (!this.fields) {\r\n      this.fields = util.GetFields(this)\r\n    }\r\n    return this.fields\r\n  }\r\n\r\n  GetField = (name) => {\r\n    return genUtil.SingleFilter(this.Fields, (x) => x.Key === name)\r\n  }\r\n\r\n  SetField = (name, val) => {\r\n    var field = this.GetField(name)\r\n    field.IsStopPropagation = true\r\n\r\n    var valVM = field.ValueVM\r\n    valVM.RenderState = 'edit'\r\n    valVM.Content = val\r\n\r\n    valVM.EditOK()\r\n  }\r\n\r\n  Refresh_Field = (name) => {\r\n    util.Refresh_Field(this, name)\r\n  }\r\n\r\n  type = undefined\r\n  get Type() {\r\n    if (!this.type) {\r\n      this.type = this.ModelItem.Type\r\n    }\r\n    return this.type\r\n  }\r\n  set Type(v) {\r\n    this.type = v\r\n    this.ModelItem.Type = v\r\n\r\n    this.Is_SaveCancel = true\r\n\r\n    var list = [\r\n      f.takeprofitprice, //\r\n      f.stoplossprice,\r\n    ]\r\n\r\n    list.forEach((x) => {\r\n      this.Refresh_Field(x)\r\n    })\r\n\r\n    this.Is_SaveCancel = false\r\n    this.Save()\r\n  }\r\n\r\n  get IsSubmit() {\r\n    return this.ModelItem.IsSubmit\r\n  }\r\n\r\n  Submit = (type) => {\r\n    this.ModelItem.Submit(type)\r\n  }\r\n\r\n  get InCoin() {\r\n    return this.Dict.InCoin\r\n  }\r\n\r\n  get IsOwned() {\r\n    return this.ModelItem.IsOwned\r\n  }\r\n\r\n  // creator\r\n  get IsCreator() {\r\n    return this.Dict.IsCreator\r\n  }\r\n\r\n  get IsOwner() {\r\n    return this.IsCreator || this.ModelItem.IsOwner\r\n  }\r\n\r\n  // css\r\n  get Css() {\r\n    return this === this.Dict.CurrentItem\r\n      ? 'bg-[#52c41a90] text-white font-medium'\r\n      : ''\r\n  }\r\n\r\n  // current\r\n  SetCurrent = () => {\r\n    var dict = this.Dict\r\n\r\n    if (dict.CurrentItem === this) {\r\n      dict.CurrentItem = undefined\r\n    } else {\r\n      dict.CurrentItem = this\r\n    }\r\n  }\r\n\r\n  // save\r\n  Save = (handle) => {\r\n    const finish = () => {\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    }\r\n\r\n    if (this.Is_SaveCancel) {\r\n      finish()\r\n      return\r\n    }\r\n\r\n    this.ModelItem.Save(finish)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete()\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    }\r\n    return this.deleteVM\r\n  }\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return this.Dict.Validate(level)\r\n  }\r\n\r\n  // view\r\n  get RowView() {\r\n    return util.GetRowView(this)\r\n  }\r\n}\r\n","import { CheckCircleOutlined, LinkOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { BaseVM } from './BaseVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete'\r\nimport * as f from '../field/Field'\r\nimport * as fieldUtil from '../../../../../field/FieldUtil'\r\nimport * as modelUtil from './BaseUtil'\r\n\r\nimport * as inputUtil from '../../../../../../util/inputUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM'\r\nimport { Switch } from 'antd'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new BaseVM()\r\n  qI.ModelItem = q\r\n  qI.Dict = dict\r\n  return qI\r\n}\r\n\r\n// Property\r\n// field\r\nexport const GetFields = (q) => {\r\n  var inputs = f.List()\r\n\r\n  var host = q.ModelItem\r\n  var fields = []\r\n\r\n  inputs.forEach((x, i) => {\r\n    var fName = f.GetName(x)\r\n\r\n    var qI\r\n    qI = fieldUtil.get(\r\n      () => host[fName],\r\n      (v) => {\r\n        host[fName] = v\r\n      },\r\n      q.Save\r\n    )\r\n\r\n    qI.OnSetValue = (v) => {\r\n      if (qI.IsStopPropagation) {\r\n        qI.IsStopPropagation = false\r\n        return\r\n      }\r\n\r\n      switch (x) {\r\n        case f.initialprice:\r\n        case f.takeprofitprice:\r\n        case f.takeprofitprecent:\r\n        case f.stoplossprice:\r\n        case f.stoplosspercent:\r\n          q.Is_SaveCancel = true\r\n\r\n          var targetFields\r\n          switch (x) {\r\n            case f.initialprice:\r\n              targetFields = [f.takeprofitprice, f.stoplossprice]\r\n              break\r\n            case f.takeprofitprice:\r\n              targetFields = [f.takeprofitprecent]\r\n              break\r\n            case f.takeprofitprecent:\r\n              targetFields = [f.takeprofitprice]\r\n              break\r\n            case f.stoplossprice:\r\n              targetFields = [f.stoplosspercent]\r\n              break\r\n            case f.stoplosspercent:\r\n              targetFields = [f.stoplossprice]\r\n              break\r\n          }\r\n\r\n          targetFields.forEach((field) => Refresh_Field(q, field))\r\n\r\n          q.Is_SaveCancel = false\r\n          break\r\n      }\r\n    }\r\n\r\n    // qI.PreReady = () => q.Validate('edit') && pmDataVM().ViewMode === 'edit'\r\n    // qI.PreEdit = () => q.Validate('edit')\r\n\r\n    var validate = () => !q.IsSubmit\r\n    qI.PreReady = () => {\r\n      return validate()\r\n      // && pmDataVM().ViewMode === 'edit'\r\n    }\r\n    qI.PreEdit = validate\r\n\r\n    qI.Key = x\r\n    fields.push(qI)\r\n  })\r\n\r\n  return fields\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete()\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete()\r\n  }\r\n\r\n  return qI\r\n}\r\n\r\nexport const Refresh_Field = (q, field) => {\r\n  var val\r\n  var model = q.ModelItem\r\n\r\n  switch (field) {\r\n    case f.takeprofitprice:\r\n      val = modelUtil.GetTakeProfit_Price(model)\r\n      break\r\n    case f.stoplossprice:\r\n      val = modelUtil.GetStopLoss_Price(model)\r\n      break\r\n    case f.takeprofitprecent:\r\n      val = modelUtil.GetTakeProfit_Percent(model)\r\n      break\r\n    case f.stoplosspercent:\r\n      val = modelUtil.GetStopLoss_Percent(model)\r\n      break\r\n  }\r\n\r\n  q.SetField(field, val)\r\n\r\n  // q.Is_SaveCancel = true\r\n\r\n  // var model = q.ModelItem\r\n\r\n  // q.SetField(f.stoplossprice, modelUtil.GetStopLoss_Price(model))\r\n\r\n  // q.Is_SaveCancel = false\r\n  // q.Save()\r\n}\r\n\r\n// view\r\nexport const GetRowView = (q) => {\r\n  var model = q.ModelItem\r\n\r\n  return (\r\n    <tr key={q.id}>\r\n      <td className=\"non-input\">{q.Index + 1}</td>\r\n      <td className=\"non-input\">{!q.IsSubmit ? q.DeleteVM.View : ''}</td>\r\n\r\n      {!q.InCoin ? (\r\n        <td className=\"non-input font-medium\">{model.Coin?.Code}</td>\r\n      ) : undefined}\r\n\r\n      <td className=\"non-input\">\r\n        <div className=\"flex\">\r\n          <div className={`${q.Type === 'long' ? '' : 'bg-[#ff4d4f]'}`}>\r\n            <Switch\r\n              checkedChildren=\"long\"\r\n              unCheckedChildren=\"short\"\r\n              checked={q.Type === 'long'}\r\n              onChange={(v) => (q.Type = v ? 'long' : 'short')}\r\n              disabled={q.IsSubmit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td className=\"font-medium\">{q.GetField(f.initialprice).WrapperView}</td>\r\n      <td>\r\n        <div className=\"flex items-center\">\r\n          <div\r\n            className={`ml-2 mr-1 cursor-pointer text-base text-[#1890ff]\r\n              ${!q.IsSubmit ? '' : 'invisible'}`}\r\n            onClick={() => q.Submit('profit')}\r\n          >\r\n            <CheckCircleOutlined />\r\n          </div>\r\n          <div>\r\n            <div\r\n              className={`font-medium ${\r\n                q.Type === 'long' ? 'text-[#1890ff]' : 'text-[#ff4d4f]'\r\n              }`}\r\n            >\r\n              {q.GetField(f.takeprofitprice).WrapperView}\r\n            </div>\r\n            <div className={`pt-1`}>\r\n              {q.GetField(f.takeprofitprecent).WrapperView}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <div className=\"flex items-center\">\r\n          <div\r\n            className={`ml-2 mr-1 cursor-pointer text-base text-[#ff4d4f]\r\n            ${!q.IsSubmit ? '' : 'invisible'}`}\r\n            onClick={() => q.Submit('loss')}\r\n          >\r\n            <CheckCircleOutlined />\r\n          </div>\r\n          <div>\r\n            <div\r\n              className={`font-medium ${\r\n                q.Type === 'short' ? 'text-[#1890ff]' : 'text-[#ff4d4f]'\r\n              }`}\r\n            >\r\n              {q.GetField(f.stoplossprice).WrapperView}\r\n            </div>\r\n            <div className=\"pt-1\">\r\n              {q.GetField(f.stoplosspercent).WrapperView}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n\r\n      <td className=\"non-input\">\r\n        <div>\r\n          {/* Risk Reward */}\r\n          <div className=\"flex font-medium\">\r\n            <span className=\"text-[#ff4d4f]\">1</span>\r\n            <span className=\"mx-2\">:</span>\r\n            <span className=\"text-[#1890ff]\">\r\n              {model.RewardRisk_Ratio.toFixed(1)}\r\n            </span>\r\n          </div>\r\n\r\n          {/* Earn */}\r\n          {q.IsSubmit ? (\r\n            <div\r\n              className={`font-medium mt-2\r\n            ${model.EarnPercent > 0 ? 'text-[#1890ff]' : 'text-[#ff4d4f]'}`}\r\n            >\r\n              {model.EarnPercent}\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport { Button, message } from 'antd'\r\nimport * as util from './DictVMUtil'\r\nimport * as itemUtil from '../base/BaseVMUtil'\r\n\r\nimport * as commandType from '../../../user/command/base/CommandType'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as commandUtil from '../../../../../../util/commandUtil'\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      CurrentItem: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id\r\n  }\r\n\r\n  get IsCreator() {\r\n    return this.ModelItem.IsCreator\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    }\r\n    return this.items\r\n  }\r\n  set Items(v) {\r\n    this.items = v\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func, (v) => (this.OnSet_Items_Func = v))\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = this.ModelItem.AddItem()\r\n    var qI = itemUtil.get(q, this)\r\n\r\n    this.Items.push(qI)\r\n    return qI\r\n  }\r\n\r\n  CurrentItem = undefined\r\n\r\n  summary\r\n  get Summary() {\r\n    if (!this.summary) {\r\n      this.summary = util.GetSummary(this)\r\n    }\r\n    return this.summary\r\n  }\r\n\r\n  get InCoin() {\r\n    return this.ModelItem.InCoin\r\n  }\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return commandUtil.Validate(undefined, { type: commandType.content, level })\r\n  }\r\n\r\n  // view\r\n  // table\r\n  get ItemsView() {\r\n    return this.Items?.map((x) => x.TitleView)\r\n  }\r\n\r\n  get View() {\r\n    return (\r\n      <div className=\"flex\">\r\n        {\r\n          // this.IsCreator &&\r\n          true ? (\r\n            <div className=\"mr-2\">\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                className=\"btn-success\"\r\n                onClick={this.AddItem}\r\n              >\r\n                +\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )\r\n        }\r\n\r\n        <div>\r\n          <table className=\"table table-bordered table-fixed\">\r\n            <thead className=\"bg-[#e9ecef]\">\r\n              <tr>\r\n                <th width=\"30\" />\r\n                <th width=\"38\" />\r\n                {!this.InCoin ? <th width=\"80\">Coin</th> : undefined}\r\n                <th width=\"80\">Type</th>\r\n                <th className=\"w-1/4\">Inital Price</th>\r\n                <th className=\"w-1/4\">Take Profit</th>\r\n                <th className=\"w-1/4\">Stop Loss</th>\r\n                <th className=\"w-1/4\">Risk/Reward</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.Items ? this.Summary.RowView : undefined}\r\n              {this.Items?.map((x) => x.RowView)}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport { Button, message } from 'antd'\r\nimport * as util from './SummaryVMUtil'\r\nimport * as f from '../field/Field'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class SummaryVM {\r\n  constructor() {\r\n    makeObservable(this, {})\r\n  }\r\n\r\n  get EarnPercent() {\r\n    return util.GetEarnPercent(this)\r\n  }\r\n\r\n  get InCoin() {\r\n    return this.Dict.InCoin\r\n  }\r\n\r\n  // view\r\n  get RowView() {\r\n    return util.GetRowView(this)\r\n  }\r\n}\r\n","import { SummaryVM } from './SummaryVM'\r\n\r\nimport * as inputUtil from '../../../../../../util/inputUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new SummaryVM()\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\nexport const GetEarnPercent = (q) => {\r\n  var list = q.Dict.Items\r\n\r\n  if (!list) return undefined\r\n\r\n  var qI = list\r\n    .filter((x) => {\r\n      return x.ModelItem.EarnPercent\r\n    })\r\n    .reduce((acc, a) => {\r\n      return acc + a.ModelItem.EarnPercent\r\n    }, 0)\r\n\r\n  return qI\r\n}\r\n\r\n// view\r\nexport const GetRowView = (q) => {\r\n  var earnPercent = q.EarnPercent\r\n\r\n  return (\r\n    <tr key=\"summary\">\r\n      <td />\r\n      {!q.InCoin ? <td /> : undefined}\r\n      <td\r\n        colSpan={q.InCoin ? 2 : 2}\r\n        className=\"non-input text-[#1890ff] font-semibold\"\r\n      >\r\n        SUMMARY\r\n      </td>\r\n      <td></td>\r\n      <td></td>\r\n      <td></td>\r\n      <td className=\"non-input\">\r\n        {earnPercent ? (\r\n          <div\r\n            className={`font-medium\r\n            ${earnPercent > 0 ? 'text-[#1890ff]' : 'text-[#ff4d4f]'}`}\r\n          >\r\n            {earnPercent}\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n","import { DictVM } from './DictVM'\r\nimport { SelectVM } from '../../../../../select/SelectVM'\r\nimport * as itemUtil from '../base/BaseVMUtil'\r\nimport * as summaryUtil from '../summary/SummaryVMUtil'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM()\r\n\r\n  qI.ModelItem = q\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined\r\n  q.IsGet_Items = true\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map((x) => itemUtil.get(x, q))\r\n    q.IsGet_Items = false\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(host.OnSet_Items_Func, () => setObj(host.Items), false)\r\n}\r\n\r\nexport const GetSummary = (q) => {\r\n  return summaryUtil.get(q)\r\n}\r\n","import { GroupVM } from './GroupVM'\r\nimport * as futureDictUtil from '../future/dict/DictVMUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new GroupVM()\r\n  qI.ModelItem = q\r\n  qI.Dict = dict\r\n  return qI\r\n}\r\n\r\n// Property\r\nexport const GetFutureDict = (q) => {\r\n  return futureDictUtil.get(q.ModelItem.FutureDict, q)\r\n}\r\n\r\n// view\r\nexport const GetView = (q) => {\r\n  return (\r\n    <div>\r\n      {/* Future */}\r\n      <div>\r\n        <div className=\"text-lg font-medium\">Future</div>\r\n\r\n        <div className=\"mt-2\">{q.FutureDict.View}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { LinkOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { BaseVM } from './BaseVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete'\r\nimport * as f from '../field/Field'\r\nimport * as fieldUtil from '../../../../../field/FieldUtil'\r\nimport * as infoUtil from '../info/base/BaseVMUtil'\r\nimport * as tradeGroupUtil from '../../../trade/group/GroupVMUtil'\r\n\r\nimport * as inputUtil from '../../../../../../util/inputUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM'\r\nimport { Switch } from 'antd'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new BaseVM()\r\n  qI.ModelItem = q\r\n  qI.Dict = dict\r\n  return qI\r\n}\r\n\r\n// Property\r\n// field\r\nexport const GetFields = (q) => {\r\n  var inputs = f.List()\r\n\r\n  var host = q.ModelItem\r\n  var fields = []\r\n\r\n  inputs.forEach((x, i) => {\r\n    var fName = f.GetName(x)\r\n\r\n    var qI\r\n    qI = fieldUtil.get(\r\n      () => host[fName],\r\n      (v) => {\r\n        host[fName] = v\r\n      },\r\n      q.Save\r\n    )\r\n\r\n    // qI.PreReady = () => q.Validate('edit') && pmDataVM().ViewMode === 'edit'\r\n    // qI.PreEdit = () => q.Validate('edit')\r\n\r\n    var validate = () => true\r\n    qI.PreReady = () => {\r\n      return validate() && pmDataVM().ViewMode === 'edit'\r\n    }\r\n    qI.PreEdit = validate\r\n\r\n    qI.Key = x\r\n    fields.push(qI)\r\n  })\r\n\r\n  return fields\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete()\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete()\r\n  }\r\n\r\n  return qI\r\n}\r\n\r\n// trade\r\nexport const GetTradeGroup = (q) => {\r\n  var qI = tradeGroupUtil.get(q.ModelItem.TradeGroup, q)\r\n  return qI\r\n}\r\n\r\n// info\r\nexport const Handle_Info = (q) => {\r\n  if (q.IsGet_Info) return\r\n  q.IsGet_Info = true\r\n\r\n  const setObj = (data) => {\r\n    q.Info = infoUtil.get(data, q)\r\n    q.IsGet_Info = false\r\n  }\r\n\r\n  var host = q.ModelItem\r\n\r\n  if (host.Info) {\r\n    setObj(host.Info)\r\n  } else {\r\n    genUtil.Add_2(host.OnGet_Info_Func, () => setObj(host.Info))\r\n  }\r\n}\r\n\r\n// view\r\nexport const GetTitleView = (q) => {\r\n  return (\r\n    <div key={q.id}>\r\n      {/* Title */}\r\n      <div className={`flex items-center ${q.Css}`}>\r\n        <div className=\"mx-1\">\r\n          {\r\n            // q.Validate('edit') &&\r\n            pmDataVM().ViewMode === 'edit' || q.GetField(f.name).OnEdit\r\n              ? q.DeleteVM.View\r\n              : ''\r\n          }\r\n        </div>\r\n\r\n        <div className=\"flex items-center\">\r\n          <Link to={`./coin/${q.id}`} className=\"mx-1 -mt-1\">\r\n            <LinkOutlined />\r\n          </Link>\r\n          <div>{q.GetField(f.name).WrapperView}</div>\r\n          <div>{q.GetField(f.code).WrapperView}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const GetContentView = (q) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <div key={q.id} className=\"-ml-2\">\r\n          {/* <span className=\"h4\">{q.GetField(f.name).Value}</span> */}\r\n          <div className=\"h4\">{q.GetField(f.name).WrapperView}</div>\r\n\r\n          <div className=\"h5\">{q.GetField(f.code).WrapperView}</div>\r\n\r\n          <div className=\"h5\">{q.GetField(f.ref_rationame).WrapperView}</div>\r\n        </div>\r\n\r\n        <div className=\"mt-4\">{q.TradeGroup.View}</div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport { Button, message } from 'antd'\r\nimport * as util from './DictVMUtil'\r\nimport * as itemUtil from '../base/BaseVMUtil'\r\n\r\nimport * as commandType from '../../../user/command/base/CommandType'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as commandUtil from '../../../../../../util/commandUtil'\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      CurrentItem: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id\r\n  }\r\n\r\n  get IsCreator() {\r\n    return this.ModelItem.IsCreator\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    }\r\n    return this.items\r\n  }\r\n  set Items(v) {\r\n    this.items = v\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func, (v) => (this.OnSet_Items_Func = v))\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = this.ModelItem.AddItem()\r\n    var qI = itemUtil.get(q, this)\r\n\r\n    this.Items.push(qI)\r\n    return qI\r\n  }\r\n\r\n  CurrentItem = undefined\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return commandUtil.Validate(undefined, { type: commandType.content, level })\r\n  }\r\n\r\n  // view\r\n  // table\r\n  get ItemsView() {\r\n    return this.Items?.map((x) => x.TitleView)\r\n  }\r\n\r\n  get View() {\r\n    return (\r\n      <div className=\"flex\">\r\n        {/* Items */}\r\n        <div className=\"flex\">\r\n          {\r\n            // this.IsCreator &&\r\n            true ? (\r\n              <div className=\"mr-2\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  className=\"btn-success\"\r\n                  onClick={this.AddItem}\r\n                >\r\n                  +\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )\r\n          }\r\n\r\n          <div className=\"flex-1\">{this.ItemsView}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { DictVM } from './DictVM'\r\nimport { SelectVM } from '../../../../../select/SelectVM'\r\nimport * as itemUtil from '../base/BaseVMUtil'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM()\r\n\r\n  qI.ModelItem = q\r\n  qI.Dict = dict\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined\r\n  q.IsGet_Items = true\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map((x) => itemUtil.get(x, q))\r\n    q.IsGet_Items = false\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(host.OnSet_Items_Func, () => setObj(host.Items), false)\r\n}\r\n","import { GroupVM } from './GroupVM'\r\nimport * as itemDictUtil from '../base/dict/DictVMUtil'\r\nimport * as baseUtil from '../../coin/base/base/BaseVMUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new GroupVM()\r\n  qI.ModelItem = q\r\n  qI.Dict = dict\r\n  return qI\r\n}\r\n\r\n// Property\r\nexport const GetItemDict = (q) => {\r\n  return itemDictUtil.get(q.ModelItem.ItemDict, q)\r\n}\r\n\r\nexport const Handle_CurrentItem = (q) => {\r\n  if (q.IsGet_CurrentItem) return undefined\r\n  q.IsGet_CurrentItem = true\r\n\r\n  const setObj = (data) => {\r\n    q.CurrentItem = baseUtil.get(data, q)\r\n    q.IsGet_CurrentItem = false\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.CurrentItem) {\r\n    setObj(host.CurrentItem)\r\n  } else {\r\n    genUtil.Add_2(host.OnSet_CurrentItem_Func, () => setObj(host.CurrentItem))\r\n  }\r\n}\r\n\r\n// view\r\nexport const GetView = (q) => {\r\n  return (\r\n    <div>\r\n      {/* Owner */}\r\n      <div>\r\n        <div className=\"text-lg font-medium\">Owned</div>\r\n\r\n        <div className=\"mt-2\">{q.Owner.View}</div>\r\n      </div>\r\n\r\n      {/* Buy */}\r\n      <div>\r\n        <div className=\"text-lg font-medium\">Buy</div>\r\n\r\n        <div className=\"mt-2\">{q.Buy.View}</div>\r\n      </div>\r\n\r\n      {/* Creator */}\r\n      <div className=\"mt-4\">\r\n        <div className=\"text-lg font-medium\">Created</div>\r\n\r\n        <div className=\"mt-2\">{q.Creator.View}</div>\r\n      </div>\r\n\r\n      {/* Store */}\r\n      <div className=\"mt-4\">\r\n        <div className=\"text-lg font-medium\">Store</div>\r\n\r\n        <div className=\"mt-2\">{q.Store.View}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../model/PMData'\r\nimport { PMDataVM } from './PMDataVM'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as layoutUtil from '../../entity/layout/layout/LayoutUtil'\r\n\r\n// user\r\nimport * as userDictUtil from '../../../user/dict/User_DictVMUtil'\r\n\r\n// role\r\nimport * as roleDictUtil from '../../entity/user/role/dict/DictVMUtil'\r\n\r\n// coin\r\nimport * as coinGroupUtil from '../../entity/coin/group/GroupVMUtil'\r\n\r\n// trade\r\nimport * as tradeGroupUtil from '../../entity/trade/group/GroupVMUtil'\r\n\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new PMDataVM()\r\n\r\n  return qI\r\n}\r\n\r\n// Property\r\n// layout\r\nexport const GetLayout = (q) => {\r\n  return layoutUtil.get()\r\n}\r\n// user\r\nexport const GetUserDict = (data) => {\r\n  var qI = userDictUtil.get(pmData().UserDict, data)\r\n\r\n  qI.ViewRender = () => (\r\n    <div className=\"ud__wrapper\">\r\n      <div className=\"ud__dec f\">\r\n        <div className=\"f1\" />\r\n        <div>\r\n          <div className=\"ud__main__wrapper\">{qI.MainView}</div>\r\n          {qI.ModalView}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return qI\r\n}\r\n\r\n// role\r\nexport const GetRoleDict = (data) => {\r\n  return roleDictUtil.get(pmData().RoleDict, data)\r\n}\r\n\r\n// coin\r\nexport const GetCoinGroup = (q) => {\r\n  return coinGroupUtil.get(pmData().CoinGroup, q)\r\n}\r\n\r\n// trade\r\nexport const GetTradeGroup = (q) => {\r\n  return tradeGroupUtil.get(pmData().TradeGroup, q)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { Button, Switch } from 'antd'\r\nimport './Header.css'\r\nimport { Header } from './Header'\r\nimport { Link } from 'react-router-dom'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM'\r\nimport { PMData } from '../../../single/model/PMData'\r\nimport * as vm from '../../view/ViewMode'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\nconst pmData = () => PMData.Instance\r\n\r\nclass HeaderView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    var { store } = this.props\r\n    if (!store) {\r\n      this.state = new Header()\r\n    } else {\r\n      this.state = store\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state\r\n    var qI = pmDataVM()\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* UserDict */}\r\n          {/* {pmDataVM().UserDict.View} */}\r\n\r\n          <div className=\"flex mt-2\">\r\n            <div className=\"ml-8\">\r\n              <Switch\r\n                checkedChildren=\"view\"\r\n                unCheckedChildren=\"edit\"\r\n                checked={qI.ViewMode === vm.view}\r\n                onChange={(v) => {\r\n                  qI.ViewMode = v ? vm.view : vm.edit\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {/* <div className='ml-4 w-32'>\r\n              {pmDataVM().UserDict.Demo.View}\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(HeaderView)\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Pagination } from 'antd';\r\nimport './Body.css'\r\nimport { Body } from './Body';\r\n\r\nclass BodyView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Body()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='body__wrapper'>\r\n          {data.MainView}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(BodyView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Footer.css'\r\nimport { Footer } from './Footer';\r\n\r\nclass FooterView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Footer()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='footer__wrapper'>\r\n          Footer\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FooterView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, message, Switch } from 'antd';\r\nimport './Layout.css'\r\nimport { Layout, Vi_Comp } from './Layout';\r\nimport HeaderView from '../header/HeaderView';\r\nimport BodyView from '../body/BodyView';\r\nimport FooterView from '../footer/FooterView';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as vs from '../../view/ViewState'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as vt from '../../view/ViewType'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass LayoutView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Layout()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const { type, meta, type2 } = this.props.match.params;\r\n    vt.Handle(type, meta, type2);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    var data = this.state;\r\n    const { type, meta, type2 } = this.props.match.params;\r\n    vt.Handle(type, meta, type2);\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='layout__wrapper'>\r\n          {/* Header */}\r\n          <HeaderView store={data.Header} />\r\n\r\n          {/* Body */}\r\n          <BodyView store={data.Body} />\r\n\r\n          {/* Footer */}\r\n          {/* <FooterView store={data.Footer} /> */}\r\n\r\n          <div className='h-36' />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(LayoutView));\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { PMDataVM } from './PMDataVM';\r\n// import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport LayoutView from '../../entity/layout/layout/LayoutView';\r\nimport './PMData.css'\r\n\r\nclass PMDataView extends Component {\r\n  render() {\r\n    var data = this.data;\r\n\r\n    return (\r\n      <>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Route path='/:type?/:meta?/:type2?' exact component={LayoutView} />\r\n        </Router>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(PMDataView);\r\n","import { makeObservable, observable, action } from 'mobx'\r\nimport { PMData } from '../model/PMData'\r\nimport * as util from './PMDataVMUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport { Route, BrowserRouter, HashRouter, Switch } from 'react-router-dom'\r\nimport LayoutView from '../../entity/layout/layout/LayoutView'\r\nimport PMDataView from './PMDataView'\r\nimport * as vt from '../../entity/view/ViewType'\r\nimport * as vm from '../../entity/view/ViewMode'\r\n\r\nexport class PMDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isAdmin: observable,\r\n      routeData: observable,\r\n      viewMode: observable,\r\n    })\r\n  }\r\n\r\n  static instance\r\n  static get Instance() {\r\n    if (!this.instance) {\r\n      this.instance = util.get()\r\n    }\r\n    return this.instance\r\n  }\r\n  static set Instance(v) {\r\n    this.instance = v\r\n  }\r\n\r\n  get pmData() {\r\n    return PMData.Instance\r\n  }\r\n\r\n  // route\r\n  routeData = undefined\r\n  get RouteData() {\r\n    if (!this.routeData) {\r\n      this.routeData = this.pmData.RouteData\r\n    }\r\n    return this.routeData\r\n  }\r\n  set RouteData(v) {\r\n    this.routeData = v\r\n    this.pmData.RouteData = v\r\n\r\n    if (v[0].type === 'addin') {\r\n      this.AddinGroup.CurrentItem = undefined\r\n    }\r\n  }\r\n\r\n  // Layout\r\n  layout\r\n  get Layout() {\r\n    if (!this.layout) {\r\n      this.layout = util.GetLayout(this)\r\n    }\r\n    return this.layout\r\n  }\r\n\r\n  OnSet_IsAdmin_Func_Dict = []\r\n\r\n  // User\r\n  isAdmin = undefined\r\n  get IsAdmin() {\r\n    return this.isAdmin\r\n  }\r\n  set IsAdmin(v) {\r\n    this.isAdmin = v\r\n\r\n    genUtil.Handle(\r\n      this.OnSet_IsAdmin_Func_Dict,\r\n      (v) => (this.OnSet_IsAdmin_Func_Dict = v)\r\n    )\r\n  }\r\n\r\n  // Data\r\n  // UserDict\r\n  userDict\r\n  get UserDict() {\r\n    if (!this.userDict) {\r\n      this.userDict = util.GetUserDict(this)\r\n    }\r\n    return this.userDict\r\n  }\r\n\r\n  // role\r\n  roleDict\r\n  get RoleDict() {\r\n    if (!this.roleDict) {\r\n      this.roleDict = util.GetRoleDict(this)\r\n    }\r\n    return this.roleDict\r\n  }\r\n\r\n  // coin\r\n  coinGroup\r\n  get CoinGroup() {\r\n    if (!this.coinGroup) {\r\n      this.coinGroup = util.GetCoinGroup(this)\r\n    }\r\n    return this.coinGroup\r\n  }\r\n\r\n  tradeGroup\r\n  get TradeGroup() {\r\n    if (!this.tradeGroup) {\r\n      this.tradeGroup = util.GetTradeGroup(this)\r\n    }\r\n    return this.tradeGroup\r\n  }\r\n\r\n  // View\r\n  viewMode = undefined\r\n  get ViewMode() {\r\n    if (this.viewMode === undefined) {\r\n      this.viewMode = this.pmData.ViewMode\r\n    }\r\n    return this.viewMode\r\n  }\r\n  set ViewMode(v) {\r\n    this.viewMode = v\r\n    this.pmData.ViewMode = v\r\n  }\r\n\r\n  get MainView() {\r\n    return <PMDataView store={this} />\r\n  }\r\n\r\n  get WrapperView() {\r\n    return this.MainView\r\n  }\r\n\r\n  UnAuthorized_View = (\r\n    <span className=\"text-[#ff4d4f] font-medium text-sm\">\r\n      Bạn không có quyền truy cập View hiện tại!\r\n    </span>\r\n  )\r\n}\r\n","import './App.css'\r\nimport 'antd/dist/antd.css'\r\nimport { Component } from 'react'\r\n\r\nimport { PMDataVM } from './model/main/single/form/PMDataVM'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <>{pmDataVM().WrapperView}</>\r\n  }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}